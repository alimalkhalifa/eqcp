syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "proto/character.proto";

package pb;

service CharacterService {
    rpc CharacterSearch(CharacterSearchRequest) returns (CharacterSearchResponse) {
		option (google.api.http) = {
			get: "/v1/character/search"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Search characters with provided values.\nIf your own account ID, allowed at any status.\nOtherwise, permission based on: #petitioninfo (default: 20)";
			summary: "Search characters";
			tags: "Character";
			security: {
				security_requirement: {
					key: "Token";	
				}
			};
			responses: {
				key: "200"
				value: {
					description: "character details"
					schema: { json_schema: { ref: "#/definitions/pbCharacterSearchResponse" } }
				}
			}
		};
	}
	rpc CharacterCreate(CharacterCreateRequest) returns (CharacterCreateResponse) {
		option (google.api.http) = {
			post: "/v1/character"
			body: "*"
		}; 
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Create a new character.\nIn nearly all situations, you likely do not want to use this.\nPermission based on: #mysql (default: 255)";
			summary: "Create a new character";
			tags: "Character";
			security: {
				security_requirement: {
					key: "Token";	
				}
			};
			responses: {
				key: "200"
				value: {
					description: "id of new character"
					schema: { json_schema: { ref: "#/definitions/pbCharacterCreateResponse" } }
				}
			}
		};
	}
	rpc CharacterRead(CharacterReadRequest) returns (CharacterReadResponse) {
		option (google.api.http) = {
			get: "/v1/character/{id}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Read character details.\nIf your own account ID, allowed at any status.\nOtherwise, permission based on #petitioninfo (default: 20)";
			summary: "Read character info";
			tags: "Character";
			security: {
				security_requirement: {
					key: "Token";	
				}
			};
			responses: {
				key: "200"
				value: {
					description: "bug details"
					schema: { json_schema: { ref: "#/definitions/pbCharacterReadResponse" } }
				}
			}
		};
	}
	rpc CharacterUpdate(CharacterUpdateRequest) returns (CharacterUpdateResponse) {
		option (google.api.http) = {
			put: "/v1/character/{id}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Update character details.\nPermission based on: #mysql (default: 255)";
			summary: "Update character details";
			tags: "Character";
			security: {
				security_requirement: {
					key: "Token";	
				}
			};
			responses: {
				key: "200"
				value: {
					description: "rows affected"
					schema: { json_schema: { ref: "#/definitions/pbCharacterUpdateResponse" } }
				}
			}
		};
	}
	rpc CharacterDelete(CharacterDeleteRequest) returns (CharacterDeleteResponse) {
		option (google.api.http) = {
			delete: "/v1/character/{id}"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Delete a character.\nPermission based on: #mysql (default: 255)";
			summary: "Delete a character";
			tags: "Character";
			security: {
				security_requirement: {
					key: "Token";	
				}
			};
			responses: {
				key: "200"
				value: {
					description: "rows affected"
					schema: { json_schema: { ref: "#/definitions/pbCharacterDeleteResponse" } }
				}
			}
		};
	}
	rpc CharacterPatch(CharacterPatchRequest) returns (CharacterPatchResponse) {
		option (google.api.http) = {
			patch: "/v1/character/{id}"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			description: "Edit a character field.\nPermission based on: #mysql (default: 255)";
			summary: "Edit character field";
			tags: "Character";
			security: {
				security_requirement: {
					key: "Token";	
				}
			};
			responses: {
				key: "200"
				value: {
					description: "rows affected"
					schema: { json_schema: { ref: "#/definitions/pbCharacterPatchResponse" } }
				}
			}
		};
	}
}

message CharacterSearchRequest {
	map<string,string> values = 1;
	int64 limit = 2;
	int64 offset = 3;
    string orderby = 4; //name
	bool orderdesc = 5;
}

message CharacterSearchResponse {
	repeated Character Characters = 1;
	int64 total = 2;
}

message CharacterCreateRequest {
	map<string,string> values = 2;
}

message CharacterCreateResponse {
	int64 id = 1;
}

message CharacterReadRequest {
	int64 id = 1;
}

message CharacterReadResponse {
	Character character = 1;
}

message CharacterUpdateRequest {
	int64 id = 1;
	map<string,string> values = 2;
}

message CharacterUpdateResponse {
	int64 rowsaffected = 1;
}

message CharacterDeleteRequest {
	int64 id = 1;
}

message CharacterDeleteResponse {
	int64 rowsaffected = 1;
}

message CharacterPatchRequest {
	int64 id = 1;
	string key = 2;
	string value = 3;
}

message CharacterPatchResponse {
	int64 rowsaffected = 1;
}