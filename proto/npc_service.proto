syntax = "proto3";

import "google/api/annotations.proto";
//import "google/api/timestamp.proto";
import "proto/npc.proto";

package pb;

service NpcService {
    rpc NpcSearch(NpcSearchRequest) returns (NpcSearchResponse) {
		option (google.api.http) = {
			get: "/v1/npc/search/{name}"
		};
	}
	rpc NpcCreate(NpcCreateRequest) returns (NpcCreateResponse) {
		option (google.api.http) = {
			post: "/v1/npc"
			body: "*"
		}; 
	}
	rpc NpcRead(NpcReadRequest) returns (NpcReadResponse) {
		option (google.api.http) = {
			get: "/v1/npc/{id}"
		};
	}
	rpc NpcUpdate(NpcUpdateRequest) returns (NpcUpdateResponse) {
		option (google.api.http) = {
			put: "/v1/npc/{id}"
			body: "*"
		};
	}
	rpc NpcDelete(NpcDeleteRequest) returns (NpcDeleteResponse) {
		option (google.api.http) = {
			delete: "/v1/npc/{id}"
		};
	}
	rpc NpcPatch(NpcPatchRequest) returns (NpcPatchResponse) {
		option (google.api.http) = {
			patch: "/v1/npc/{id}"
			body: "*"
		};
	}
}
message NpcSearchRequest {
	string name = 1;
	int64 limit = 2;
	int64 offset = 3;
	string order_by = 4;
	bool order_desc = 5;
}

message NpcSearchResponse {
	repeated Npc Npcs = 1;
	int64 limit = 2;
	int64 offset = 3;
	int64 total = 4;
	string order_by = 5;
	bool order_desc = 6;
}

message NpcCreateRequest {
	Npc npc = 1;
}

message NpcCreateResponse {
	int64 id = 1;
}

message NpcReadRequest {
	int64 id = 1;
}

message NpcReadResponse {
	Npc npc = 1;
}

message NpcUpdateRequest {
	int64 id = 1;
	Npc npc = 2;

}

message NpcUpdateResponse {
}

message NpcDeleteRequest {
	int64 id = 1;
}

message NpcDeleteResponse {
}

message NpcPatchRequest {
	int64 id = 1;
	string key = 2;
	string value = 3;
}

message NpcPatchResponse {
}