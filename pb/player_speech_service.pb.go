// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/player_speech_service.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlayerSpeechSearchRequest struct {
	Values               map[string]string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Limit                int64             `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64             `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Orderby              string            `protobuf:"bytes,4,opt,name=orderby,proto3" json:"orderby,omitempty"`
	Orderdesc            bool              `protobuf:"varint,5,opt,name=orderdesc,proto3" json:"orderdesc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlayerSpeechSearchRequest) Reset()         { *m = PlayerSpeechSearchRequest{} }
func (m *PlayerSpeechSearchRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechSearchRequest) ProtoMessage()    {}
func (*PlayerSpeechSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{0}
}

func (m *PlayerSpeechSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechSearchRequest.Unmarshal(m, b)
}
func (m *PlayerSpeechSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechSearchRequest.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechSearchRequest.Merge(m, src)
}
func (m *PlayerSpeechSearchRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechSearchRequest.Size(m)
}
func (m *PlayerSpeechSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechSearchRequest proto.InternalMessageInfo

func (m *PlayerSpeechSearchRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *PlayerSpeechSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PlayerSpeechSearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PlayerSpeechSearchRequest) GetOrderby() string {
	if m != nil {
		return m.Orderby
	}
	return ""
}

func (m *PlayerSpeechSearchRequest) GetOrderdesc() bool {
	if m != nil {
		return m.Orderdesc
	}
	return false
}

type PlayerSpeechSearchResponse struct {
	PlayerSpeechs        []*PlayerSpeech `protobuf:"bytes,1,rep,name=PlayerSpeechs,proto3" json:"PlayerSpeechs,omitempty"`
	Total                int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PlayerSpeechSearchResponse) Reset()         { *m = PlayerSpeechSearchResponse{} }
func (m *PlayerSpeechSearchResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechSearchResponse) ProtoMessage()    {}
func (*PlayerSpeechSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{1}
}

func (m *PlayerSpeechSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechSearchResponse.Unmarshal(m, b)
}
func (m *PlayerSpeechSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechSearchResponse.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechSearchResponse.Merge(m, src)
}
func (m *PlayerSpeechSearchResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechSearchResponse.Size(m)
}
func (m *PlayerSpeechSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechSearchResponse proto.InternalMessageInfo

func (m *PlayerSpeechSearchResponse) GetPlayerSpeechs() []*PlayerSpeech {
	if m != nil {
		return m.PlayerSpeechs
	}
	return nil
}

func (m *PlayerSpeechSearchResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type PlayerSpeechCreateRequest struct {
	Values               map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlayerSpeechCreateRequest) Reset()         { *m = PlayerSpeechCreateRequest{} }
func (m *PlayerSpeechCreateRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechCreateRequest) ProtoMessage()    {}
func (*PlayerSpeechCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{2}
}

func (m *PlayerSpeechCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechCreateRequest.Unmarshal(m, b)
}
func (m *PlayerSpeechCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechCreateRequest.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechCreateRequest.Merge(m, src)
}
func (m *PlayerSpeechCreateRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechCreateRequest.Size(m)
}
func (m *PlayerSpeechCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechCreateRequest proto.InternalMessageInfo

func (m *PlayerSpeechCreateRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type PlayerSpeechCreateResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechCreateResponse) Reset()         { *m = PlayerSpeechCreateResponse{} }
func (m *PlayerSpeechCreateResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechCreateResponse) ProtoMessage()    {}
func (*PlayerSpeechCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{3}
}

func (m *PlayerSpeechCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechCreateResponse.Unmarshal(m, b)
}
func (m *PlayerSpeechCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechCreateResponse.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechCreateResponse.Merge(m, src)
}
func (m *PlayerSpeechCreateResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechCreateResponse.Size(m)
}
func (m *PlayerSpeechCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechCreateResponse proto.InternalMessageInfo

func (m *PlayerSpeechCreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PlayerSpeechReadRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechReadRequest) Reset()         { *m = PlayerSpeechReadRequest{} }
func (m *PlayerSpeechReadRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechReadRequest) ProtoMessage()    {}
func (*PlayerSpeechReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{4}
}

func (m *PlayerSpeechReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechReadRequest.Unmarshal(m, b)
}
func (m *PlayerSpeechReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechReadRequest.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechReadRequest.Merge(m, src)
}
func (m *PlayerSpeechReadRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechReadRequest.Size(m)
}
func (m *PlayerSpeechReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechReadRequest proto.InternalMessageInfo

func (m *PlayerSpeechReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PlayerSpeechReadResponse struct {
	PlayerSpeech         *PlayerSpeech `protobuf:"bytes,1,opt,name=playerSpeech,proto3" json:"playerSpeech,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PlayerSpeechReadResponse) Reset()         { *m = PlayerSpeechReadResponse{} }
func (m *PlayerSpeechReadResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechReadResponse) ProtoMessage()    {}
func (*PlayerSpeechReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{5}
}

func (m *PlayerSpeechReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechReadResponse.Unmarshal(m, b)
}
func (m *PlayerSpeechReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechReadResponse.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechReadResponse.Merge(m, src)
}
func (m *PlayerSpeechReadResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechReadResponse.Size(m)
}
func (m *PlayerSpeechReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechReadResponse proto.InternalMessageInfo

func (m *PlayerSpeechReadResponse) GetPlayerSpeech() *PlayerSpeech {
	if m != nil {
		return m.PlayerSpeech
	}
	return nil
}

type PlayerSpeechUpdateRequest struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Values               map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlayerSpeechUpdateRequest) Reset()         { *m = PlayerSpeechUpdateRequest{} }
func (m *PlayerSpeechUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechUpdateRequest) ProtoMessage()    {}
func (*PlayerSpeechUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{6}
}

func (m *PlayerSpeechUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechUpdateRequest.Unmarshal(m, b)
}
func (m *PlayerSpeechUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechUpdateRequest.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechUpdateRequest.Merge(m, src)
}
func (m *PlayerSpeechUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechUpdateRequest.Size(m)
}
func (m *PlayerSpeechUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechUpdateRequest proto.InternalMessageInfo

func (m *PlayerSpeechUpdateRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerSpeechUpdateRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type PlayerSpeechUpdateResponse struct {
	Rowsaffected         int64    `protobuf:"varint,1,opt,name=rowsaffected,proto3" json:"rowsaffected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechUpdateResponse) Reset()         { *m = PlayerSpeechUpdateResponse{} }
func (m *PlayerSpeechUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechUpdateResponse) ProtoMessage()    {}
func (*PlayerSpeechUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{7}
}

func (m *PlayerSpeechUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechUpdateResponse.Unmarshal(m, b)
}
func (m *PlayerSpeechUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechUpdateResponse.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechUpdateResponse.Merge(m, src)
}
func (m *PlayerSpeechUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechUpdateResponse.Size(m)
}
func (m *PlayerSpeechUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechUpdateResponse proto.InternalMessageInfo

func (m *PlayerSpeechUpdateResponse) GetRowsaffected() int64 {
	if m != nil {
		return m.Rowsaffected
	}
	return 0
}

type PlayerSpeechDeleteRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechDeleteRequest) Reset()         { *m = PlayerSpeechDeleteRequest{} }
func (m *PlayerSpeechDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechDeleteRequest) ProtoMessage()    {}
func (*PlayerSpeechDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{8}
}

func (m *PlayerSpeechDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechDeleteRequest.Unmarshal(m, b)
}
func (m *PlayerSpeechDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechDeleteRequest.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechDeleteRequest.Merge(m, src)
}
func (m *PlayerSpeechDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechDeleteRequest.Size(m)
}
func (m *PlayerSpeechDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechDeleteRequest proto.InternalMessageInfo

func (m *PlayerSpeechDeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PlayerSpeechDeleteResponse struct {
	Rowsaffected         int64    `protobuf:"varint,1,opt,name=rowsaffected,proto3" json:"rowsaffected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechDeleteResponse) Reset()         { *m = PlayerSpeechDeleteResponse{} }
func (m *PlayerSpeechDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechDeleteResponse) ProtoMessage()    {}
func (*PlayerSpeechDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{9}
}

func (m *PlayerSpeechDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechDeleteResponse.Unmarshal(m, b)
}
func (m *PlayerSpeechDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechDeleteResponse.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechDeleteResponse.Merge(m, src)
}
func (m *PlayerSpeechDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechDeleteResponse.Size(m)
}
func (m *PlayerSpeechDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechDeleteResponse proto.InternalMessageInfo

func (m *PlayerSpeechDeleteResponse) GetRowsaffected() int64 {
	if m != nil {
		return m.Rowsaffected
	}
	return 0
}

type PlayerSpeechPatchRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechPatchRequest) Reset()         { *m = PlayerSpeechPatchRequest{} }
func (m *PlayerSpeechPatchRequest) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechPatchRequest) ProtoMessage()    {}
func (*PlayerSpeechPatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{10}
}

func (m *PlayerSpeechPatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechPatchRequest.Unmarshal(m, b)
}
func (m *PlayerSpeechPatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechPatchRequest.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechPatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechPatchRequest.Merge(m, src)
}
func (m *PlayerSpeechPatchRequest) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechPatchRequest.Size(m)
}
func (m *PlayerSpeechPatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechPatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechPatchRequest proto.InternalMessageInfo

func (m *PlayerSpeechPatchRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerSpeechPatchRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PlayerSpeechPatchRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PlayerSpeechPatchResponse struct {
	Rowsaffected         int64    `protobuf:"varint,1,opt,name=rowsaffected,proto3" json:"rowsaffected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerSpeechPatchResponse) Reset()         { *m = PlayerSpeechPatchResponse{} }
func (m *PlayerSpeechPatchResponse) String() string { return proto.CompactTextString(m) }
func (*PlayerSpeechPatchResponse) ProtoMessage()    {}
func (*PlayerSpeechPatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba8be4399802b3cf, []int{11}
}

func (m *PlayerSpeechPatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerSpeechPatchResponse.Unmarshal(m, b)
}
func (m *PlayerSpeechPatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerSpeechPatchResponse.Marshal(b, m, deterministic)
}
func (m *PlayerSpeechPatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerSpeechPatchResponse.Merge(m, src)
}
func (m *PlayerSpeechPatchResponse) XXX_Size() int {
	return xxx_messageInfo_PlayerSpeechPatchResponse.Size(m)
}
func (m *PlayerSpeechPatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerSpeechPatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerSpeechPatchResponse proto.InternalMessageInfo

func (m *PlayerSpeechPatchResponse) GetRowsaffected() int64 {
	if m != nil {
		return m.Rowsaffected
	}
	return 0
}

func init() {
	proto.RegisterType((*PlayerSpeechSearchRequest)(nil), "pb.PlayerSpeechSearchRequest")
	proto.RegisterMapType((map[string]string)(nil), "pb.PlayerSpeechSearchRequest.ValuesEntry")
	proto.RegisterType((*PlayerSpeechSearchResponse)(nil), "pb.PlayerSpeechSearchResponse")
	proto.RegisterType((*PlayerSpeechCreateRequest)(nil), "pb.PlayerSpeechCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "pb.PlayerSpeechCreateRequest.ValuesEntry")
	proto.RegisterType((*PlayerSpeechCreateResponse)(nil), "pb.PlayerSpeechCreateResponse")
	proto.RegisterType((*PlayerSpeechReadRequest)(nil), "pb.PlayerSpeechReadRequest")
	proto.RegisterType((*PlayerSpeechReadResponse)(nil), "pb.PlayerSpeechReadResponse")
	proto.RegisterType((*PlayerSpeechUpdateRequest)(nil), "pb.PlayerSpeechUpdateRequest")
	proto.RegisterMapType((map[string]string)(nil), "pb.PlayerSpeechUpdateRequest.ValuesEntry")
	proto.RegisterType((*PlayerSpeechUpdateResponse)(nil), "pb.PlayerSpeechUpdateResponse")
	proto.RegisterType((*PlayerSpeechDeleteRequest)(nil), "pb.PlayerSpeechDeleteRequest")
	proto.RegisterType((*PlayerSpeechDeleteResponse)(nil), "pb.PlayerSpeechDeleteResponse")
	proto.RegisterType((*PlayerSpeechPatchRequest)(nil), "pb.PlayerSpeechPatchRequest")
	proto.RegisterType((*PlayerSpeechPatchResponse)(nil), "pb.PlayerSpeechPatchResponse")
}

func init() { proto.RegisterFile("proto/player_speech_service.proto", fileDescriptor_ba8be4399802b3cf) }

var fileDescriptor_ba8be4399802b3cf = []byte{
	// 614 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x6d, 0x5a, 0xc8, 0xb6, 0xa0, 0xb0, 0x50, 0xe2, 0xb8, 0x09, 0x84, 0x3d, 0xa5, 0x05,
	0x25, 0x22, 0x20, 0x04, 0xbd, 0x00, 0x02, 0xee, 0x91, 0x2b, 0xb8, 0x56, 0x4e, 0x3c, 0x69, 0x0d,
	0x26, 0x6b, 0x76, 0x37, 0x41, 0x11, 0xe2, 0xc2, 0x2b, 0x70, 0xe2, 0x11, 0x78, 0x15, 0xae, 0xbc,
	0x02, 0xef, 0x01, 0xca, 0xda, 0x56, 0x3c, 0x5e, 0x9b, 0x1f, 0xc1, 0xcd, 0xbb, 0x33, 0x3b, 0xdf,
	0x7c, 0x5f, 0xe6, 0x9b, 0x90, 0x9b, 0x89, 0xe0, 0x8a, 0x0f, 0x93, 0x38, 0x58, 0x81, 0x38, 0x91,
	0x09, 0xc0, 0xf4, 0xec, 0x44, 0x82, 0x58, 0x46, 0x53, 0x18, 0xe8, 0x18, 0xb5, 0x93, 0x89, 0xd7,
	0x39, 0xe5, 0xfc, 0x34, 0x86, 0x61, 0x90, 0x44, 0xc3, 0x60, 0x3e, 0xe7, 0x2a, 0x50, 0x11, 0x9f,
	0xcb, 0x34, 0xc3, 0x6b, 0x57, 0x14, 0x49, 0x43, 0xec, 0x87, 0x45, 0xda, 0x63, 0x7d, 0x7f, 0xac,
	0xaf, 0x8f, 0x21, 0x10, 0xd3, 0x33, 0x1f, 0xde, 0x2e, 0x40, 0x2a, 0xfa, 0x84, 0x6c, 0x2f, 0x83,
	0x78, 0x01, 0xd2, 0xb5, 0x7a, 0x4e, 0x7f, 0x67, 0x74, 0x30, 0x48, 0x26, 0x83, 0xda, 0xf4, 0xc1,
	0x4b, 0x9d, 0xfb, 0x7c, 0xae, 0xc4, 0xca, 0xcf, 0x1e, 0xd2, 0xab, 0x64, 0x2b, 0x8e, 0xde, 0x44,
	0xca, 0xb5, 0x7b, 0x56, 0xdf, 0xf1, 0xd3, 0x03, 0xbd, 0x46, 0xb6, 0xf9, 0x6c, 0x26, 0x41, 0xb9,
	0x8e, 0xbe, 0xce, 0x4e, 0xd4, 0x25, 0xe7, 0xb9, 0x08, 0x41, 0x4c, 0x56, 0xee, 0xb9, 0x9e, 0xd5,
	0x6f, 0xf8, 0xf9, 0x91, 0x76, 0x48, 0x43, 0x7f, 0x86, 0x20, 0xa7, 0xee, 0x56, 0xcf, 0xea, 0x5f,
	0xf0, 0x37, 0x17, 0xde, 0x43, 0xb2, 0x53, 0x00, 0xa7, 0x4d, 0xe2, 0xbc, 0x86, 0x95, 0x6b, 0xe9,
	0x12, 0xeb, 0xcf, 0x75, 0x1b, 0xba, 0x21, 0xdd, 0x46, 0xc3, 0x4f, 0x0f, 0x47, 0xf6, 0x03, 0x8b,
	0xbd, 0x22, 0x5e, 0x15, 0x23, 0x99, 0xf0, 0xb9, 0x04, 0x7a, 0x9f, 0x5c, 0x2c, 0x46, 0x73, 0x21,
	0x9a, 0x65, 0x21, 0x7c, 0x9c, 0xb6, 0xc6, 0x53, 0x5c, 0x05, 0x71, 0x4e, 0x5b, 0x1f, 0xd8, 0xe7,
	0x92, 0xda, 0x4f, 0x05, 0x04, 0x0a, 0x4c, 0xb5, 0xed, 0x6a, 0xb5, 0x51, 0x7a, 0x95, 0xda, 0xff,
	0xa2, 0xc3, 0x6d, 0xac, 0x43, 0x8e, 0x95, 0xe9, 0x70, 0x89, 0xd8, 0x51, 0xa8, 0x0b, 0x39, 0xbe,
	0x1d, 0x85, 0xec, 0x80, 0xb4, 0x10, 0x7d, 0x08, 0xc2, 0x9c, 0x46, 0x39, 0x75, 0x4c, 0x5c, 0x33,
	0x35, 0x2b, 0x7b, 0x8f, 0xec, 0x26, 0x85, 0x98, 0x7e, 0x55, 0xa5, 0x2e, 0xca, 0x62, 0x5f, 0x4a,
	0x32, 0xbe, 0x48, 0xc2, 0x82, 0x8c, 0x25, 0xfc, 0xdf, 0xcb, 0x8a, 0x9e, 0xff, 0x6f, 0x59, 0x1f,
	0x63, 0x59, 0x73, 0xac, 0x8c, 0x3f, 0x23, 0xbb, 0x82, 0xbf, 0x93, 0xc1, 0x6c, 0x06, 0x53, 0x05,
	0x79, 0xd7, 0xe8, 0x8e, 0xdd, 0xc2, 0x64, 0x9f, 0x41, 0x0c, 0xb5, 0x64, 0xcb, 0x70, 0x79, 0xf2,
	0x5f, 0xc0, 0xf9, 0xf8, 0xe7, 0x1a, 0x07, 0x6a, 0xb3, 0x0f, 0xca, 0xd2, 0x66, 0x42, 0xd8, 0x15,
	0x42, 0x38, 0x05, 0x21, 0xd8, 0x23, 0x4c, 0x21, 0xab, 0xf9, 0xe7, 0x4d, 0x8d, 0xbe, 0x6e, 0x91,
	0x2b, 0xd8, 0xa5, 0x7a, 0x03, 0x52, 0x45, 0xa8, 0x69, 0x5e, 0xda, 0xfd, 0xe5, 0x9a, 0xf2, 0xae,
	0xd7, 0x85, 0xd3, 0x86, 0xd8, 0x8d, 0x8f, 0xdf, 0xbe, 0x7f, 0xb2, 0xdb, 0xb4, 0x35, 0x5c, 0xde,
	0xc9, 0x96, 0x66, 0xba, 0x33, 0x87, 0x32, 0xad, 0x9f, 0x60, 0xd4, 0xd4, 0x2a, 0x26, 0x2a, 0xb2,
	0xab, 0x89, 0x8a, 0x1d, 0xc6, 0xf6, 0x35, 0xea, 0x1e, 0x6b, 0x96, 0x51, 0x8f, 0xac, 0x43, 0x1a,
	0x93, 0x66, 0xd9, 0x43, 0x74, 0xdf, 0x70, 0xc9, 0xc6, 0x84, 0x5e, 0xa7, 0x3a, 0x98, 0x61, 0x75,
	0x35, 0x56, 0x8b, 0xee, 0x19, 0x0c, 0xdf, 0x47, 0xe1, 0x07, 0xba, 0xc0, 0xfc, 0xd2, 0x99, 0x35,
	0xf9, 0x21, 0xdf, 0x98, 0xfc, 0xf0, 0xa8, 0xb3, 0x9e, 0xc6, 0xf4, 0xbc, 0x6a, 0xcc, 0x35, 0x49,
	0x81, 0x61, 0xd3, 0xd9, 0x35, 0x61, 0x91, 0x01, 0x4c, 0x58, 0x3c, 0xf2, 0x39, 0xd5, 0xc3, 0x1a,
	0xaa, 0x82, 0x5c, 0x36, 0x26, 0x93, 0x1a, 0xe2, 0x15, 0x4d, 0xe0, 0x75, 0x6b, 0xa2, 0x98, 0xe7,
	0xa8, 0x96, 0xe7, 0x64, 0x5b, 0xff, 0xf5, 0xde, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x65,
	0x3b, 0x94, 0xdc, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlayerSpeechServiceClient is the client API for PlayerSpeechService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerSpeechServiceClient interface {
	PlayerSpeechSearch(ctx context.Context, in *PlayerSpeechSearchRequest, opts ...grpc.CallOption) (*PlayerSpeechSearchResponse, error)
	PlayerSpeechCreate(ctx context.Context, in *PlayerSpeechCreateRequest, opts ...grpc.CallOption) (*PlayerSpeechCreateResponse, error)
	PlayerSpeechRead(ctx context.Context, in *PlayerSpeechReadRequest, opts ...grpc.CallOption) (*PlayerSpeechReadResponse, error)
	PlayerSpeechUpdate(ctx context.Context, in *PlayerSpeechUpdateRequest, opts ...grpc.CallOption) (*PlayerSpeechUpdateResponse, error)
	PlayerSpeechDelete(ctx context.Context, in *PlayerSpeechDeleteRequest, opts ...grpc.CallOption) (*PlayerSpeechDeleteResponse, error)
	PlayerSpeechPatch(ctx context.Context, in *PlayerSpeechPatchRequest, opts ...grpc.CallOption) (*PlayerSpeechPatchResponse, error)
}

type playerSpeechServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlayerSpeechServiceClient(cc grpc.ClientConnInterface) PlayerSpeechServiceClient {
	return &playerSpeechServiceClient{cc}
}

func (c *playerSpeechServiceClient) PlayerSpeechSearch(ctx context.Context, in *PlayerSpeechSearchRequest, opts ...grpc.CallOption) (*PlayerSpeechSearchResponse, error) {
	out := new(PlayerSpeechSearchResponse)
	err := c.cc.Invoke(ctx, "/pb.PlayerSpeechService/PlayerSpeechSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerSpeechServiceClient) PlayerSpeechCreate(ctx context.Context, in *PlayerSpeechCreateRequest, opts ...grpc.CallOption) (*PlayerSpeechCreateResponse, error) {
	out := new(PlayerSpeechCreateResponse)
	err := c.cc.Invoke(ctx, "/pb.PlayerSpeechService/PlayerSpeechCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerSpeechServiceClient) PlayerSpeechRead(ctx context.Context, in *PlayerSpeechReadRequest, opts ...grpc.CallOption) (*PlayerSpeechReadResponse, error) {
	out := new(PlayerSpeechReadResponse)
	err := c.cc.Invoke(ctx, "/pb.PlayerSpeechService/PlayerSpeechRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerSpeechServiceClient) PlayerSpeechUpdate(ctx context.Context, in *PlayerSpeechUpdateRequest, opts ...grpc.CallOption) (*PlayerSpeechUpdateResponse, error) {
	out := new(PlayerSpeechUpdateResponse)
	err := c.cc.Invoke(ctx, "/pb.PlayerSpeechService/PlayerSpeechUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerSpeechServiceClient) PlayerSpeechDelete(ctx context.Context, in *PlayerSpeechDeleteRequest, opts ...grpc.CallOption) (*PlayerSpeechDeleteResponse, error) {
	out := new(PlayerSpeechDeleteResponse)
	err := c.cc.Invoke(ctx, "/pb.PlayerSpeechService/PlayerSpeechDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerSpeechServiceClient) PlayerSpeechPatch(ctx context.Context, in *PlayerSpeechPatchRequest, opts ...grpc.CallOption) (*PlayerSpeechPatchResponse, error) {
	out := new(PlayerSpeechPatchResponse)
	err := c.cc.Invoke(ctx, "/pb.PlayerSpeechService/PlayerSpeechPatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerSpeechServiceServer is the server API for PlayerSpeechService service.
type PlayerSpeechServiceServer interface {
	PlayerSpeechSearch(context.Context, *PlayerSpeechSearchRequest) (*PlayerSpeechSearchResponse, error)
	PlayerSpeechCreate(context.Context, *PlayerSpeechCreateRequest) (*PlayerSpeechCreateResponse, error)
	PlayerSpeechRead(context.Context, *PlayerSpeechReadRequest) (*PlayerSpeechReadResponse, error)
	PlayerSpeechUpdate(context.Context, *PlayerSpeechUpdateRequest) (*PlayerSpeechUpdateResponse, error)
	PlayerSpeechDelete(context.Context, *PlayerSpeechDeleteRequest) (*PlayerSpeechDeleteResponse, error)
	PlayerSpeechPatch(context.Context, *PlayerSpeechPatchRequest) (*PlayerSpeechPatchResponse, error)
}

// UnimplementedPlayerSpeechServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerSpeechServiceServer struct {
}

func (*UnimplementedPlayerSpeechServiceServer) PlayerSpeechSearch(ctx context.Context, req *PlayerSpeechSearchRequest) (*PlayerSpeechSearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerSpeechSearch not implemented")
}
func (*UnimplementedPlayerSpeechServiceServer) PlayerSpeechCreate(ctx context.Context, req *PlayerSpeechCreateRequest) (*PlayerSpeechCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerSpeechCreate not implemented")
}
func (*UnimplementedPlayerSpeechServiceServer) PlayerSpeechRead(ctx context.Context, req *PlayerSpeechReadRequest) (*PlayerSpeechReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerSpeechRead not implemented")
}
func (*UnimplementedPlayerSpeechServiceServer) PlayerSpeechUpdate(ctx context.Context, req *PlayerSpeechUpdateRequest) (*PlayerSpeechUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerSpeechUpdate not implemented")
}
func (*UnimplementedPlayerSpeechServiceServer) PlayerSpeechDelete(ctx context.Context, req *PlayerSpeechDeleteRequest) (*PlayerSpeechDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerSpeechDelete not implemented")
}
func (*UnimplementedPlayerSpeechServiceServer) PlayerSpeechPatch(ctx context.Context, req *PlayerSpeechPatchRequest) (*PlayerSpeechPatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayerSpeechPatch not implemented")
}

func RegisterPlayerSpeechServiceServer(s *grpc.Server, srv PlayerSpeechServiceServer) {
	s.RegisterService(&_PlayerSpeechService_serviceDesc, srv)
}

func _PlayerSpeechService_PlayerSpeechSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerSpeechSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerSpeechService/PlayerSpeechSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechSearch(ctx, req.(*PlayerSpeechSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerSpeechService_PlayerSpeechCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerSpeechCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerSpeechService/PlayerSpeechCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechCreate(ctx, req.(*PlayerSpeechCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerSpeechService_PlayerSpeechRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerSpeechReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerSpeechService/PlayerSpeechRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechRead(ctx, req.(*PlayerSpeechReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerSpeechService_PlayerSpeechUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerSpeechUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerSpeechService/PlayerSpeechUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechUpdate(ctx, req.(*PlayerSpeechUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerSpeechService_PlayerSpeechDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerSpeechDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerSpeechService/PlayerSpeechDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechDelete(ctx, req.(*PlayerSpeechDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerSpeechService_PlayerSpeechPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayerSpeechPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PlayerSpeechService/PlayerSpeechPatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerSpeechServiceServer).PlayerSpeechPatch(ctx, req.(*PlayerSpeechPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayerSpeechService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PlayerSpeechService",
	HandlerType: (*PlayerSpeechServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PlayerSpeechSearch",
			Handler:    _PlayerSpeechService_PlayerSpeechSearch_Handler,
		},
		{
			MethodName: "PlayerSpeechCreate",
			Handler:    _PlayerSpeechService_PlayerSpeechCreate_Handler,
		},
		{
			MethodName: "PlayerSpeechRead",
			Handler:    _PlayerSpeechService_PlayerSpeechRead_Handler,
		},
		{
			MethodName: "PlayerSpeechUpdate",
			Handler:    _PlayerSpeechService_PlayerSpeechUpdate_Handler,
		},
		{
			MethodName: "PlayerSpeechDelete",
			Handler:    _PlayerSpeechService_PlayerSpeechDelete_Handler,
		},
		{
			MethodName: "PlayerSpeechPatch",
			Handler:    _PlayerSpeechService_PlayerSpeechPatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/player_speech_service.proto",
}
