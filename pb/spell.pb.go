// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/spell.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Spell struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Player1              string   `protobuf:"bytes,3,opt,name=player1,proto3" json:"player1,omitempty"`
	Teleportzone         string   `protobuf:"bytes,4,opt,name=teleportzone,proto3" json:"teleportzone,omitempty"`
	Youcast              string   `protobuf:"bytes,5,opt,name=youcast,proto3" json:"youcast,omitempty"`
	Othercasts           string   `protobuf:"bytes,6,opt,name=othercasts,proto3" json:"othercasts,omitempty"`
	Castonyou            string   `protobuf:"bytes,7,opt,name=castonyou,proto3" json:"castonyou,omitempty"`
	Castonother          string   `protobuf:"bytes,8,opt,name=castonother,proto3" json:"castonother,omitempty"`
	Spellfades           string   `protobuf:"bytes,9,opt,name=spellfades,proto3" json:"spellfades,omitempty"`
	Range                int64    `protobuf:"varint,10,opt,name=range,proto3" json:"range,omitempty"`
	Aoerange             int64    `protobuf:"varint,11,opt,name=aoerange,proto3" json:"aoerange,omitempty"`
	Pushback             int64    `protobuf:"varint,12,opt,name=pushback,proto3" json:"pushback,omitempty"`
	Pushup               int64    `protobuf:"varint,13,opt,name=pushup,proto3" json:"pushup,omitempty"`
	Casttime             int64    `protobuf:"varint,14,opt,name=casttime,proto3" json:"casttime,omitempty"`
	Recoverytime         int64    `protobuf:"varint,15,opt,name=recoverytime,proto3" json:"recoverytime,omitempty"`
	Recasttime           int64    `protobuf:"varint,16,opt,name=recasttime,proto3" json:"recasttime,omitempty"`
	Buffdurationformula  int64    `protobuf:"varint,17,opt,name=buffdurationformula,proto3" json:"buffdurationformula,omitempty"`
	Buffduration         int64    `protobuf:"varint,18,opt,name=buffduration,proto3" json:"buffduration,omitempty"`
	Aeduration           int64    `protobuf:"varint,19,opt,name=aeduration,proto3" json:"aeduration,omitempty"`
	Mana                 int64    `protobuf:"varint,20,opt,name=mana,proto3" json:"mana,omitempty"`
	Effectbasevalue1     int64    `protobuf:"varint,21,opt,name=effectbasevalue1,proto3" json:"effectbasevalue1,omitempty"`
	Effectbasevalue2     int64    `protobuf:"varint,22,opt,name=effectbasevalue2,proto3" json:"effectbasevalue2,omitempty"`
	Effectbasevalue3     int64    `protobuf:"varint,23,opt,name=effectbasevalue3,proto3" json:"effectbasevalue3,omitempty"`
	Effectbasevalue4     int64    `protobuf:"varint,24,opt,name=effectbasevalue4,proto3" json:"effectbasevalue4,omitempty"`
	Effectbasevalue5     int64    `protobuf:"varint,25,opt,name=effectbasevalue5,proto3" json:"effectbasevalue5,omitempty"`
	Effectbasevalue6     int64    `protobuf:"varint,26,opt,name=effectbasevalue6,proto3" json:"effectbasevalue6,omitempty"`
	Effectbasevalue7     int64    `protobuf:"varint,27,opt,name=effectbasevalue7,proto3" json:"effectbasevalue7,omitempty"`
	Effectbasevalue8     int64    `protobuf:"varint,28,opt,name=effectbasevalue8,proto3" json:"effectbasevalue8,omitempty"`
	Effectbasevalue9     int64    `protobuf:"varint,29,opt,name=effectbasevalue9,proto3" json:"effectbasevalue9,omitempty"`
	Effectbasevalue10    int64    `protobuf:"varint,30,opt,name=effectbasevalue10,proto3" json:"effectbasevalue10,omitempty"`
	Effectbasevalue11    int64    `protobuf:"varint,31,opt,name=effectbasevalue11,proto3" json:"effectbasevalue11,omitempty"`
	Effectbasevalue12    int64    `protobuf:"varint,32,opt,name=effectbasevalue12,proto3" json:"effectbasevalue12,omitempty"`
	Effectlimitvalue1    int64    `protobuf:"varint,33,opt,name=effectlimitvalue1,proto3" json:"effectlimitvalue1,omitempty"`
	Effectlimitvalue2    int64    `protobuf:"varint,34,opt,name=effectlimitvalue2,proto3" json:"effectlimitvalue2,omitempty"`
	Effectlimitvalue3    int64    `protobuf:"varint,35,opt,name=effectlimitvalue3,proto3" json:"effectlimitvalue3,omitempty"`
	Effectlimitvalue4    int64    `protobuf:"varint,36,opt,name=effectlimitvalue4,proto3" json:"effectlimitvalue4,omitempty"`
	Effectlimitvalue5    int64    `protobuf:"varint,37,opt,name=effectlimitvalue5,proto3" json:"effectlimitvalue5,omitempty"`
	Effectlimitvalue6    int64    `protobuf:"varint,38,opt,name=effectlimitvalue6,proto3" json:"effectlimitvalue6,omitempty"`
	Effectlimitvalue7    int64    `protobuf:"varint,39,opt,name=effectlimitvalue7,proto3" json:"effectlimitvalue7,omitempty"`
	Effectlimitvalue8    int64    `protobuf:"varint,40,opt,name=effectlimitvalue8,proto3" json:"effectlimitvalue8,omitempty"`
	Effectlimitvalue9    int64    `protobuf:"varint,41,opt,name=effectlimitvalue9,proto3" json:"effectlimitvalue9,omitempty"`
	Effectlimitvalue10   int64    `protobuf:"varint,42,opt,name=effectlimitvalue10,proto3" json:"effectlimitvalue10,omitempty"`
	Effectlimitvalue11   int64    `protobuf:"varint,43,opt,name=effectlimitvalue11,proto3" json:"effectlimitvalue11,omitempty"`
	Effectlimitvalue12   int64    `protobuf:"varint,44,opt,name=effectlimitvalue12,proto3" json:"effectlimitvalue12,omitempty"`
	Max1                 int64    `protobuf:"varint,45,opt,name=max1,proto3" json:"max1,omitempty"`
	Max2                 int64    `protobuf:"varint,46,opt,name=max2,proto3" json:"max2,omitempty"`
	Max3                 int64    `protobuf:"varint,47,opt,name=max3,proto3" json:"max3,omitempty"`
	Max4                 int64    `protobuf:"varint,48,opt,name=max4,proto3" json:"max4,omitempty"`
	Max5                 int64    `protobuf:"varint,49,opt,name=max5,proto3" json:"max5,omitempty"`
	Max6                 int64    `protobuf:"varint,50,opt,name=max6,proto3" json:"max6,omitempty"`
	Max7                 int64    `protobuf:"varint,51,opt,name=max7,proto3" json:"max7,omitempty"`
	Max8                 int64    `protobuf:"varint,52,opt,name=max8,proto3" json:"max8,omitempty"`
	Max9                 int64    `protobuf:"varint,53,opt,name=max9,proto3" json:"max9,omitempty"`
	Max10                int64    `protobuf:"varint,54,opt,name=max10,proto3" json:"max10,omitempty"`
	Max11                int64    `protobuf:"varint,55,opt,name=max11,proto3" json:"max11,omitempty"`
	Max12                int64    `protobuf:"varint,56,opt,name=max12,proto3" json:"max12,omitempty"`
	Icon                 int64    `protobuf:"varint,57,opt,name=icon,proto3" json:"icon,omitempty"`
	Memicon              int64    `protobuf:"varint,58,opt,name=memicon,proto3" json:"memicon,omitempty"`
	Components1          int64    `protobuf:"varint,59,opt,name=components1,proto3" json:"components1,omitempty"`
	Components2          int64    `protobuf:"varint,60,opt,name=components2,proto3" json:"components2,omitempty"`
	Components3          int64    `protobuf:"varint,61,opt,name=components3,proto3" json:"components3,omitempty"`
	Components4          int64    `protobuf:"varint,62,opt,name=components4,proto3" json:"components4,omitempty"`
	Componentcounts1     int64    `protobuf:"varint,63,opt,name=componentcounts1,proto3" json:"componentcounts1,omitempty"`
	Componentcounts2     int64    `protobuf:"varint,64,opt,name=componentcounts2,proto3" json:"componentcounts2,omitempty"`
	Componentcounts3     int64    `protobuf:"varint,65,opt,name=componentcounts3,proto3" json:"componentcounts3,omitempty"`
	Componentcounts4     int64    `protobuf:"varint,66,opt,name=componentcounts4,proto3" json:"componentcounts4,omitempty"`
	Noexpendreagent1     int64    `protobuf:"varint,67,opt,name=noexpendreagent1,proto3" json:"noexpendreagent1,omitempty"`
	Noexpendreagent2     int64    `protobuf:"varint,68,opt,name=noexpendreagent2,proto3" json:"noexpendreagent2,omitempty"`
	Noexpendreagent3     int64    `protobuf:"varint,69,opt,name=noexpendreagent3,proto3" json:"noexpendreagent3,omitempty"`
	Noexpendreagent4     int64    `protobuf:"varint,70,opt,name=noexpendreagent4,proto3" json:"noexpendreagent4,omitempty"`
	Formula1             int64    `protobuf:"varint,71,opt,name=formula1,proto3" json:"formula1,omitempty"`
	Formula2             int64    `protobuf:"varint,72,opt,name=formula2,proto3" json:"formula2,omitempty"`
	Formula3             int64    `protobuf:"varint,73,opt,name=formula3,proto3" json:"formula3,omitempty"`
	Formula4             int64    `protobuf:"varint,74,opt,name=formula4,proto3" json:"formula4,omitempty"`
	Formula5             int64    `protobuf:"varint,75,opt,name=formula5,proto3" json:"formula5,omitempty"`
	Formula6             int64    `protobuf:"varint,76,opt,name=formula6,proto3" json:"formula6,omitempty"`
	Formula7             int64    `protobuf:"varint,77,opt,name=formula7,proto3" json:"formula7,omitempty"`
	Formula8             int64    `protobuf:"varint,78,opt,name=formula8,proto3" json:"formula8,omitempty"`
	Formula9             int64    `protobuf:"varint,79,opt,name=formula9,proto3" json:"formula9,omitempty"`
	Formula10            int64    `protobuf:"varint,80,opt,name=formula10,proto3" json:"formula10,omitempty"`
	Formula11            int64    `protobuf:"varint,81,opt,name=formula11,proto3" json:"formula11,omitempty"`
	Formula12            int64    `protobuf:"varint,82,opt,name=formula12,proto3" json:"formula12,omitempty"`
	Lighttype            int64    `protobuf:"varint,83,opt,name=lighttype,proto3" json:"lighttype,omitempty"`
	Goodeffect           int64    `protobuf:"varint,84,opt,name=goodeffect,proto3" json:"goodeffect,omitempty"`
	Activated            int64    `protobuf:"varint,85,opt,name=activated,proto3" json:"activated,omitempty"`
	Resisttype           int64    `protobuf:"varint,86,opt,name=resisttype,proto3" json:"resisttype,omitempty"`
	Effectid1            int64    `protobuf:"varint,87,opt,name=effectid1,proto3" json:"effectid1,omitempty"`
	Effectid2            int64    `protobuf:"varint,88,opt,name=effectid2,proto3" json:"effectid2,omitempty"`
	Effectid3            int64    `protobuf:"varint,89,opt,name=effectid3,proto3" json:"effectid3,omitempty"`
	Effectid4            int64    `protobuf:"varint,90,opt,name=effectid4,proto3" json:"effectid4,omitempty"`
	Effectid5            int64    `protobuf:"varint,91,opt,name=effectid5,proto3" json:"effectid5,omitempty"`
	Effectid6            int64    `protobuf:"varint,92,opt,name=effectid6,proto3" json:"effectid6,omitempty"`
	Effectid7            int64    `protobuf:"varint,93,opt,name=effectid7,proto3" json:"effectid7,omitempty"`
	Effectid8            int64    `protobuf:"varint,94,opt,name=effectid8,proto3" json:"effectid8,omitempty"`
	Effectid9            int64    `protobuf:"varint,95,opt,name=effectid9,proto3" json:"effectid9,omitempty"`
	Effectid10           int64    `protobuf:"varint,96,opt,name=effectid10,proto3" json:"effectid10,omitempty"`
	Effectid11           int64    `protobuf:"varint,97,opt,name=effectid11,proto3" json:"effectid11,omitempty"`
	Effectid12           int64    `protobuf:"varint,98,opt,name=effectid12,proto3" json:"effectid12,omitempty"`
	Targettype           int64    `protobuf:"varint,99,opt,name=targettype,proto3" json:"targettype,omitempty"`
	Basediff             int64    `protobuf:"varint,100,opt,name=basediff,proto3" json:"basediff,omitempty"`
	Skill                int64    `protobuf:"varint,101,opt,name=skill,proto3" json:"skill,omitempty"`
	Zonetype             int64    `protobuf:"varint,102,opt,name=zonetype,proto3" json:"zonetype,omitempty"`
	Environmenttype      int64    `protobuf:"varint,103,opt,name=environmenttype,proto3" json:"environmenttype,omitempty"`
	Timeofday            int64    `protobuf:"varint,104,opt,name=timeofday,proto3" json:"timeofday,omitempty"`
	Classes1             int64    `protobuf:"varint,105,opt,name=classes1,proto3" json:"classes1,omitempty"`
	Classes2             int64    `protobuf:"varint,106,opt,name=classes2,proto3" json:"classes2,omitempty"`
	Classes3             int64    `protobuf:"varint,107,opt,name=classes3,proto3" json:"classes3,omitempty"`
	Classes4             int64    `protobuf:"varint,108,opt,name=classes4,proto3" json:"classes4,omitempty"`
	Classes5             int64    `protobuf:"varint,109,opt,name=classes5,proto3" json:"classes5,omitempty"`
	Classes6             int64    `protobuf:"varint,110,opt,name=classes6,proto3" json:"classes6,omitempty"`
	Classes7             int64    `protobuf:"varint,111,opt,name=classes7,proto3" json:"classes7,omitempty"`
	Classes8             int64    `protobuf:"varint,112,opt,name=classes8,proto3" json:"classes8,omitempty"`
	Classes9             int64    `protobuf:"varint,113,opt,name=classes9,proto3" json:"classes9,omitempty"`
	Classes10            int64    `protobuf:"varint,114,opt,name=classes10,proto3" json:"classes10,omitempty"`
	Classes11            int64    `protobuf:"varint,115,opt,name=classes11,proto3" json:"classes11,omitempty"`
	Classes12            int64    `protobuf:"varint,116,opt,name=classes12,proto3" json:"classes12,omitempty"`
	Classes13            int64    `protobuf:"varint,117,opt,name=classes13,proto3" json:"classes13,omitempty"`
	Classes14            int64    `protobuf:"varint,118,opt,name=classes14,proto3" json:"classes14,omitempty"`
	Classes15            int64    `protobuf:"varint,119,opt,name=classes15,proto3" json:"classes15,omitempty"`
	Classes16            int64    `protobuf:"varint,120,opt,name=classes16,proto3" json:"classes16,omitempty"`
	Castinganim          int64    `protobuf:"varint,121,opt,name=castinganim,proto3" json:"castinganim,omitempty"`
	Targetanim           int64    `protobuf:"varint,122,opt,name=targetanim,proto3" json:"targetanim,omitempty"`
	Traveltype           int64    `protobuf:"varint,123,opt,name=traveltype,proto3" json:"traveltype,omitempty"`
	Spellaffectindex     int64    `protobuf:"varint,124,opt,name=spellaffectindex,proto3" json:"spellaffectindex,omitempty"`
	Disallowsit          int64    `protobuf:"varint,125,opt,name=disallowsit,proto3" json:"disallowsit,omitempty"`
	Deities0             int64    `protobuf:"varint,126,opt,name=deities0,proto3" json:"deities0,omitempty"`
	Deities1             int64    `protobuf:"varint,127,opt,name=deities1,proto3" json:"deities1,omitempty"`
	Deities2             int64    `protobuf:"varint,128,opt,name=deities2,proto3" json:"deities2,omitempty"`
	Deities3             int64    `protobuf:"varint,129,opt,name=deities3,proto3" json:"deities3,omitempty"`
	Deities4             int64    `protobuf:"varint,130,opt,name=deities4,proto3" json:"deities4,omitempty"`
	Deities5             int64    `protobuf:"varint,131,opt,name=deities5,proto3" json:"deities5,omitempty"`
	Deities6             int64    `protobuf:"varint,132,opt,name=deities6,proto3" json:"deities6,omitempty"`
	Deities7             int64    `protobuf:"varint,133,opt,name=deities7,proto3" json:"deities7,omitempty"`
	Deities8             int64    `protobuf:"varint,134,opt,name=deities8,proto3" json:"deities8,omitempty"`
	Deities9             int64    `protobuf:"varint,135,opt,name=deities9,proto3" json:"deities9,omitempty"`
	Deities10            int64    `protobuf:"varint,136,opt,name=deities10,proto3" json:"deities10,omitempty"`
	Deities11            int64    `protobuf:"varint,137,opt,name=deities11,proto3" json:"deities11,omitempty"`
	Deities12            int64    `protobuf:"varint,138,opt,name=deities12,proto3" json:"deities12,omitempty"`
	Deities13            int64    `protobuf:"varint,139,opt,name=deities13,proto3" json:"deities13,omitempty"`
	Deities14            int64    `protobuf:"varint,140,opt,name=deities14,proto3" json:"deities14,omitempty"`
	Deities15            int64    `protobuf:"varint,141,opt,name=deities15,proto3" json:"deities15,omitempty"`
	Deities16            int64    `protobuf:"varint,142,opt,name=deities16,proto3" json:"deities16,omitempty"`
	Field142             int64    `protobuf:"varint,143,opt,name=field142,proto3" json:"field142,omitempty"`
	Field143             int64    `protobuf:"varint,144,opt,name=field143,proto3" json:"field143,omitempty"`
	Newicon              int64    `protobuf:"varint,145,opt,name=newicon,proto3" json:"newicon,omitempty"`
	Spellanim            int64    `protobuf:"varint,146,opt,name=spellanim,proto3" json:"spellanim,omitempty"`
	Uninterruptable      int64    `protobuf:"varint,147,opt,name=uninterruptable,proto3" json:"uninterruptable,omitempty"`
	Resistdiff           int64    `protobuf:"varint,148,opt,name=resistdiff,proto3" json:"resistdiff,omitempty"`
	Dotstackingexempt    int64    `protobuf:"varint,149,opt,name=dotstackingexempt,proto3" json:"dotstackingexempt,omitempty"`
	Deleteable           int64    `protobuf:"varint,150,opt,name=deleteable,proto3" json:"deleteable,omitempty"`
	Recourselink         int64    `protobuf:"varint,151,opt,name=recourselink,proto3" json:"recourselink,omitempty"`
	Nopartialresist      int64    `protobuf:"varint,152,opt,name=nopartialresist,proto3" json:"nopartialresist,omitempty"`
	Field152             int64    `protobuf:"varint,153,opt,name=field152,proto3" json:"field152,omitempty"`
	Field153             int64    `protobuf:"varint,154,opt,name=field153,proto3" json:"field153,omitempty"`
	Shortbuffbox         int64    `protobuf:"varint,155,opt,name=shortbuffbox,proto3" json:"shortbuffbox,omitempty"`
	Descnum              int64    `protobuf:"varint,156,opt,name=descnum,proto3" json:"descnum,omitempty"`
	Typedescnum          int64    `protobuf:"varint,157,opt,name=typedescnum,proto3" json:"typedescnum,omitempty"`
	Effectdescnum        int64    `protobuf:"varint,158,opt,name=effectdescnum,proto3" json:"effectdescnum,omitempty"`
	Effectdescnum2       int64    `protobuf:"varint,159,opt,name=effectdescnum2,proto3" json:"effectdescnum2,omitempty"`
	Npcnolos             int64    `protobuf:"varint,160,opt,name=npcnolos,proto3" json:"npcnolos,omitempty"`
	Field160             int64    `protobuf:"varint,161,opt,name=field160,proto3" json:"field160,omitempty"`
	Reflectable          int64    `protobuf:"varint,162,opt,name=reflectable,proto3" json:"reflectable,omitempty"`
	Bonushate            int64    `protobuf:"varint,163,opt,name=bonushate,proto3" json:"bonushate,omitempty"`
	Field163             int64    `protobuf:"varint,164,opt,name=field163,proto3" json:"field163,omitempty"`
	Field164             int64    `protobuf:"varint,165,opt,name=field164,proto3" json:"field164,omitempty"`
	Ldontrap             int64    `protobuf:"varint,166,opt,name=ldontrap,proto3" json:"ldontrap,omitempty"`
	Endurcost            int64    `protobuf:"varint,167,opt,name=endurcost,proto3" json:"endurcost,omitempty"`
	Endurtimerindex      int64    `protobuf:"varint,168,opt,name=endurtimerindex,proto3" json:"endurtimerindex,omitempty"`
	Isdiscipline         int64    `protobuf:"varint,169,opt,name=isdiscipline,proto3" json:"isdiscipline,omitempty"`
	Field169             int64    `protobuf:"varint,170,opt,name=field169,proto3" json:"field169,omitempty"`
	Field170             int64    `protobuf:"varint,171,opt,name=field170,proto3" json:"field170,omitempty"`
	Field171             int64    `protobuf:"varint,172,opt,name=field171,proto3" json:"field171,omitempty"`
	Field172             int64    `protobuf:"varint,173,opt,name=field172,proto3" json:"field172,omitempty"`
	Hateadded            int64    `protobuf:"varint,174,opt,name=hateadded,proto3" json:"hateadded,omitempty"`
	Endurupkeep          int64    `protobuf:"varint,175,opt,name=endurupkeep,proto3" json:"endurupkeep,omitempty"`
	Numhitstype          int64    `protobuf:"varint,176,opt,name=numhitstype,proto3" json:"numhitstype,omitempty"`
	Numhits              int64    `protobuf:"varint,177,opt,name=numhits,proto3" json:"numhits,omitempty"`
	Pvpresistbase        int64    `protobuf:"varint,178,opt,name=pvpresistbase,proto3" json:"pvpresistbase,omitempty"`
	Pvpresistcalc        int64    `protobuf:"varint,179,opt,name=pvpresistcalc,proto3" json:"pvpresistcalc,omitempty"`
	Pvpresistcap         int64    `protobuf:"varint,180,opt,name=pvpresistcap,proto3" json:"pvpresistcap,omitempty"`
	Spellcategory        int64    `protobuf:"varint,181,opt,name=spellcategory,proto3" json:"spellcategory,omitempty"`
	Field181             int64    `protobuf:"varint,182,opt,name=field181,proto3" json:"field181,omitempty"`
	Field182             int64    `protobuf:"varint,183,opt,name=field182,proto3" json:"field182,omitempty"`
	Pcnpconlyflag        int64    `protobuf:"varint,184,opt,name=pcnpconlyflag,proto3" json:"pcnpconlyflag,omitempty"`
	Castnotstanding      int64    `protobuf:"varint,185,opt,name=castnotstanding,proto3" json:"castnotstanding,omitempty"`
	Canmgb               int64    `protobuf:"varint,186,opt,name=canmgb,proto3" json:"canmgb,omitempty"`
	Nodispell            int64    `protobuf:"varint,187,opt,name=nodispell,proto3" json:"nodispell,omitempty"`
	Npccategory          int64    `protobuf:"varint,188,opt,name=npccategory,proto3" json:"npccategory,omitempty"`
	Npcusefulness        int64    `protobuf:"varint,189,opt,name=npcusefulness,proto3" json:"npcusefulness,omitempty"`
	Minresist            int64    `protobuf:"varint,190,opt,name=minresist,proto3" json:"minresist,omitempty"`
	Maxresist            int64    `protobuf:"varint,191,opt,name=maxresist,proto3" json:"maxresist,omitempty"`
	Viraltargets         int64    `protobuf:"varint,192,opt,name=viraltargets,proto3" json:"viraltargets,omitempty"`
	Viraltimer           int64    `protobuf:"varint,193,opt,name=viraltimer,proto3" json:"viraltimer,omitempty"`
	Nimbuseffect         int64    `protobuf:"varint,194,opt,name=nimbuseffect,proto3" json:"nimbuseffect,omitempty"`
	Conestartangle       int64    `protobuf:"varint,195,opt,name=conestartangle,proto3" json:"conestartangle,omitempty"`
	Conestopangle        int64    `protobuf:"varint,196,opt,name=conestopangle,proto3" json:"conestopangle,omitempty"`
	Sneaking             int64    `protobuf:"varint,197,opt,name=sneaking,proto3" json:"sneaking,omitempty"`
	Notextendable        int64    `protobuf:"varint,198,opt,name=notextendable,proto3" json:"notextendable,omitempty"`
	Field198             int64    `protobuf:"varint,199,opt,name=field198,proto3" json:"field198,omitempty"`
	Field199             int64    `protobuf:"varint,200,opt,name=field199,proto3" json:"field199,omitempty"`
	Suspendable          int64    `protobuf:"varint,201,opt,name=suspendable,proto3" json:"suspendable,omitempty"`
	Viralrange           int64    `protobuf:"varint,202,opt,name=viralrange,proto3" json:"viralrange,omitempty"`
	Songcap              int64    `protobuf:"varint,203,opt,name=songcap,proto3" json:"songcap,omitempty"`
	Field203             int64    `protobuf:"varint,204,opt,name=field203,proto3" json:"field203,omitempty"`
	Field204             int64    `protobuf:"varint,205,opt,name=field204,proto3" json:"field204,omitempty"`
	Noblock              int64    `protobuf:"varint,206,opt,name=noblock,proto3" json:"noblock,omitempty"`
	Field206             int64    `protobuf:"varint,207,opt,name=field206,proto3" json:"field206,omitempty"`
	Spellgroup           int64    `protobuf:"varint,208,opt,name=spellgroup,proto3" json:"spellgroup,omitempty"`
	Rank                 int64    `protobuf:"varint,209,opt,name=rank,proto3" json:"rank,omitempty"`
	Field209             int64    `protobuf:"varint,210,opt,name=field209,proto3" json:"field209,omitempty"`
	Field210             int64    `protobuf:"varint,211,opt,name=field210,proto3" json:"field210,omitempty"`
	Castrestriction      int64    `protobuf:"varint,212,opt,name=castrestriction,proto3" json:"castrestriction,omitempty"`
	Allowrest            int64    `protobuf:"varint,213,opt,name=allowrest,proto3" json:"allowrest,omitempty"`
	Incombat             int64    `protobuf:"varint,214,opt,name=incombat,proto3" json:"incombat,omitempty"`
	Outofcombat          int64    `protobuf:"varint,215,opt,name=outofcombat,proto3" json:"outofcombat,omitempty"`
	Field215             int64    `protobuf:"varint,216,opt,name=field215,proto3" json:"field215,omitempty"`
	Field216             int64    `protobuf:"varint,217,opt,name=field216,proto3" json:"field216,omitempty"`
	Field217             int64    `protobuf:"varint,218,opt,name=field217,proto3" json:"field217,omitempty"`
	Aemaxtargets         int64    `protobuf:"varint,219,opt,name=aemaxtargets,proto3" json:"aemaxtargets,omitempty"`
	Maxtargets           int64    `protobuf:"varint,220,opt,name=maxtargets,proto3" json:"maxtargets,omitempty"`
	Field220             int64    `protobuf:"varint,221,opt,name=field220,proto3" json:"field220,omitempty"`
	Field221             int64    `protobuf:"varint,222,opt,name=field221,proto3" json:"field221,omitempty"`
	Field222             int64    `protobuf:"varint,223,opt,name=field222,proto3" json:"field222,omitempty"`
	Field223             int64    `protobuf:"varint,224,opt,name=field223,proto3" json:"field223,omitempty"`
	Persistdeath         int64    `protobuf:"varint,225,opt,name=persistdeath,proto3" json:"persistdeath,omitempty"`
	Field225             int64    `protobuf:"varint,226,opt,name=field225,proto3" json:"field225,omitempty"`
	Field226             int64    `protobuf:"varint,227,opt,name=field226,proto3" json:"field226,omitempty"`
	Mindist              float32  `protobuf:"fixed32,228,opt,name=mindist,proto3" json:"mindist,omitempty"`
	Mindistmod           float32  `protobuf:"fixed32,229,opt,name=mindistmod,proto3" json:"mindistmod,omitempty"`
	Maxdist              float32  `protobuf:"fixed32,230,opt,name=maxdist,proto3" json:"maxdist,omitempty"`
	Maxdistmod           float32  `protobuf:"fixed32,231,opt,name=maxdistmod,proto3" json:"maxdistmod,omitempty"`
	Minrange             int64    `protobuf:"varint,232,opt,name=minrange,proto3" json:"minrange,omitempty"`
	Field232             int64    `protobuf:"varint,233,opt,name=field232,proto3" json:"field232,omitempty"`
	Field233             int64    `protobuf:"varint,234,opt,name=field233,proto3" json:"field233,omitempty"`
	Field234             int64    `protobuf:"varint,235,opt,name=field234,proto3" json:"field234,omitempty"`
	Field235             int64    `protobuf:"varint,236,opt,name=field235,proto3" json:"field235,omitempty"`
	Field236             int64    `protobuf:"varint,237,opt,name=field236,proto3" json:"field236,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Spell) Reset()         { *m = Spell{} }
func (m *Spell) String() string { return proto.CompactTextString(m) }
func (*Spell) ProtoMessage()    {}
func (*Spell) Descriptor() ([]byte, []int) {
	return fileDescriptor_019b60b1f0b7eb53, []int{0}
}

func (m *Spell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spell.Unmarshal(m, b)
}
func (m *Spell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spell.Marshal(b, m, deterministic)
}
func (m *Spell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spell.Merge(m, src)
}
func (m *Spell) XXX_Size() int {
	return xxx_messageInfo_Spell.Size(m)
}
func (m *Spell) XXX_DiscardUnknown() {
	xxx_messageInfo_Spell.DiscardUnknown(m)
}

var xxx_messageInfo_Spell proto.InternalMessageInfo

func (m *Spell) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Spell) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Spell) GetPlayer1() string {
	if m != nil {
		return m.Player1
	}
	return ""
}

func (m *Spell) GetTeleportzone() string {
	if m != nil {
		return m.Teleportzone
	}
	return ""
}

func (m *Spell) GetYoucast() string {
	if m != nil {
		return m.Youcast
	}
	return ""
}

func (m *Spell) GetOthercasts() string {
	if m != nil {
		return m.Othercasts
	}
	return ""
}

func (m *Spell) GetCastonyou() string {
	if m != nil {
		return m.Castonyou
	}
	return ""
}

func (m *Spell) GetCastonother() string {
	if m != nil {
		return m.Castonother
	}
	return ""
}

func (m *Spell) GetSpellfades() string {
	if m != nil {
		return m.Spellfades
	}
	return ""
}

func (m *Spell) GetRange() int64 {
	if m != nil {
		return m.Range
	}
	return 0
}

func (m *Spell) GetAoerange() int64 {
	if m != nil {
		return m.Aoerange
	}
	return 0
}

func (m *Spell) GetPushback() int64 {
	if m != nil {
		return m.Pushback
	}
	return 0
}

func (m *Spell) GetPushup() int64 {
	if m != nil {
		return m.Pushup
	}
	return 0
}

func (m *Spell) GetCasttime() int64 {
	if m != nil {
		return m.Casttime
	}
	return 0
}

func (m *Spell) GetRecoverytime() int64 {
	if m != nil {
		return m.Recoverytime
	}
	return 0
}

func (m *Spell) GetRecasttime() int64 {
	if m != nil {
		return m.Recasttime
	}
	return 0
}

func (m *Spell) GetBuffdurationformula() int64 {
	if m != nil {
		return m.Buffdurationformula
	}
	return 0
}

func (m *Spell) GetBuffduration() int64 {
	if m != nil {
		return m.Buffduration
	}
	return 0
}

func (m *Spell) GetAeduration() int64 {
	if m != nil {
		return m.Aeduration
	}
	return 0
}

func (m *Spell) GetMana() int64 {
	if m != nil {
		return m.Mana
	}
	return 0
}

func (m *Spell) GetEffectbasevalue1() int64 {
	if m != nil {
		return m.Effectbasevalue1
	}
	return 0
}

func (m *Spell) GetEffectbasevalue2() int64 {
	if m != nil {
		return m.Effectbasevalue2
	}
	return 0
}

func (m *Spell) GetEffectbasevalue3() int64 {
	if m != nil {
		return m.Effectbasevalue3
	}
	return 0
}

func (m *Spell) GetEffectbasevalue4() int64 {
	if m != nil {
		return m.Effectbasevalue4
	}
	return 0
}

func (m *Spell) GetEffectbasevalue5() int64 {
	if m != nil {
		return m.Effectbasevalue5
	}
	return 0
}

func (m *Spell) GetEffectbasevalue6() int64 {
	if m != nil {
		return m.Effectbasevalue6
	}
	return 0
}

func (m *Spell) GetEffectbasevalue7() int64 {
	if m != nil {
		return m.Effectbasevalue7
	}
	return 0
}

func (m *Spell) GetEffectbasevalue8() int64 {
	if m != nil {
		return m.Effectbasevalue8
	}
	return 0
}

func (m *Spell) GetEffectbasevalue9() int64 {
	if m != nil {
		return m.Effectbasevalue9
	}
	return 0
}

func (m *Spell) GetEffectbasevalue10() int64 {
	if m != nil {
		return m.Effectbasevalue10
	}
	return 0
}

func (m *Spell) GetEffectbasevalue11() int64 {
	if m != nil {
		return m.Effectbasevalue11
	}
	return 0
}

func (m *Spell) GetEffectbasevalue12() int64 {
	if m != nil {
		return m.Effectbasevalue12
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue1() int64 {
	if m != nil {
		return m.Effectlimitvalue1
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue2() int64 {
	if m != nil {
		return m.Effectlimitvalue2
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue3() int64 {
	if m != nil {
		return m.Effectlimitvalue3
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue4() int64 {
	if m != nil {
		return m.Effectlimitvalue4
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue5() int64 {
	if m != nil {
		return m.Effectlimitvalue5
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue6() int64 {
	if m != nil {
		return m.Effectlimitvalue6
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue7() int64 {
	if m != nil {
		return m.Effectlimitvalue7
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue8() int64 {
	if m != nil {
		return m.Effectlimitvalue8
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue9() int64 {
	if m != nil {
		return m.Effectlimitvalue9
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue10() int64 {
	if m != nil {
		return m.Effectlimitvalue10
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue11() int64 {
	if m != nil {
		return m.Effectlimitvalue11
	}
	return 0
}

func (m *Spell) GetEffectlimitvalue12() int64 {
	if m != nil {
		return m.Effectlimitvalue12
	}
	return 0
}

func (m *Spell) GetMax1() int64 {
	if m != nil {
		return m.Max1
	}
	return 0
}

func (m *Spell) GetMax2() int64 {
	if m != nil {
		return m.Max2
	}
	return 0
}

func (m *Spell) GetMax3() int64 {
	if m != nil {
		return m.Max3
	}
	return 0
}

func (m *Spell) GetMax4() int64 {
	if m != nil {
		return m.Max4
	}
	return 0
}

func (m *Spell) GetMax5() int64 {
	if m != nil {
		return m.Max5
	}
	return 0
}

func (m *Spell) GetMax6() int64 {
	if m != nil {
		return m.Max6
	}
	return 0
}

func (m *Spell) GetMax7() int64 {
	if m != nil {
		return m.Max7
	}
	return 0
}

func (m *Spell) GetMax8() int64 {
	if m != nil {
		return m.Max8
	}
	return 0
}

func (m *Spell) GetMax9() int64 {
	if m != nil {
		return m.Max9
	}
	return 0
}

func (m *Spell) GetMax10() int64 {
	if m != nil {
		return m.Max10
	}
	return 0
}

func (m *Spell) GetMax11() int64 {
	if m != nil {
		return m.Max11
	}
	return 0
}

func (m *Spell) GetMax12() int64 {
	if m != nil {
		return m.Max12
	}
	return 0
}

func (m *Spell) GetIcon() int64 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *Spell) GetMemicon() int64 {
	if m != nil {
		return m.Memicon
	}
	return 0
}

func (m *Spell) GetComponents1() int64 {
	if m != nil {
		return m.Components1
	}
	return 0
}

func (m *Spell) GetComponents2() int64 {
	if m != nil {
		return m.Components2
	}
	return 0
}

func (m *Spell) GetComponents3() int64 {
	if m != nil {
		return m.Components3
	}
	return 0
}

func (m *Spell) GetComponents4() int64 {
	if m != nil {
		return m.Components4
	}
	return 0
}

func (m *Spell) GetComponentcounts1() int64 {
	if m != nil {
		return m.Componentcounts1
	}
	return 0
}

func (m *Spell) GetComponentcounts2() int64 {
	if m != nil {
		return m.Componentcounts2
	}
	return 0
}

func (m *Spell) GetComponentcounts3() int64 {
	if m != nil {
		return m.Componentcounts3
	}
	return 0
}

func (m *Spell) GetComponentcounts4() int64 {
	if m != nil {
		return m.Componentcounts4
	}
	return 0
}

func (m *Spell) GetNoexpendreagent1() int64 {
	if m != nil {
		return m.Noexpendreagent1
	}
	return 0
}

func (m *Spell) GetNoexpendreagent2() int64 {
	if m != nil {
		return m.Noexpendreagent2
	}
	return 0
}

func (m *Spell) GetNoexpendreagent3() int64 {
	if m != nil {
		return m.Noexpendreagent3
	}
	return 0
}

func (m *Spell) GetNoexpendreagent4() int64 {
	if m != nil {
		return m.Noexpendreagent4
	}
	return 0
}

func (m *Spell) GetFormula1() int64 {
	if m != nil {
		return m.Formula1
	}
	return 0
}

func (m *Spell) GetFormula2() int64 {
	if m != nil {
		return m.Formula2
	}
	return 0
}

func (m *Spell) GetFormula3() int64 {
	if m != nil {
		return m.Formula3
	}
	return 0
}

func (m *Spell) GetFormula4() int64 {
	if m != nil {
		return m.Formula4
	}
	return 0
}

func (m *Spell) GetFormula5() int64 {
	if m != nil {
		return m.Formula5
	}
	return 0
}

func (m *Spell) GetFormula6() int64 {
	if m != nil {
		return m.Formula6
	}
	return 0
}

func (m *Spell) GetFormula7() int64 {
	if m != nil {
		return m.Formula7
	}
	return 0
}

func (m *Spell) GetFormula8() int64 {
	if m != nil {
		return m.Formula8
	}
	return 0
}

func (m *Spell) GetFormula9() int64 {
	if m != nil {
		return m.Formula9
	}
	return 0
}

func (m *Spell) GetFormula10() int64 {
	if m != nil {
		return m.Formula10
	}
	return 0
}

func (m *Spell) GetFormula11() int64 {
	if m != nil {
		return m.Formula11
	}
	return 0
}

func (m *Spell) GetFormula12() int64 {
	if m != nil {
		return m.Formula12
	}
	return 0
}

func (m *Spell) GetLighttype() int64 {
	if m != nil {
		return m.Lighttype
	}
	return 0
}

func (m *Spell) GetGoodeffect() int64 {
	if m != nil {
		return m.Goodeffect
	}
	return 0
}

func (m *Spell) GetActivated() int64 {
	if m != nil {
		return m.Activated
	}
	return 0
}

func (m *Spell) GetResisttype() int64 {
	if m != nil {
		return m.Resisttype
	}
	return 0
}

func (m *Spell) GetEffectid1() int64 {
	if m != nil {
		return m.Effectid1
	}
	return 0
}

func (m *Spell) GetEffectid2() int64 {
	if m != nil {
		return m.Effectid2
	}
	return 0
}

func (m *Spell) GetEffectid3() int64 {
	if m != nil {
		return m.Effectid3
	}
	return 0
}

func (m *Spell) GetEffectid4() int64 {
	if m != nil {
		return m.Effectid4
	}
	return 0
}

func (m *Spell) GetEffectid5() int64 {
	if m != nil {
		return m.Effectid5
	}
	return 0
}

func (m *Spell) GetEffectid6() int64 {
	if m != nil {
		return m.Effectid6
	}
	return 0
}

func (m *Spell) GetEffectid7() int64 {
	if m != nil {
		return m.Effectid7
	}
	return 0
}

func (m *Spell) GetEffectid8() int64 {
	if m != nil {
		return m.Effectid8
	}
	return 0
}

func (m *Spell) GetEffectid9() int64 {
	if m != nil {
		return m.Effectid9
	}
	return 0
}

func (m *Spell) GetEffectid10() int64 {
	if m != nil {
		return m.Effectid10
	}
	return 0
}

func (m *Spell) GetEffectid11() int64 {
	if m != nil {
		return m.Effectid11
	}
	return 0
}

func (m *Spell) GetEffectid12() int64 {
	if m != nil {
		return m.Effectid12
	}
	return 0
}

func (m *Spell) GetTargettype() int64 {
	if m != nil {
		return m.Targettype
	}
	return 0
}

func (m *Spell) GetBasediff() int64 {
	if m != nil {
		return m.Basediff
	}
	return 0
}

func (m *Spell) GetSkill() int64 {
	if m != nil {
		return m.Skill
	}
	return 0
}

func (m *Spell) GetZonetype() int64 {
	if m != nil {
		return m.Zonetype
	}
	return 0
}

func (m *Spell) GetEnvironmenttype() int64 {
	if m != nil {
		return m.Environmenttype
	}
	return 0
}

func (m *Spell) GetTimeofday() int64 {
	if m != nil {
		return m.Timeofday
	}
	return 0
}

func (m *Spell) GetClasses1() int64 {
	if m != nil {
		return m.Classes1
	}
	return 0
}

func (m *Spell) GetClasses2() int64 {
	if m != nil {
		return m.Classes2
	}
	return 0
}

func (m *Spell) GetClasses3() int64 {
	if m != nil {
		return m.Classes3
	}
	return 0
}

func (m *Spell) GetClasses4() int64 {
	if m != nil {
		return m.Classes4
	}
	return 0
}

func (m *Spell) GetClasses5() int64 {
	if m != nil {
		return m.Classes5
	}
	return 0
}

func (m *Spell) GetClasses6() int64 {
	if m != nil {
		return m.Classes6
	}
	return 0
}

func (m *Spell) GetClasses7() int64 {
	if m != nil {
		return m.Classes7
	}
	return 0
}

func (m *Spell) GetClasses8() int64 {
	if m != nil {
		return m.Classes8
	}
	return 0
}

func (m *Spell) GetClasses9() int64 {
	if m != nil {
		return m.Classes9
	}
	return 0
}

func (m *Spell) GetClasses10() int64 {
	if m != nil {
		return m.Classes10
	}
	return 0
}

func (m *Spell) GetClasses11() int64 {
	if m != nil {
		return m.Classes11
	}
	return 0
}

func (m *Spell) GetClasses12() int64 {
	if m != nil {
		return m.Classes12
	}
	return 0
}

func (m *Spell) GetClasses13() int64 {
	if m != nil {
		return m.Classes13
	}
	return 0
}

func (m *Spell) GetClasses14() int64 {
	if m != nil {
		return m.Classes14
	}
	return 0
}

func (m *Spell) GetClasses15() int64 {
	if m != nil {
		return m.Classes15
	}
	return 0
}

func (m *Spell) GetClasses16() int64 {
	if m != nil {
		return m.Classes16
	}
	return 0
}

func (m *Spell) GetCastinganim() int64 {
	if m != nil {
		return m.Castinganim
	}
	return 0
}

func (m *Spell) GetTargetanim() int64 {
	if m != nil {
		return m.Targetanim
	}
	return 0
}

func (m *Spell) GetTraveltype() int64 {
	if m != nil {
		return m.Traveltype
	}
	return 0
}

func (m *Spell) GetSpellaffectindex() int64 {
	if m != nil {
		return m.Spellaffectindex
	}
	return 0
}

func (m *Spell) GetDisallowsit() int64 {
	if m != nil {
		return m.Disallowsit
	}
	return 0
}

func (m *Spell) GetDeities0() int64 {
	if m != nil {
		return m.Deities0
	}
	return 0
}

func (m *Spell) GetDeities1() int64 {
	if m != nil {
		return m.Deities1
	}
	return 0
}

func (m *Spell) GetDeities2() int64 {
	if m != nil {
		return m.Deities2
	}
	return 0
}

func (m *Spell) GetDeities3() int64 {
	if m != nil {
		return m.Deities3
	}
	return 0
}

func (m *Spell) GetDeities4() int64 {
	if m != nil {
		return m.Deities4
	}
	return 0
}

func (m *Spell) GetDeities5() int64 {
	if m != nil {
		return m.Deities5
	}
	return 0
}

func (m *Spell) GetDeities6() int64 {
	if m != nil {
		return m.Deities6
	}
	return 0
}

func (m *Spell) GetDeities7() int64 {
	if m != nil {
		return m.Deities7
	}
	return 0
}

func (m *Spell) GetDeities8() int64 {
	if m != nil {
		return m.Deities8
	}
	return 0
}

func (m *Spell) GetDeities9() int64 {
	if m != nil {
		return m.Deities9
	}
	return 0
}

func (m *Spell) GetDeities10() int64 {
	if m != nil {
		return m.Deities10
	}
	return 0
}

func (m *Spell) GetDeities11() int64 {
	if m != nil {
		return m.Deities11
	}
	return 0
}

func (m *Spell) GetDeities12() int64 {
	if m != nil {
		return m.Deities12
	}
	return 0
}

func (m *Spell) GetDeities13() int64 {
	if m != nil {
		return m.Deities13
	}
	return 0
}

func (m *Spell) GetDeities14() int64 {
	if m != nil {
		return m.Deities14
	}
	return 0
}

func (m *Spell) GetDeities15() int64 {
	if m != nil {
		return m.Deities15
	}
	return 0
}

func (m *Spell) GetDeities16() int64 {
	if m != nil {
		return m.Deities16
	}
	return 0
}

func (m *Spell) GetField142() int64 {
	if m != nil {
		return m.Field142
	}
	return 0
}

func (m *Spell) GetField143() int64 {
	if m != nil {
		return m.Field143
	}
	return 0
}

func (m *Spell) GetNewicon() int64 {
	if m != nil {
		return m.Newicon
	}
	return 0
}

func (m *Spell) GetSpellanim() int64 {
	if m != nil {
		return m.Spellanim
	}
	return 0
}

func (m *Spell) GetUninterruptable() int64 {
	if m != nil {
		return m.Uninterruptable
	}
	return 0
}

func (m *Spell) GetResistdiff() int64 {
	if m != nil {
		return m.Resistdiff
	}
	return 0
}

func (m *Spell) GetDotstackingexempt() int64 {
	if m != nil {
		return m.Dotstackingexempt
	}
	return 0
}

func (m *Spell) GetDeleteable() int64 {
	if m != nil {
		return m.Deleteable
	}
	return 0
}

func (m *Spell) GetRecourselink() int64 {
	if m != nil {
		return m.Recourselink
	}
	return 0
}

func (m *Spell) GetNopartialresist() int64 {
	if m != nil {
		return m.Nopartialresist
	}
	return 0
}

func (m *Spell) GetField152() int64 {
	if m != nil {
		return m.Field152
	}
	return 0
}

func (m *Spell) GetField153() int64 {
	if m != nil {
		return m.Field153
	}
	return 0
}

func (m *Spell) GetShortbuffbox() int64 {
	if m != nil {
		return m.Shortbuffbox
	}
	return 0
}

func (m *Spell) GetDescnum() int64 {
	if m != nil {
		return m.Descnum
	}
	return 0
}

func (m *Spell) GetTypedescnum() int64 {
	if m != nil {
		return m.Typedescnum
	}
	return 0
}

func (m *Spell) GetEffectdescnum() int64 {
	if m != nil {
		return m.Effectdescnum
	}
	return 0
}

func (m *Spell) GetEffectdescnum2() int64 {
	if m != nil {
		return m.Effectdescnum2
	}
	return 0
}

func (m *Spell) GetNpcnolos() int64 {
	if m != nil {
		return m.Npcnolos
	}
	return 0
}

func (m *Spell) GetField160() int64 {
	if m != nil {
		return m.Field160
	}
	return 0
}

func (m *Spell) GetReflectable() int64 {
	if m != nil {
		return m.Reflectable
	}
	return 0
}

func (m *Spell) GetBonushate() int64 {
	if m != nil {
		return m.Bonushate
	}
	return 0
}

func (m *Spell) GetField163() int64 {
	if m != nil {
		return m.Field163
	}
	return 0
}

func (m *Spell) GetField164() int64 {
	if m != nil {
		return m.Field164
	}
	return 0
}

func (m *Spell) GetLdontrap() int64 {
	if m != nil {
		return m.Ldontrap
	}
	return 0
}

func (m *Spell) GetEndurcost() int64 {
	if m != nil {
		return m.Endurcost
	}
	return 0
}

func (m *Spell) GetEndurtimerindex() int64 {
	if m != nil {
		return m.Endurtimerindex
	}
	return 0
}

func (m *Spell) GetIsdiscipline() int64 {
	if m != nil {
		return m.Isdiscipline
	}
	return 0
}

func (m *Spell) GetField169() int64 {
	if m != nil {
		return m.Field169
	}
	return 0
}

func (m *Spell) GetField170() int64 {
	if m != nil {
		return m.Field170
	}
	return 0
}

func (m *Spell) GetField171() int64 {
	if m != nil {
		return m.Field171
	}
	return 0
}

func (m *Spell) GetField172() int64 {
	if m != nil {
		return m.Field172
	}
	return 0
}

func (m *Spell) GetHateadded() int64 {
	if m != nil {
		return m.Hateadded
	}
	return 0
}

func (m *Spell) GetEndurupkeep() int64 {
	if m != nil {
		return m.Endurupkeep
	}
	return 0
}

func (m *Spell) GetNumhitstype() int64 {
	if m != nil {
		return m.Numhitstype
	}
	return 0
}

func (m *Spell) GetNumhits() int64 {
	if m != nil {
		return m.Numhits
	}
	return 0
}

func (m *Spell) GetPvpresistbase() int64 {
	if m != nil {
		return m.Pvpresistbase
	}
	return 0
}

func (m *Spell) GetPvpresistcalc() int64 {
	if m != nil {
		return m.Pvpresistcalc
	}
	return 0
}

func (m *Spell) GetPvpresistcap() int64 {
	if m != nil {
		return m.Pvpresistcap
	}
	return 0
}

func (m *Spell) GetSpellcategory() int64 {
	if m != nil {
		return m.Spellcategory
	}
	return 0
}

func (m *Spell) GetField181() int64 {
	if m != nil {
		return m.Field181
	}
	return 0
}

func (m *Spell) GetField182() int64 {
	if m != nil {
		return m.Field182
	}
	return 0
}

func (m *Spell) GetPcnpconlyflag() int64 {
	if m != nil {
		return m.Pcnpconlyflag
	}
	return 0
}

func (m *Spell) GetCastnotstanding() int64 {
	if m != nil {
		return m.Castnotstanding
	}
	return 0
}

func (m *Spell) GetCanmgb() int64 {
	if m != nil {
		return m.Canmgb
	}
	return 0
}

func (m *Spell) GetNodispell() int64 {
	if m != nil {
		return m.Nodispell
	}
	return 0
}

func (m *Spell) GetNpccategory() int64 {
	if m != nil {
		return m.Npccategory
	}
	return 0
}

func (m *Spell) GetNpcusefulness() int64 {
	if m != nil {
		return m.Npcusefulness
	}
	return 0
}

func (m *Spell) GetMinresist() int64 {
	if m != nil {
		return m.Minresist
	}
	return 0
}

func (m *Spell) GetMaxresist() int64 {
	if m != nil {
		return m.Maxresist
	}
	return 0
}

func (m *Spell) GetViraltargets() int64 {
	if m != nil {
		return m.Viraltargets
	}
	return 0
}

func (m *Spell) GetViraltimer() int64 {
	if m != nil {
		return m.Viraltimer
	}
	return 0
}

func (m *Spell) GetNimbuseffect() int64 {
	if m != nil {
		return m.Nimbuseffect
	}
	return 0
}

func (m *Spell) GetConestartangle() int64 {
	if m != nil {
		return m.Conestartangle
	}
	return 0
}

func (m *Spell) GetConestopangle() int64 {
	if m != nil {
		return m.Conestopangle
	}
	return 0
}

func (m *Spell) GetSneaking() int64 {
	if m != nil {
		return m.Sneaking
	}
	return 0
}

func (m *Spell) GetNotextendable() int64 {
	if m != nil {
		return m.Notextendable
	}
	return 0
}

func (m *Spell) GetField198() int64 {
	if m != nil {
		return m.Field198
	}
	return 0
}

func (m *Spell) GetField199() int64 {
	if m != nil {
		return m.Field199
	}
	return 0
}

func (m *Spell) GetSuspendable() int64 {
	if m != nil {
		return m.Suspendable
	}
	return 0
}

func (m *Spell) GetViralrange() int64 {
	if m != nil {
		return m.Viralrange
	}
	return 0
}

func (m *Spell) GetSongcap() int64 {
	if m != nil {
		return m.Songcap
	}
	return 0
}

func (m *Spell) GetField203() int64 {
	if m != nil {
		return m.Field203
	}
	return 0
}

func (m *Spell) GetField204() int64 {
	if m != nil {
		return m.Field204
	}
	return 0
}

func (m *Spell) GetNoblock() int64 {
	if m != nil {
		return m.Noblock
	}
	return 0
}

func (m *Spell) GetField206() int64 {
	if m != nil {
		return m.Field206
	}
	return 0
}

func (m *Spell) GetSpellgroup() int64 {
	if m != nil {
		return m.Spellgroup
	}
	return 0
}

func (m *Spell) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Spell) GetField209() int64 {
	if m != nil {
		return m.Field209
	}
	return 0
}

func (m *Spell) GetField210() int64 {
	if m != nil {
		return m.Field210
	}
	return 0
}

func (m *Spell) GetCastrestriction() int64 {
	if m != nil {
		return m.Castrestriction
	}
	return 0
}

func (m *Spell) GetAllowrest() int64 {
	if m != nil {
		return m.Allowrest
	}
	return 0
}

func (m *Spell) GetIncombat() int64 {
	if m != nil {
		return m.Incombat
	}
	return 0
}

func (m *Spell) GetOutofcombat() int64 {
	if m != nil {
		return m.Outofcombat
	}
	return 0
}

func (m *Spell) GetField215() int64 {
	if m != nil {
		return m.Field215
	}
	return 0
}

func (m *Spell) GetField216() int64 {
	if m != nil {
		return m.Field216
	}
	return 0
}

func (m *Spell) GetField217() int64 {
	if m != nil {
		return m.Field217
	}
	return 0
}

func (m *Spell) GetAemaxtargets() int64 {
	if m != nil {
		return m.Aemaxtargets
	}
	return 0
}

func (m *Spell) GetMaxtargets() int64 {
	if m != nil {
		return m.Maxtargets
	}
	return 0
}

func (m *Spell) GetField220() int64 {
	if m != nil {
		return m.Field220
	}
	return 0
}

func (m *Spell) GetField221() int64 {
	if m != nil {
		return m.Field221
	}
	return 0
}

func (m *Spell) GetField222() int64 {
	if m != nil {
		return m.Field222
	}
	return 0
}

func (m *Spell) GetField223() int64 {
	if m != nil {
		return m.Field223
	}
	return 0
}

func (m *Spell) GetPersistdeath() int64 {
	if m != nil {
		return m.Persistdeath
	}
	return 0
}

func (m *Spell) GetField225() int64 {
	if m != nil {
		return m.Field225
	}
	return 0
}

func (m *Spell) GetField226() int64 {
	if m != nil {
		return m.Field226
	}
	return 0
}

func (m *Spell) GetMindist() float32 {
	if m != nil {
		return m.Mindist
	}
	return 0
}

func (m *Spell) GetMindistmod() float32 {
	if m != nil {
		return m.Mindistmod
	}
	return 0
}

func (m *Spell) GetMaxdist() float32 {
	if m != nil {
		return m.Maxdist
	}
	return 0
}

func (m *Spell) GetMaxdistmod() float32 {
	if m != nil {
		return m.Maxdistmod
	}
	return 0
}

func (m *Spell) GetMinrange() int64 {
	if m != nil {
		return m.Minrange
	}
	return 0
}

func (m *Spell) GetField232() int64 {
	if m != nil {
		return m.Field232
	}
	return 0
}

func (m *Spell) GetField233() int64 {
	if m != nil {
		return m.Field233
	}
	return 0
}

func (m *Spell) GetField234() int64 {
	if m != nil {
		return m.Field234
	}
	return 0
}

func (m *Spell) GetField235() int64 {
	if m != nil {
		return m.Field235
	}
	return 0
}

func (m *Spell) GetField236() int64 {
	if m != nil {
		return m.Field236
	}
	return 0
}

func init() {
	proto.RegisterType((*Spell)(nil), "pb.Spell")
}

func init() {
	proto.RegisterFile("proto/spell.proto", fileDescriptor_019b60b1f0b7eb53)
}

var fileDescriptor_019b60b1f0b7eb53 = []byte{
	// 2409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x99, 0x75, 0x9b, 0xe4, 0xc6,
	0xd5, 0xc5, 0x9f, 0x59, 0xdb, 0xbb, 0x5e, 0x19, 0x57, 0xf6, 0x6b, 0x1f, 0xf3, 0xda, 0x7e, 0x1d,
	0xaf, 0x1d, 0x7b, 0xdd, 0xc2, 0xee, 0x4e, 0x1c, 0x66, 0x4e, 0xd6, 0x61, 0x56, 0x4b, 0xd5, 0x3d,
	0xca, 0xa8, 0x4b, 0x8a, 0xa4, 0x9e, 0x9d, 0x71, 0x98, 0x19, 0x1d, 0x66, 0x66, 0x66, 0x66, 0x66,
	0x66, 0x66, 0xfc, 0x0e, 0x79, 0x0a, 0x24, 0xdd, 0xea, 0x2d, 0xff, 0xa7, 0x7b, 0x7e, 0xa7, 0xe8,
	0x16, 0xf6, 0x8c, 0x73, 0xa0, 0xaa, 0xcb, 0xb6, 0xbc, 0xa6, 0xa9, 0x58, 0x51, 0x1c, 0x96, 0xdf,
	0xee, 0x9e, 0x6a, 0x76, 0xc9, 0x0d, 0xd7, 0x3a, 0x27, 0x5c, 0x27, 0x34, 0xf7, 0x54, 0x67, 0x4f,
	0x9e, 0x61, 0xe3, 0xe0, 0xc6, 0xa1, 0xe3, 0x8e, 0xec, 0xc9, 0x33, 0xd7, 0x75, 0x8e, 0xe7, 0xc9,
	0x92, 0x61, 0xcf, 0xc1, 0x8d, 0x43, 0xfb, 0x8f, 0xc8, 0x6f, 0x17, 0xce, 0xbe, 0xaa, 0x48, 0x76,
	0x59, 0xed, 0xe1, 0x38, 0x29, 0x77, 0xa1, 0x7b, 0x89, 0x73, 0x72, 0xcb, 0x0a, 0x56, 0x95, 0x75,
	0x7b, 0x7d, 0xc9, 0x19, 0x8e, 0x97, 0xd8, 0xd0, 0x44, 0xe9, 0xdd, 0x72, 0x95, 0x26, 0x4d, 0x8b,
	0x13, 0x54, 0x69, 0x1d, 0xba, 0x17, 0x3a, 0x4e, 0xd9, 0x6e, 0xb2, 0x5a, 0x04, 0x0d, 0xf6, 0x4a,
	0x48, 0x14, 0xf7, 0x7c, 0x67, 0xbf, 0xf8, 0x28, 0xf9, 0x6e, 0xb9, 0xc2, 0x3e, 0x89, 0x07, 0xc1,
	0x3d, 0xe8, 0x9c, 0xa4, 0x02, 0x59, 0x02, 0x27, 0x4a, 0x4e, 0x25, 0x51, 0xbf, 0x1c, 0xf8, 0x3c,
	0xc9, 0x58, 0x83, 0xfd, 0xaa, 0xfe, 0x41, 0x71, 0xcf, 0x74, 0x4e, 0xa8, 0x13, 0xbe, 0x60, 0x70,
	0xe4, 0xf0, 0x55, 0xe0, 0x9e, 0xeb, 0x9c, 0x98, 0x94, 0x4c, 0x81, 0x93, 0x24, 0xe8, 0x63, 0xc1,
	0xaa, 0x55, 0xb3, 0x39, 0x4b, 0xd2, 0x2d, 0x9c, 0xac, 0x58, 0x17, 0xbb, 0x67, 0x39, 0x7b, 0xc5,
	0xf7, 0xaa, 0xc2, 0x29, 0x92, 0xe8, 0x48, 0x94, 0x11, 0x9d, 0x6a, 0xf3, 0x25, 0xc3, 0xa9, 0xaa,
	0x4c, 0x17, 0x8b, 0xfc, 0xd5, 0x2c, 0x2d, 0xb7, 0x59, 0xbd, 0x2b, 0xf9, 0x69, 0x92, 0x1b, 0x9a,
	0x18, 0x45, 0xcd, 0xfa, 0x1a, 0x4e, 0x97, 0x0e, 0xa2, 0xb8, 0x23, 0xe7, 0x8c, 0xd9, 0x6a, 0x3e,
	0xcf, 0x56, 0x75, 0xd2, 0xe6, 0x25, 0x9f, 0x97, 0xf5, 0x72, 0x55, 0x24, 0x38, 0x20, 0x8d, 0x36,
	0x24, 0x5a, 0xa5, 0x32, 0x5c, 0xd5, 0x2a, 0xd5, 0x44, 0xab, 0x09, 0xeb, 0x1d, 0x67, 0xa8, 0x56,
	0x07, 0x45, 0xac, 0x93, 0x65, 0xc2, 0x13, 0x9c, 0x29, 0x89, 0xfc, 0x76, 0xaf, 0x74, 0x4e, 0x67,
	0xf3, 0x39, 0x4b, 0xdb, 0x59, 0xd2, 0xb0, 0xed, 0xa4, 0x58, 0x31, 0x0f, 0xff, 0x27, 0xf9, 0x31,
	0xba, 0xc5, 0xeb, 0xe3, 0x2c, 0xab, 0xd7, 0xb7, 0x78, 0x03, 0x9c, 0x6d, 0xf5, 0x06, 0x16, 0x6f,
	0x08, 0x58, 0xbd, 0xa1, 0xc5, 0x1b, 0xe1, 0x1c, 0xab, 0x37, 0xb2, 0x78, 0x63, 0x9c, 0x6b, 0xf5,
	0xc6, 0x16, 0xef, 0x18, 0xe7, 0x59, 0xbd, 0x63, 0x8b, 0x77, 0x82, 0xf3, 0xad, 0xde, 0x89, 0xc5,
	0x3b, 0xc5, 0x05, 0x56, 0xef, 0xd4, 0xbd, 0xca, 0x39, 0xb0, 0x9e, 0xf3, 0x11, 0x2e, 0x94, 0xe6,
	0x63, 0x81, 0xcd, 0xed, 0xe1, 0x22, 0xbb, 0xdb, 0xb3, 0xb9, 0x7d, 0x1c, 0xb4, 0xbb, 0xfd, 0xc1,
	0x5d, 0xe4, 0xcb, 0xbc, 0xd5, 0xcb, 0xe2, 0x62, 0xea, 0x26, 0xc0, 0xe6, 0xf6, 0x71, 0x89, 0xdd,
	0x6d, 0xad, 0x3b, 0xc0, 0xa5, 0x76, 0x77, 0x60, 0x73, 0x87, 0xf8, 0x7f, 0xbb, 0x3b, 0xb4, 0xb9,
	0x23, 0x5c, 0x66, 0x77, 0x47, 0x36, 0x77, 0x8c, 0x9b, 0xd8, 0xdd, 0xb1, 0xcd, 0x3d, 0xc6, 0xe5,
	0x76, 0xf7, 0xd8, 0xe6, 0x9e, 0xe0, 0x90, 0xdd, 0x3d, 0xb1, 0xb9, 0xa7, 0xb8, 0xc2, 0xee, 0x9e,
	0xba, 0x87, 0x1d, 0xf7, 0x98, 0x49, 0x18, 0xe1, 0x4a, 0x69, 0xb7, 0x10, 0xab, 0xdf, 0xc3, 0x4d,
	0x6f, 0xc4, 0xef, 0x59, 0xfd, 0x3e, 0xae, 0xba, 0x11, 0xbf, 0xaf, 0xce, 0x95, 0x1d, 0x0f, 0x57,
	0x77, 0xe7, 0xca, 0x8e, 0xa7, 0x35, 0x1f, 0x87, 0x7b, 0xad, 0xf3, 0x05, 0xb8, 0xa6, 0xd7, 0x02,
	0xad, 0x85, 0x18, 0xf5, 0x5a, 0xa8, 0xb5, 0x08, 0x5e, 0xaf, 0x45, 0x5a, 0x8b, 0xe1, 0xf7, 0x5a,
	0xac, 0xb5, 0x31, 0x82, 0x5e, 0x1b, 0x6b, 0x6d, 0x82, 0xb0, 0xd7, 0x26, 0x5a, 0x9b, 0x22, 0xea,
	0xb5, 0xa9, 0xb8, 0x47, 0x44, 0x3f, 0x47, 0x88, 0xd5, 0x3d, 0x22, 0x83, 0x4e, 0xf5, 0x30, 0x1e,
	0x54, 0xaf, 0x53, 0x7d, 0x4c, 0x06, 0x55, 0x8e, 0x26, 0x4f, 0x4b, 0x8e, 0xa9, 0xaa, 0x55, 0x7c,
	0x8b, 0x7b, 0x73, 0xc9, 0x96, 0x52, 0xbe, 0x99, 0x94, 0xbb, 0x50, 0xde, 0x7c, 0xe5, 0xb2, 0x2a,
	0x39, 0xe3, 0x6d, 0xe3, 0xe1, 0xe6, 0x92, 0x52, 0xc9, 0x74, 0xf8, 0xb8, 0x76, 0xdd, 0xe1, 0x9b,
	0x8e, 0x00, 0xb7, 0x58, 0x77, 0x04, 0xa6, 0x23, 0xc4, 0x2d, 0xd7, 0x1d, 0xf2, 0xfc, 0xec, 0xc3,
	0xb4, 0x5c, 0xc9, 0xce, 0xdc, 0x4a, 0x9d, 0x47, 0xeb, 0xba, 0xc5, 0xeb, 0xe3, 0xd6, 0x56, 0xaf,
	0x6f, 0xf1, 0x06, 0xb8, 0x8d, 0xd5, 0x1b, 0x58, 0xbc, 0x21, 0x6e, 0x6b, 0xf5, 0xca, 0xfe, 0xf2,
	0x92, 0xed, 0x54, 0x8c, 0x67, 0x35, 0x4b, 0x16, 0x8c, 0xb7, 0x1e, 0x6e, 0xa7, 0xbc, 0xeb, 0xba,
	0xc5, 0xeb, 0xe3, 0xf6, 0x56, 0xaf, 0x6f, 0xf1, 0x06, 0xb8, 0x83, 0xd5, 0x1b, 0x58, 0xbc, 0x21,
	0xee, 0x68, 0xf5, 0x86, 0xe2, 0xe5, 0xa0, 0xaf, 0x6c, 0x0f, 0x77, 0x52, 0x2f, 0x87, 0x2e, 0x26,
	0xcc, 0xc7, 0x9d, 0x0d, 0xe6, 0x13, 0x16, 0xe0, 0x2e, 0x06, 0x0b, 0x08, 0x0b, 0x71, 0x57, 0x83,
	0xd1, 0xf6, 0x22, 0xdc, 0xcd, 0x60, 0x11, 0x61, 0x31, 0xee, 0x6e, 0xb0, 0x98, 0xb0, 0x31, 0xee,
	0x61, 0xb0, 0x31, 0x61, 0x13, 0xdc, 0xd3, 0x60, 0x13, 0xc2, 0xa6, 0xb8, 0x97, 0xc1, 0xa6, 0xe2,
	0xed, 0xd7, 0x8d, 0x75, 0x84, 0x7b, 0x4b, 0x38, 0x08, 0x94, 0x7a, 0xb8, 0x8f, 0x49, 0x3d, 0x4a,
	0x7d, 0x1c, 0x31, 0xa9, 0x2f, 0x68, 0x91, 0x2f, 0x36, 0xdb, 0x76, 0xb7, 0x62, 0xb8, 0x4e, 0xd1,
	0x5e, 0x10, 0xef, 0x9e, 0x45, 0x59, 0x66, 0xea, 0x64, 0xc2, 0x7d, 0xd5, 0xbb, 0x67, 0x50, 0x44,
	0xe9, 0x24, 0x6d, 0xf3, 0xed, 0xa4, 0x65, 0x19, 0xee, 0xa7, 0x4a, 0xf7, 0x82, 0x7a, 0xab, 0x35,
	0x79, 0xa3, 0x2a, 0xbf, 0x7f, 0xf7, 0x56, 0xeb, 0x14, 0x51, 0x5a, 0xd5, 0x93, 0x67, 0x1e, 0x1e,
	0xa0, 0x4a, 0xf7, 0x02, 0xa5, 0x3e, 0x1e, 0x68, 0x52, 0x9f, 0xd2, 0x00, 0x0f, 0x32, 0x69, 0x40,
	0x69, 0x88, 0x07, 0x9b, 0x34, 0xa4, 0x34, 0xc2, 0x43, 0x4c, 0x1a, 0x51, 0x1a, 0xe3, 0xa1, 0x26,
	0x8d, 0x29, 0x1d, 0xe3, 0x61, 0x26, 0x1d, 0x53, 0x3a, 0xc1, 0xc3, 0x4d, 0x3a, 0xa1, 0x74, 0x8a,
	0x47, 0x98, 0x74, 0x2a, 0xb2, 0xd5, 0x0f, 0x7e, 0x84, 0x47, 0xaa, 0x6c, 0x0d, 0x8a, 0xc1, 0x3d,
	0x24, 0x6b, 0xdc, 0x33, 0xb8, 0x8f, 0xd9, 0x1a, 0xf7, 0x05, 0x6f, 0x93, 0x7a, 0xc1, 0xd4, 0x6c,
	0xa4, 0x8a, 0x0f, 0x8a, 0x58, 0x7f, 0xe2, 0xa1, 0x92, 0xe5, 0xf3, 0x39, 0x32, 0xb5, 0xfe, 0xba,
	0x58, 0x9c, 0xd3, 0xcd, 0x56, 0x5e, 0x14, 0x60, 0xea, 0x9c, 0x96, 0x81, 0x28, 0x21, 0x7e, 0xd3,
	0xc8, 0xfa, 0xe6, 0xaa, 0x44, 0x17, 0xbb, 0x87, 0x9c, 0xd3, 0x18, 0xdf, 0xce, 0xeb, 0x92, 0x2f,
	0x19, 0x57, 0x4d, 0x2e, 0xa4, 0x65, 0x5d, 0x16, 0x59, 0x11, 0x2f, 0xf7, 0x72, 0x9e, 0x25, 0xbb,
	0xd8, 0x54, 0x59, 0xe9, 0x05, 0xf9, 0x7b, 0xa1, 0x48, 0x9a, 0x86, 0x35, 0x1e, 0x72, 0xfd, 0x7b,
	0x41, 0xc7, 0x84, 0xf9, 0x78, 0x94, 0xc1, 0x7c, 0xc2, 0x02, 0x6c, 0x19, 0x2c, 0x20, 0x2c, 0x44,
	0x61, 0xb0, 0x90, 0xb0, 0x08, 0x4b, 0x83, 0x45, 0x84, 0xc5, 0xe0, 0x06, 0x8b, 0x09, 0x1b, 0xa3,
	0x34, 0xd8, 0x98, 0xb0, 0x09, 0x2a, 0x83, 0x4d, 0x08, 0x9b, 0xe2, 0xd1, 0x06, 0x93, 0xbb, 0xbe,
	0x1b, 0xeb, 0x08, 0xb5, 0xca, 0x4c, 0x2f, 0x50, 0xea, 0xa1, 0x31, 0xa9, 0x47, 0xa9, 0x8f, 0xd6,
	0xa4, 0x3e, 0xa5, 0x01, 0x56, 0x26, 0x0d, 0x28, 0x0d, 0xb1, 0x6d, 0xd2, 0x90, 0xd2, 0x08, 0x47,
	0x4d, 0x1a, 0x51, 0x1a, 0x63, 0xc7, 0xa4, 0x71, 0xf7, 0x2b, 0x35, 0xe7, 0x8b, 0x84, 0xe7, 0x4b,
	0xec, 0xea, 0x5b, 0x74, 0x90, 0x86, 0x55, 0x2a, 0x0d, 0xd7, 0xd3, 0x55, 0xda, 0xf3, 0x3a, 0xd9,
	0x66, 0x85, 0x5c, 0x52, 0x8f, 0xd1, 0xbc, 0x57, 0xc4, 0x8d, 0x22, 0x7f, 0xd3, 0x26, 0x6a, 0xe1,
	0xf3, 0x8c, 0xed, 0xe0, 0xb1, 0xea, 0x46, 0x59, 0xd7, 0x45, 0x6f, 0xb2, 0xbc, 0x49, 0x8a, 0xa2,
	0x3c, 0xda, 0xe4, 0x2d, 0x1e, 0xa7, 0x7a, 0x43, 0x24, 0x31, 0x3b, 0x19, 0xcb, 0xdb, 0x9c, 0x35,
	0x23, 0x3c, 0x5e, 0xcd, 0x4e, 0x17, 0x13, 0xe6, 0xe1, 0x09, 0x06, 0xf3, 0xdc, 0xf3, 0x7a, 0xe6,
	0xe3, 0x89, 0x1b, 0x06, 0xf4, 0x09, 0x0c, 0xf0, 0x24, 0x13, 0x06, 0x04, 0x86, 0x78, 0xb2, 0x09,
	0x43, 0x02, 0x23, 0x3c, 0xc5, 0x84, 0x11, 0x81, 0x31, 0x9e, 0x6a, 0xc2, 0x98, 0xc0, 0x31, 0x9e,
	0x66, 0xc2, 0x31, 0x81, 0x13, 0x3c, 0xdd, 0x84, 0x13, 0x02, 0xa7, 0x78, 0x86, 0x09, 0xa7, 0xee,
	0x05, 0xce, 0xfe, 0x6e, 0xcc, 0x23, 0x3c, 0x53, 0xd1, 0x41, 0xa1, 0xd8, 0xc3, 0xb3, 0xd6, 0xb0,
	0x47, 0xb1, 0x8f, 0x67, 0xaf, 0x61, 0x9f, 0xe2, 0x00, 0xcf, 0x59, 0xc3, 0x01, 0xc5, 0x21, 0x9e,
	0xbb, 0x86, 0x43, 0x8a, 0x23, 0x3c, 0x6f, 0x0d, 0x47, 0x14, 0xc7, 0x78, 0xfe, 0x1a, 0x96, 0xf9,
	0x9a, 0xe7, 0xac, 0xc8, 0xbc, 0xd0, 0xc7, 0x0b, 0xf4, 0xa8, 0x3b, 0x81, 0xc0, 0x00, 0x2f, 0x34,
	0x61, 0xe0, 0x9e, 0xe3, 0xec, 0xe3, 0xec, 0xa8, 0x7c, 0xa8, 0xbe, 0x48, 0xb1, 0x2e, 0x16, 0x6d,
	0xaa, 0x35, 0x28, 0x96, 0xf6, 0x8b, 0x75, 0x9b, 0xbd, 0xe2, 0x5e, 0xe1, 0x9c, 0xb6, 0xe2, 0x39,
	0x6f, 0x59, 0x5d, 0xaf, 0xaa, 0x36, 0x99, 0x15, 0x0c, 0x37, 0x28, 0xd3, 0xba, 0xee, 0x5e, 0xd4,
	0xdd, 0xac, 0xf2, 0xb4, 0x7e, 0xc9, 0x06, 0xbd, 0x5a, 0xe5, 0x81, 0x7d, 0xb5, 0x73, 0x20, 0x2b,
	0xdb, 0xa6, 0x4d, 0xd2, 0xad, 0x9c, 0x2f, 0xd8, 0x0e, 0x5b, 0x56, 0x2d, 0x5e, 0xaa, 0x7c, 0xc7,
	0x12, 0x51, 0x5f, 0xc6, 0x0a, 0xd6, 0x32, 0xd9, 0xea, 0xcb, 0x74, 0x7d, 0x83, 0xe4, 0x5e, 0xaa,
	0xfe, 0x34, 0xb3, 0xaa, 0x1b, 0x56, 0xe4, 0x7c, 0x0b, 0x2f, 0xdf, 0x18, 0xfe, 0x36, 0xd3, 0x89,
	0x62, 0x00, 0xbc, 0xac, 0x92, 0xba, 0xcd, 0x93, 0x42, 0xf5, 0x05, 0xaf, 0xd0, 0x03, 0x58, 0xd3,
	0x87, 0x14, 0x46, 0x3e, 0x5e, 0x69, 0xa4, 0x30, 0x22, 0xf9, 0x8d, 0x02, 0xbc, 0xca, 0x84, 0x81,
	0xe8, 0x49, 0xb3, 0x59, 0xd6, 0xed, 0x6c, 0x35, 0x9f, 0xcf, 0xca, 0x1d, 0xbc, 0x5a, 0xf7, 0x84,
	0x8a, 0x62, 0x12, 0x32, 0xd6, 0xa4, 0x7c, 0xb5, 0xc4, 0x6b, 0xf4, 0x24, 0xe8, 0xd8, 0xbd, 0xd8,
	0x39, 0x49, 0x1c, 0x14, 0x1d, 0x7e, 0xad, 0xc2, 0x54, 0x73, 0x2f, 0x73, 0x4e, 0x51, 0xf7, 0x66,
	0x67, 0x7a, 0x9d, 0x32, 0x99, 0xaa, 0x7b, 0xb9, 0x73, 0xaa, 0x21, 0xf8, 0x78, 0xbd, 0xf2, 0xad,
	0xc9, 0x62, 0x3c, 0xbc, 0x4a, 0x79, 0x59, 0x94, 0x0d, 0xde, 0xa0, 0xc7, 0xd3, 0x09, 0xc3, 0x60,
	0xe3, 0x11, 0xde, 0x68, 0x0c, 0x36, 0x1e, 0x89, 0xce, 0xd6, 0x6c, 0x5e, 0xb0, 0x54, 0x2d, 0x87,
	0x37, 0xe9, 0xce, 0x12, 0x4d, 0x2c, 0xaa, 0x59, 0xc9, 0x57, 0xcd, 0x66, 0xd2, 0x32, 0xbc, 0x59,
	0x2f, 0xaa, 0x5e, 0x21, 0xd5, 0x07, 0x78, 0x8b, 0x59, 0x7d, 0x40, 0x60, 0x88, 0xb7, 0x9a, 0x50,
	0x1e, 0x36, 0x45, 0x56, 0xf2, 0xb6, 0x4e, 0x2a, 0xbc, 0x4d, 0xc3, 0x4e, 0x10, 0xad, 0x32, 0x9e,
	0xad, 0xea, 0xb4, 0x6c, 0x5a, 0xbc, 0x5d, 0xb7, 0xda, 0x2b, 0x62, 0x25, 0xc8, 0x40, 0xdc, 0xe3,
	0xb5, 0x3a, 0x84, 0xdf, 0xb1, 0xd1, 0x5d, 0xff, 0x86, 0x2e, 0xe6, 0x33, 0x6f, 0xb2, 0xbc, 0x49,
	0xf3, 0xaa, 0xc8, 0x39, 0xc3, 0x3b, 0xf5, 0x7c, 0x52, 0x91, 0x74, 0x74, 0x8a, 0x77, 0x99, 0x1d,
	0x9d, 0x0e, 0x70, 0x3c, 0xc2, 0xbb, 0x0d, 0x38, 0x1e, 0x11, 0xe8, 0xe1, 0x3d, 0x26, 0xf4, 0x08,
	0xf4, 0xf1, 0x5e, 0x13, 0xca, 0xe3, 0x47, 0x64, 0x30, 0xc9, 0x32, 0x96, 0xe1, 0x7d, 0x7a, 0x88,
	0xbd, 0x22, 0xa6, 0x46, 0x0e, 0x65, 0x55, 0x6d, 0x31, 0x56, 0xe1, 0xfd, 0x7a, 0x6a, 0x88, 0x26,
	0x2c, 0x7c, 0xb5, 0xdc, 0xcc, 0xdb, 0x46, 0x5e, 0x56, 0x1f, 0xd0, 0x16, 0xa2, 0xc9, 0xd3, 0x42,
	0x85, 0xf8, 0x60, 0x77, 0x5a, 0xa8, 0x58, 0xac, 0xc2, 0x6a, 0xbb, 0x52, 0xfb, 0x45, 0x3c, 0xc4,
	0xf0, 0x21, 0xbd, 0x0a, 0x0d, 0xd5, 0xb0, 0xa5, 0x49, 0x91, 0xe2, 0xc3, 0xeb, 0x36, 0xa1, 0x8a,
	0x34, 0x13, 0xa1, 0xc2, 0x47, 0x74, 0x9a, 0xa9, 0x28, 0xea, 0x92, 0xc7, 0x51, 0x9a, 0xb4, 0x6c,
	0x51, 0xd6, 0xbb, 0xf8, 0xa8, 0xae, 0xcb, 0x50, 0x87, 0xb4, 0x4d, 0x3c, 0x7c, 0xcc, 0x48, 0xdb,
	0x84, 0xe4, 0x74, 0xe2, 0xe3, 0xe3, 0x26, 0xf4, 0x65, 0x67, 0x53, 0x5e, 0xa5, 0x25, 0x2f, 0x76,
	0xe7, 0x45, 0xb2, 0xc0, 0x27, 0xba, 0xce, 0x52, 0x55, 0x2c, 0x1f, 0xf1, 0x26, 0xe0, 0xf2, 0x9c,
	0xe2, 0x59, 0xce, 0x17, 0xf8, 0xa4, 0x5e, 0x3e, 0x6b, 0xba, 0x7b, 0xb6, 0xb3, 0x37, 0x4d, 0xf8,
	0x72, 0x31, 0xc3, 0xa7, 0x94, 0x43, 0x87, 0x62, 0xfa, 0x78, 0x99, 0xe5, 0xb2, 0xe7, 0xf8, 0xb4,
	0x9e, 0xbe, 0x5e, 0x91, 0x73, 0x53, 0xa5, 0xfd, 0x40, 0x3f, 0xd3, 0xcd, 0xcd, 0xa0, 0x89, 0xce,
	0xf2, 0x2a, 0x5d, 0x35, 0x6c, 0xbe, 0x2a, 0x38, 0x6b, 0x1a, 0x7c, 0x56, 0x77, 0xd6, 0x50, 0x45,
	0x43, 0xcb, 0x9c, 0xeb, 0xf3, 0xee, 0x73, 0xba, 0xa1, 0x5e, 0x91, 0x38, 0xd9, 0xd1, 0xf8, 0xf3,
	0x1d, 0xee, 0x14, 0x31, 0x2f, 0xdb, 0x79, 0x9d, 0x14, 0xea, 0x89, 0xd3, 0xe0, 0x0b, 0x7a, 0x5e,
	0xa8, 0x28, 0x8e, 0x67, 0x15, 0x8b, 0x6d, 0x83, 0x2f, 0xea, 0xe3, 0x79, 0x90, 0x44, 0x2d, 0x3c,
	0x5f, 0xce, 0x44, 0xaf, 0xe4, 0x2f, 0xb5, 0x2f, 0xe9, 0x5a, 0xa8, 0x28, 0xce, 0xab, 0xb4, 0xe4,
	0xac, 0x69, 0x93, 0xba, 0x4d, 0xf8, 0xa2, 0x60, 0xf8, 0xb2, 0x3e, 0xaf, 0x4c, 0x59, 0x0c, 0x5c,
	0x29, 0x65, 0xa5, 0x7c, 0x5f, 0xd1, 0x03, 0x37, 0x54, 0x31, 0xd3, 0x0d, 0x67, 0x89, 0xb8, 0x46,
	0xf0, 0x55, 0x3d, 0xd3, 0x9d, 0x20, 0x93, 0x57, 0xb6, 0x6c, 0xa7, 0x65, 0x3c, 0x93, 0x67, 0xd7,
	0xd7, 0xba, 0xe4, 0x51, 0x75, 0x58, 0x2d, 0xd3, 0x09, 0xbe, 0x6e, 0xac, 0x96, 0xe9, 0x84, 0xc0,
	0x29, 0xbe, 0x61, 0xc2, 0xa9, 0x98, 0xc0, 0x66, 0xd5, 0x54, 0x5d, 0xf5, 0xdf, 0xd4, 0x13, 0x48,
	0xb4, 0x3e, 0x6d, 0xea, 0xbf, 0x17, 0xdf, 0xa2, 0x69, 0x53, 0xff, 0xc0, 0x38, 0xc7, 0xd9, 0xd7,
	0x94, 0x7c, 0x21, 0xf6, 0xc3, 0xb7, 0xf5, 0xee, 0xd3, 0x71, 0xdf, 0xb6, 0x3f, 0x0a, 0xf0, 0x1d,
	0xda, 0xb6, 0x3f, 0x0a, 0x08, 0x0c, 0xf1, 0x5d, 0x13, 0x86, 0x72, 0x4b, 0x97, 0xb3, 0xa2, 0x4c,
	0xb7, 0xf0, 0xbd, 0x6e, 0x4b, 0xab, 0x98, 0x94, 0x8b, 0xf1, 0x7d, 0xb3, 0x5c, 0x2c, 0x7a, 0x2b,
	0x97, 0xe6, 0xa2, 0x2e, 0x57, 0x15, 0x7e, 0xa0, 0x7b, 0x3b, 0x48, 0xee, 0x19, 0xce, 0xf1, 0x75,
	0xc2, 0xb7, 0xf0, 0x43, 0x85, 0x64, 0x40, 0xaa, 0x9c, 0xe2, 0x47, 0x66, 0x95, 0xc3, 0xc9, 0xe8,
	0x7b, 0x23, 0xfc, 0xd8, 0x80, 0xde, 0xa8, 0xdb, 0x64, 0x35, 0x6b, 0xda, 0x3a, 0x4f, 0xe5, 0x3f,
	0x36, 0x7e, 0x42, 0x36, 0x19, 0xd1, 0xc5, 0x1a, 0x96, 0x4f, 0x62, 0xa1, 0xe1, 0xa7, 0x7a, 0x0d,
	0xf7, 0x8a, 0x68, 0x26, 0xe7, 0x69, 0xb9, 0x9c, 0x25, 0x2d, 0x7e, 0xa6, 0x9b, 0xe9, 0x04, 0x31,
	0x4f, 0xe5, 0xaa, 0x2d, 0xe7, 0x9a, 0xff, 0x5c, 0xcf, 0x13, 0xd1, 0x48, 0x37, 0x23, 0xfc, 0xc2,
	0xec, 0x66, 0x44, 0x60, 0x8c, 0x5f, 0x9a, 0x30, 0x26, 0x70, 0x8c, 0x5f, 0x99, 0x70, 0x2c, 0x36,
	0x45, 0xc2, 0x96, 0xc9, 0x4e, 0xb7, 0xb5, 0x7e, 0xad, 0x37, 0x05, 0x15, 0x45, 0xd6, 0x89, 0xe5,
	0x37, 0x3a, 0xeb, 0xc4, 0xd0, 0x37, 0xe1, 0x8f, 0xf0, 0x5b, 0xa3, 0x09, 0x7f, 0x44, 0xa0, 0x87,
	0xdf, 0x99, 0xd0, 0x23, 0xd0, 0xc7, 0xef, 0x4d, 0xe8, 0x13, 0x18, 0xe0, 0x0f, 0x26, 0x94, 0x6f,
	0x9c, 0x8a, 0xd5, 0xf2, 0x31, 0xc7, 0x92, 0x76, 0x13, 0x7f, 0xec, 0x0e, 0x6b, 0x22, 0x92, 0x1a,
	0x22, 0xfc, 0xc9, 0xac, 0x81, 0x64, 0xcd, 0x8f, 0xf1, 0x67, 0x13, 0xc6, 0x62, 0x85, 0x2e, 0x73,
	0x9e, 0x89, 0x03, 0xe9, 0x2f, 0x82, 0xed, 0x39, 0xd2, 0xc5, 0x32, 0x1d, 0xea, 0x73, 0x59, 0x66,
	0xf8, 0xab, 0xa2, 0x44, 0x92, 0x65, 0x93, 0x1d, 0x59, 0xf6, 0x6f, 0x5d, 0x59, 0x15, 0xeb, 0x54,
	0x76, 0x65, 0xff, 0xde, 0x95, 0xed, 0x25, 0xd1, 0x29, 0x71, 0x2e, 0xca, 0xdd, 0xf8, 0x0f, 0xdd,
	0xa9, 0x4e, 0x18, 0x7a, 0x1c, 0xf8, 0xf8, 0xa7, 0xd1, 0xe3, 0x80, 0x64, 0x2b, 0x08, 0xf0, 0x2f,
	0x13, 0x92, 0xdd, 0x18, 0x84, 0xf8, 0xb7, 0x09, 0x43, 0x02, 0x23, 0xfc, 0xc7, 0x84, 0x24, 0x4b,
	0x41, 0x8c, 0xff, 0x9a, 0x30, 0x9e, 0xed, 0x95, 0xff, 0x20, 0x0e, 0xfe, 0x17, 0x00, 0x00, 0xff,
	0xff, 0x7c, 0xd3, 0x1e, 0x97, 0x35, 0x1e, 0x00, 0x00,
}
