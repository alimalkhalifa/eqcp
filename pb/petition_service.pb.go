// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/petition_service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PetitionSearchRequest struct {
	Charname             string   `protobuf:"bytes,1,opt,name=charname,proto3" json:"charname,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Orderby              string   `protobuf:"bytes,4,opt,name=orderby,proto3" json:"orderby,omitempty"`
	Orderdesc            bool     `protobuf:"varint,5,opt,name=orderdesc,proto3" json:"orderdesc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionSearchRequest) Reset()         { *m = PetitionSearchRequest{} }
func (m *PetitionSearchRequest) String() string { return proto.CompactTextString(m) }
func (*PetitionSearchRequest) ProtoMessage()    {}
func (*PetitionSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{0}
}

func (m *PetitionSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionSearchRequest.Unmarshal(m, b)
}
func (m *PetitionSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionSearchRequest.Marshal(b, m, deterministic)
}
func (m *PetitionSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionSearchRequest.Merge(m, src)
}
func (m *PetitionSearchRequest) XXX_Size() int {
	return xxx_messageInfo_PetitionSearchRequest.Size(m)
}
func (m *PetitionSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionSearchRequest proto.InternalMessageInfo

func (m *PetitionSearchRequest) GetCharname() string {
	if m != nil {
		return m.Charname
	}
	return ""
}

func (m *PetitionSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PetitionSearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PetitionSearchRequest) GetOrderby() string {
	if m != nil {
		return m.Orderby
	}
	return ""
}

func (m *PetitionSearchRequest) GetOrderdesc() bool {
	if m != nil {
		return m.Orderdesc
	}
	return false
}

type PetitionSearchResponse struct {
	Petitions            []*Petition `protobuf:"bytes,1,rep,name=Petitions,proto3" json:"Petitions,omitempty"`
	Total                int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PetitionSearchResponse) Reset()         { *m = PetitionSearchResponse{} }
func (m *PetitionSearchResponse) String() string { return proto.CompactTextString(m) }
func (*PetitionSearchResponse) ProtoMessage()    {}
func (*PetitionSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{1}
}

func (m *PetitionSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionSearchResponse.Unmarshal(m, b)
}
func (m *PetitionSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionSearchResponse.Marshal(b, m, deterministic)
}
func (m *PetitionSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionSearchResponse.Merge(m, src)
}
func (m *PetitionSearchResponse) XXX_Size() int {
	return xxx_messageInfo_PetitionSearchResponse.Size(m)
}
func (m *PetitionSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionSearchResponse proto.InternalMessageInfo

func (m *PetitionSearchResponse) GetPetitions() []*Petition {
	if m != nil {
		return m.Petitions
	}
	return nil
}

func (m *PetitionSearchResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type PetitionCreateRequest struct {
	Values               map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PetitionCreateRequest) Reset()         { *m = PetitionCreateRequest{} }
func (m *PetitionCreateRequest) String() string { return proto.CompactTextString(m) }
func (*PetitionCreateRequest) ProtoMessage()    {}
func (*PetitionCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{2}
}

func (m *PetitionCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionCreateRequest.Unmarshal(m, b)
}
func (m *PetitionCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionCreateRequest.Marshal(b, m, deterministic)
}
func (m *PetitionCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionCreateRequest.Merge(m, src)
}
func (m *PetitionCreateRequest) XXX_Size() int {
	return xxx_messageInfo_PetitionCreateRequest.Size(m)
}
func (m *PetitionCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionCreateRequest proto.InternalMessageInfo

func (m *PetitionCreateRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type PetitionCreateResponse struct {
	Dib                  int64    `protobuf:"varint,1,opt,name=dib,proto3" json:"dib,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionCreateResponse) Reset()         { *m = PetitionCreateResponse{} }
func (m *PetitionCreateResponse) String() string { return proto.CompactTextString(m) }
func (*PetitionCreateResponse) ProtoMessage()    {}
func (*PetitionCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{3}
}

func (m *PetitionCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionCreateResponse.Unmarshal(m, b)
}
func (m *PetitionCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionCreateResponse.Marshal(b, m, deterministic)
}
func (m *PetitionCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionCreateResponse.Merge(m, src)
}
func (m *PetitionCreateResponse) XXX_Size() int {
	return xxx_messageInfo_PetitionCreateResponse.Size(m)
}
func (m *PetitionCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionCreateResponse proto.InternalMessageInfo

func (m *PetitionCreateResponse) GetDib() int64 {
	if m != nil {
		return m.Dib
	}
	return 0
}

type PetitionReadRequest struct {
	Dib                  int64    `protobuf:"varint,1,opt,name=dib,proto3" json:"dib,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionReadRequest) Reset()         { *m = PetitionReadRequest{} }
func (m *PetitionReadRequest) String() string { return proto.CompactTextString(m) }
func (*PetitionReadRequest) ProtoMessage()    {}
func (*PetitionReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{4}
}

func (m *PetitionReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionReadRequest.Unmarshal(m, b)
}
func (m *PetitionReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionReadRequest.Marshal(b, m, deterministic)
}
func (m *PetitionReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionReadRequest.Merge(m, src)
}
func (m *PetitionReadRequest) XXX_Size() int {
	return xxx_messageInfo_PetitionReadRequest.Size(m)
}
func (m *PetitionReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionReadRequest proto.InternalMessageInfo

func (m *PetitionReadRequest) GetDib() int64 {
	if m != nil {
		return m.Dib
	}
	return 0
}

type PetitionReadResponse struct {
	Petition             *Petition `protobuf:"bytes,1,opt,name=petition,proto3" json:"petition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PetitionReadResponse) Reset()         { *m = PetitionReadResponse{} }
func (m *PetitionReadResponse) String() string { return proto.CompactTextString(m) }
func (*PetitionReadResponse) ProtoMessage()    {}
func (*PetitionReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{5}
}

func (m *PetitionReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionReadResponse.Unmarshal(m, b)
}
func (m *PetitionReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionReadResponse.Marshal(b, m, deterministic)
}
func (m *PetitionReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionReadResponse.Merge(m, src)
}
func (m *PetitionReadResponse) XXX_Size() int {
	return xxx_messageInfo_PetitionReadResponse.Size(m)
}
func (m *PetitionReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionReadResponse proto.InternalMessageInfo

func (m *PetitionReadResponse) GetPetition() *Petition {
	if m != nil {
		return m.Petition
	}
	return nil
}

type PetitionUpdateRequest struct {
	Dib                  int64             `protobuf:"varint,1,opt,name=dib,proto3" json:"dib,omitempty"`
	Values               map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PetitionUpdateRequest) Reset()         { *m = PetitionUpdateRequest{} }
func (m *PetitionUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*PetitionUpdateRequest) ProtoMessage()    {}
func (*PetitionUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{6}
}

func (m *PetitionUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionUpdateRequest.Unmarshal(m, b)
}
func (m *PetitionUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionUpdateRequest.Marshal(b, m, deterministic)
}
func (m *PetitionUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionUpdateRequest.Merge(m, src)
}
func (m *PetitionUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_PetitionUpdateRequest.Size(m)
}
func (m *PetitionUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionUpdateRequest proto.InternalMessageInfo

func (m *PetitionUpdateRequest) GetDib() int64 {
	if m != nil {
		return m.Dib
	}
	return 0
}

func (m *PetitionUpdateRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type PetitionUpdateResponse struct {
	Rowsaffected         int64    `protobuf:"varint,1,opt,name=rowsaffected,proto3" json:"rowsaffected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionUpdateResponse) Reset()         { *m = PetitionUpdateResponse{} }
func (m *PetitionUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*PetitionUpdateResponse) ProtoMessage()    {}
func (*PetitionUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{7}
}

func (m *PetitionUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionUpdateResponse.Unmarshal(m, b)
}
func (m *PetitionUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionUpdateResponse.Marshal(b, m, deterministic)
}
func (m *PetitionUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionUpdateResponse.Merge(m, src)
}
func (m *PetitionUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_PetitionUpdateResponse.Size(m)
}
func (m *PetitionUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionUpdateResponse proto.InternalMessageInfo

func (m *PetitionUpdateResponse) GetRowsaffected() int64 {
	if m != nil {
		return m.Rowsaffected
	}
	return 0
}

type PetitionDeleteRequest struct {
	Dib                  int64    `protobuf:"varint,1,opt,name=dib,proto3" json:"dib,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionDeleteRequest) Reset()         { *m = PetitionDeleteRequest{} }
func (m *PetitionDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*PetitionDeleteRequest) ProtoMessage()    {}
func (*PetitionDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{8}
}

func (m *PetitionDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionDeleteRequest.Unmarshal(m, b)
}
func (m *PetitionDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionDeleteRequest.Marshal(b, m, deterministic)
}
func (m *PetitionDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionDeleteRequest.Merge(m, src)
}
func (m *PetitionDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_PetitionDeleteRequest.Size(m)
}
func (m *PetitionDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionDeleteRequest proto.InternalMessageInfo

func (m *PetitionDeleteRequest) GetDib() int64 {
	if m != nil {
		return m.Dib
	}
	return 0
}

type PetitionDeleteResponse struct {
	Rowsaffected         int64    `protobuf:"varint,1,opt,name=rowsaffected,proto3" json:"rowsaffected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionDeleteResponse) Reset()         { *m = PetitionDeleteResponse{} }
func (m *PetitionDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*PetitionDeleteResponse) ProtoMessage()    {}
func (*PetitionDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{9}
}

func (m *PetitionDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionDeleteResponse.Unmarshal(m, b)
}
func (m *PetitionDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionDeleteResponse.Marshal(b, m, deterministic)
}
func (m *PetitionDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionDeleteResponse.Merge(m, src)
}
func (m *PetitionDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_PetitionDeleteResponse.Size(m)
}
func (m *PetitionDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionDeleteResponse proto.InternalMessageInfo

func (m *PetitionDeleteResponse) GetRowsaffected() int64 {
	if m != nil {
		return m.Rowsaffected
	}
	return 0
}

type PetitionPatchRequest struct {
	Dib                  int64    `protobuf:"varint,1,opt,name=dib,proto3" json:"dib,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionPatchRequest) Reset()         { *m = PetitionPatchRequest{} }
func (m *PetitionPatchRequest) String() string { return proto.CompactTextString(m) }
func (*PetitionPatchRequest) ProtoMessage()    {}
func (*PetitionPatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{10}
}

func (m *PetitionPatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionPatchRequest.Unmarshal(m, b)
}
func (m *PetitionPatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionPatchRequest.Marshal(b, m, deterministic)
}
func (m *PetitionPatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionPatchRequest.Merge(m, src)
}
func (m *PetitionPatchRequest) XXX_Size() int {
	return xxx_messageInfo_PetitionPatchRequest.Size(m)
}
func (m *PetitionPatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionPatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionPatchRequest proto.InternalMessageInfo

func (m *PetitionPatchRequest) GetDib() int64 {
	if m != nil {
		return m.Dib
	}
	return 0
}

func (m *PetitionPatchRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PetitionPatchRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PetitionPatchResponse struct {
	Rowsaffected         int64    `protobuf:"varint,1,opt,name=rowsaffected,proto3" json:"rowsaffected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PetitionPatchResponse) Reset()         { *m = PetitionPatchResponse{} }
func (m *PetitionPatchResponse) String() string { return proto.CompactTextString(m) }
func (*PetitionPatchResponse) ProtoMessage()    {}
func (*PetitionPatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fa665b87440b3b1, []int{11}
}

func (m *PetitionPatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PetitionPatchResponse.Unmarshal(m, b)
}
func (m *PetitionPatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PetitionPatchResponse.Marshal(b, m, deterministic)
}
func (m *PetitionPatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PetitionPatchResponse.Merge(m, src)
}
func (m *PetitionPatchResponse) XXX_Size() int {
	return xxx_messageInfo_PetitionPatchResponse.Size(m)
}
func (m *PetitionPatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PetitionPatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PetitionPatchResponse proto.InternalMessageInfo

func (m *PetitionPatchResponse) GetRowsaffected() int64 {
	if m != nil {
		return m.Rowsaffected
	}
	return 0
}

func init() {
	proto.RegisterType((*PetitionSearchRequest)(nil), "pb.PetitionSearchRequest")
	proto.RegisterType((*PetitionSearchResponse)(nil), "pb.PetitionSearchResponse")
	proto.RegisterType((*PetitionCreateRequest)(nil), "pb.PetitionCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "pb.PetitionCreateRequest.ValuesEntry")
	proto.RegisterType((*PetitionCreateResponse)(nil), "pb.PetitionCreateResponse")
	proto.RegisterType((*PetitionReadRequest)(nil), "pb.PetitionReadRequest")
	proto.RegisterType((*PetitionReadResponse)(nil), "pb.PetitionReadResponse")
	proto.RegisterType((*PetitionUpdateRequest)(nil), "pb.PetitionUpdateRequest")
	proto.RegisterMapType((map[string]string)(nil), "pb.PetitionUpdateRequest.ValuesEntry")
	proto.RegisterType((*PetitionUpdateResponse)(nil), "pb.PetitionUpdateResponse")
	proto.RegisterType((*PetitionDeleteRequest)(nil), "pb.PetitionDeleteRequest")
	proto.RegisterType((*PetitionDeleteResponse)(nil), "pb.PetitionDeleteResponse")
	proto.RegisterType((*PetitionPatchRequest)(nil), "pb.PetitionPatchRequest")
	proto.RegisterType((*PetitionPatchResponse)(nil), "pb.PetitionPatchResponse")
}

func init() { proto.RegisterFile("proto/petition_service.proto", fileDescriptor_8fa665b87440b3b1) }

var fileDescriptor_8fa665b87440b3b1 = []byte{
	// 618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x57, 0x92, 0xad, 0xb4, 0x5e, 0x81, 0x61, 0xca, 0x9a, 0x45, 0x05, 0x55, 0x96, 0x80, 0xd2,
	0x43, 0x23, 0xca, 0x05, 0x06, 0x48, 0x48, 0xc0, 0xbd, 0x0a, 0x82, 0x03, 0x12, 0x02, 0x27, 0x71,
	0xb7, 0x88, 0x2e, 0x0e, 0x89, 0x57, 0x54, 0x4d, 0xbb, 0xf0, 0x0d, 0x10, 0x27, 0xce, 0x7c, 0x24,
	0xbe, 0x02, 0x5f, 0x81, 0x3b, 0x8a, 0x13, 0xd7, 0x7e, 0x6b, 0x34, 0x81, 0xc4, 0xcd, 0xef, 0x8f,
	0xdf, 0xef, 0xfd, 0x5e, 0x7e, 0xcf, 0x41, 0x83, 0x2c, 0xe7, 0x82, 0xfb, 0x19, 0x13, 0x89, 0x48,
	0x78, 0xfa, 0xbe, 0x60, 0xf9, 0x32, 0x89, 0xd8, 0x44, 0xba, 0xb1, 0x9d, 0x85, 0xde, 0xe0, 0x90,
	0xf3, 0xc3, 0x05, 0xf3, 0x69, 0x96, 0xf8, 0x34, 0x4d, 0xb9, 0xa0, 0x65, 0x62, 0x51, 0x65, 0x78,
	0x3d, 0x78, 0xbf, 0xf2, 0x92, 0xef, 0x16, 0xba, 0x31, 0xab, 0x5d, 0xaf, 0x18, 0xcd, 0xa3, 0xa3,
	0x80, 0x7d, 0x3a, 0x61, 0x85, 0xc0, 0x1e, 0x6a, 0x47, 0x47, 0x34, 0x4f, 0xe9, 0x31, 0x73, 0xad,
	0xa1, 0x35, 0xea, 0x04, 0x6b, 0x1b, 0xf7, 0xd0, 0xf6, 0x22, 0x39, 0x4e, 0x84, 0x6b, 0x0f, 0xad,
	0x91, 0x13, 0x54, 0x06, 0xde, 0x43, 0x2d, 0x3e, 0x9f, 0x17, 0x4c, 0xb8, 0x8e, 0x74, 0xd7, 0x16,
	0x76, 0xd1, 0x25, 0x9e, 0xc7, 0x2c, 0x0f, 0x57, 0xee, 0x96, 0x2c, 0xa4, 0x4c, 0x3c, 0x40, 0x1d,
	0x79, 0x8c, 0x59, 0x11, 0xb9, 0xdb, 0x43, 0x6b, 0xd4, 0x0e, 0xb4, 0x83, 0xbc, 0x45, 0x7b, 0xe7,
	0x5b, 0x2b, 0x32, 0x9e, 0x16, 0x0c, 0x8f, 0x51, 0x47, 0x45, 0x0a, 0xd7, 0x1a, 0x3a, 0xa3, 0x9d,
	0x69, 0x77, 0x92, 0x85, 0x13, 0xe5, 0x0c, 0x74, 0xb8, 0xec, 0x55, 0x70, 0x41, 0x17, 0xaa, 0x57,
	0x69, 0x90, 0xaf, 0x06, 0xef, 0xe7, 0x39, 0xa3, 0x82, 0x29, 0xde, 0x4f, 0x51, 0x6b, 0x49, 0x17,
	0x27, 0xac, 0x70, 0x6d, 0x59, 0xf8, 0xb6, 0x59, 0x18, 0xa4, 0x4e, 0xde, 0xc8, 0xbc, 0x97, 0xa9,
	0xc8, 0x57, 0x41, 0x7d, 0xc9, 0x7b, 0x84, 0x76, 0x0c, 0x37, 0xde, 0x45, 0xce, 0x47, 0xb6, 0xaa,
	0x07, 0x58, 0x1e, 0xcb, 0x7e, 0x64, 0xaa, 0xec, 0xa7, 0x13, 0x54, 0xc6, 0x81, 0xfd, 0xd0, 0x22,
	0x63, 0xcd, 0x57, 0xe1, 0xd4, 0x7c, 0x77, 0x91, 0x13, 0x27, 0xa1, 0xac, 0xe2, 0x04, 0xe5, 0x91,
	0xdc, 0x45, 0xd7, 0xd7, 0x64, 0x19, 0x8d, 0x55, 0xf3, 0x9b, 0x89, 0xcf, 0x50, 0x0f, 0x26, 0xd6,
	0x25, 0x47, 0xa8, 0xad, 0xa4, 0x20, 0xd3, 0xcf, 0x4f, 0x70, 0x1d, 0x25, 0x3f, 0x8c, 0x51, 0xbd,
	0xce, 0x62, 0x63, 0x54, 0x1b, 0x68, 0x17, 0x0f, 0x0f, 0x5c, 0xfe, 0xdf, 0xc3, 0x7b, 0xa2, 0x87,
	0xa7, 0x70, 0x6a, 0xa6, 0x04, 0x75, 0x73, 0xfe, 0xb9, 0xa0, 0xf3, 0x39, 0x8b, 0x04, 0x8b, 0xeb,
	0x76, 0x81, 0x8f, 0xdc, 0xd3, 0x14, 0x5f, 0xb0, 0x05, 0xbb, 0x80, 0xa2, 0x09, 0xa4, 0x52, 0xff,
	0x01, 0x68, 0xa6, 0x3f, 0xc7, 0x8c, 0x0a, 0xbd, 0x6d, 0x9b, 0xa3, 0xac, 0xc9, 0xdb, 0x0d, 0xe4,
	0x1d, 0x83, 0x3c, 0x79, 0xac, 0x5b, 0xaf, 0x2b, 0xfe, 0x7d, 0x3b, 0xd3, 0xdf, 0x5b, 0xe8, 0xaa,
	0xde, 0x31, 0xf9, 0xa0, 0x60, 0x8e, 0xae, 0xc0, 0xb5, 0xc3, 0xfb, 0xe6, 0x57, 0x04, 0xaf, 0x84,
	0xe7, 0x35, 0x85, 0xaa, 0x06, 0xc8, 0x9d, 0x2f, 0x3f, 0x7f, 0x7d, 0xb3, 0x87, 0xf8, 0x96, 0xbf,
	0xbc, 0xbf, 0x7e, 0x77, 0xfc, 0x42, 0x26, 0xf9, 0xa7, 0xea, 0x31, 0x39, 0xc3, 0x1f, 0x34, 0x60,
	0xa5, 0x7b, 0x08, 0x08, 0x76, 0x0e, 0x02, 0xc2, 0x35, 0x21, 0x7d, 0x09, 0x78, 0x8d, 0x74, 0x4d,
	0xc0, 0x03, 0x6b, 0x8c, 0xdf, 0xa1, 0xae, 0xb9, 0x04, 0xb8, 0x0f, 0xa4, 0xae, 0xf7, 0xc7, 0x73,
	0x37, 0x03, 0x75, 0x6d, 0x4f, 0xd6, 0xee, 0x61, 0x0c, 0xc8, 0x9c, 0xc6, 0x49, 0x78, 0x86, 0xe7,
	0x9a, 0x40, 0xa5, 0x3d, 0x48, 0x00, 0xe8, 0x1e, 0x12, 0x80, 0x52, 0x25, 0x37, 0x25, 0x48, 0xdf,
	0x6b, 0x00, 0x29, 0x69, 0x44, 0x1a, 0xa7, 0x92, 0x1e, 0xc4, 0x01, 0xca, 0x85, 0x38, 0x50, 0xa9,
	0x8a, 0xcc, 0xb8, 0x89, 0x4c, 0x84, 0x2e, 0x03, 0x3d, 0x61, 0x30, 0x13, 0x53, 0xb4, 0xde, 0x7e,
	0x43, 0x04, 0x32, 0x99, 0x36, 0x33, 0x09, 0x5b, 0xf2, 0xef, 0xf3, 0xe0, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x1a, 0x4e, 0x0c, 0x31, 0xd5, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PetitionServiceClient is the client API for PetitionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PetitionServiceClient interface {
	PetitionSearch(ctx context.Context, in *PetitionSearchRequest, opts ...grpc.CallOption) (*PetitionSearchResponse, error)
	PetitionCreate(ctx context.Context, in *PetitionCreateRequest, opts ...grpc.CallOption) (*PetitionCreateResponse, error)
	PetitionRead(ctx context.Context, in *PetitionReadRequest, opts ...grpc.CallOption) (*PetitionReadResponse, error)
	PetitionUpdate(ctx context.Context, in *PetitionUpdateRequest, opts ...grpc.CallOption) (*PetitionUpdateResponse, error)
	PetitionDelete(ctx context.Context, in *PetitionDeleteRequest, opts ...grpc.CallOption) (*PetitionDeleteResponse, error)
	PetitionPatch(ctx context.Context, in *PetitionPatchRequest, opts ...grpc.CallOption) (*PetitionPatchResponse, error)
}

type petitionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPetitionServiceClient(cc grpc.ClientConnInterface) PetitionServiceClient {
	return &petitionServiceClient{cc}
}

func (c *petitionServiceClient) PetitionSearch(ctx context.Context, in *PetitionSearchRequest, opts ...grpc.CallOption) (*PetitionSearchResponse, error) {
	out := new(PetitionSearchResponse)
	err := c.cc.Invoke(ctx, "/pb.PetitionService/PetitionSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petitionServiceClient) PetitionCreate(ctx context.Context, in *PetitionCreateRequest, opts ...grpc.CallOption) (*PetitionCreateResponse, error) {
	out := new(PetitionCreateResponse)
	err := c.cc.Invoke(ctx, "/pb.PetitionService/PetitionCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petitionServiceClient) PetitionRead(ctx context.Context, in *PetitionReadRequest, opts ...grpc.CallOption) (*PetitionReadResponse, error) {
	out := new(PetitionReadResponse)
	err := c.cc.Invoke(ctx, "/pb.PetitionService/PetitionRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petitionServiceClient) PetitionUpdate(ctx context.Context, in *PetitionUpdateRequest, opts ...grpc.CallOption) (*PetitionUpdateResponse, error) {
	out := new(PetitionUpdateResponse)
	err := c.cc.Invoke(ctx, "/pb.PetitionService/PetitionUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petitionServiceClient) PetitionDelete(ctx context.Context, in *PetitionDeleteRequest, opts ...grpc.CallOption) (*PetitionDeleteResponse, error) {
	out := new(PetitionDeleteResponse)
	err := c.cc.Invoke(ctx, "/pb.PetitionService/PetitionDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *petitionServiceClient) PetitionPatch(ctx context.Context, in *PetitionPatchRequest, opts ...grpc.CallOption) (*PetitionPatchResponse, error) {
	out := new(PetitionPatchResponse)
	err := c.cc.Invoke(ctx, "/pb.PetitionService/PetitionPatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PetitionServiceServer is the server API for PetitionService service.
type PetitionServiceServer interface {
	PetitionSearch(context.Context, *PetitionSearchRequest) (*PetitionSearchResponse, error)
	PetitionCreate(context.Context, *PetitionCreateRequest) (*PetitionCreateResponse, error)
	PetitionRead(context.Context, *PetitionReadRequest) (*PetitionReadResponse, error)
	PetitionUpdate(context.Context, *PetitionUpdateRequest) (*PetitionUpdateResponse, error)
	PetitionDelete(context.Context, *PetitionDeleteRequest) (*PetitionDeleteResponse, error)
	PetitionPatch(context.Context, *PetitionPatchRequest) (*PetitionPatchResponse, error)
}

// UnimplementedPetitionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPetitionServiceServer struct {
}

func (*UnimplementedPetitionServiceServer) PetitionSearch(ctx context.Context, req *PetitionSearchRequest) (*PetitionSearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PetitionSearch not implemented")
}
func (*UnimplementedPetitionServiceServer) PetitionCreate(ctx context.Context, req *PetitionCreateRequest) (*PetitionCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PetitionCreate not implemented")
}
func (*UnimplementedPetitionServiceServer) PetitionRead(ctx context.Context, req *PetitionReadRequest) (*PetitionReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PetitionRead not implemented")
}
func (*UnimplementedPetitionServiceServer) PetitionUpdate(ctx context.Context, req *PetitionUpdateRequest) (*PetitionUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PetitionUpdate not implemented")
}
func (*UnimplementedPetitionServiceServer) PetitionDelete(ctx context.Context, req *PetitionDeleteRequest) (*PetitionDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PetitionDelete not implemented")
}
func (*UnimplementedPetitionServiceServer) PetitionPatch(ctx context.Context, req *PetitionPatchRequest) (*PetitionPatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PetitionPatch not implemented")
}

func RegisterPetitionServiceServer(s *grpc.Server, srv PetitionServiceServer) {
	s.RegisterService(&_PetitionService_serviceDesc, srv)
}

func _PetitionService_PetitionSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetitionSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetitionServiceServer).PetitionSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetitionService/PetitionSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetitionServiceServer).PetitionSearch(ctx, req.(*PetitionSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetitionService_PetitionCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetitionCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetitionServiceServer).PetitionCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetitionService/PetitionCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetitionServiceServer).PetitionCreate(ctx, req.(*PetitionCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetitionService_PetitionRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetitionReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetitionServiceServer).PetitionRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetitionService/PetitionRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetitionServiceServer).PetitionRead(ctx, req.(*PetitionReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetitionService_PetitionUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetitionUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetitionServiceServer).PetitionUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetitionService/PetitionUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetitionServiceServer).PetitionUpdate(ctx, req.(*PetitionUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetitionService_PetitionDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetitionDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetitionServiceServer).PetitionDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetitionService/PetitionDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetitionServiceServer).PetitionDelete(ctx, req.(*PetitionDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PetitionService_PetitionPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PetitionPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PetitionServiceServer).PetitionPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PetitionService/PetitionPatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PetitionServiceServer).PetitionPatch(ctx, req.(*PetitionPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PetitionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PetitionService",
	HandlerType: (*PetitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PetitionSearch",
			Handler:    _PetitionService_PetitionSearch_Handler,
		},
		{
			MethodName: "PetitionCreate",
			Handler:    _PetitionService_PetitionCreate_Handler,
		},
		{
			MethodName: "PetitionRead",
			Handler:    _PetitionService_PetitionRead_Handler,
		},
		{
			MethodName: "PetitionUpdate",
			Handler:    _PetitionService_PetitionUpdate_Handler,
		},
		{
			MethodName: "PetitionDelete",
			Handler:    _PetitionService_PetitionDelete_Handler,
		},
		{
			MethodName: "PetitionPatch",
			Handler:    _PetitionService_PetitionPatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/petition_service.proto",
}
