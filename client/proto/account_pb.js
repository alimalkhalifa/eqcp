// source: proto/account.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pb.Account', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Account.displayName = 'proto.pb.Account';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    charname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sharedplat: jspb.Message.getFieldWithDefault(msg, 4, 0),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lsid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lsaccountid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    gmspeed: jspb.Message.getFieldWithDefault(msg, 9, 0),
    revoked: jspb.Message.getFieldWithDefault(msg, 10, 0),
    karma: jspb.Message.getFieldWithDefault(msg, 11, 0),
    miniloginip: jspb.Message.getFieldWithDefault(msg, 12, ""),
    hideme: jspb.Message.getFieldWithDefault(msg, 13, 0),
    rulesflag: jspb.Message.getFieldWithDefault(msg, 14, 0),
    suspendeduntil: jspb.Message.getFieldWithDefault(msg, 15, 0),
    timecreation: jspb.Message.getFieldWithDefault(msg, 16, 0),
    expansion: jspb.Message.getFieldWithDefault(msg, 17, 0),
    banreason: jspb.Message.getFieldWithDefault(msg, 18, ""),
    suspendreason: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Account}
 */
proto.pb.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Account;
  return proto.pb.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Account}
 */
proto.pb.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCharname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSharedplat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLsid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLsaccountid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGmspeed(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRevoked(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setKarma(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiniloginip(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHideme(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRulesflag(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSuspendeduntil(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimecreation(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpansion(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setBanreason(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuspendreason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCharname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSharedplat();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getLsid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLsaccountid();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getGmspeed();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getRevoked();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getKarma();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getMiniloginip();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getHideme();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getRulesflag();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getSuspendeduntil();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getTimecreation();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getExpansion();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getBanreason();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSuspendreason();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.pb.Account.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pb.Account.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string charname = 3;
 * @return {string}
 */
proto.pb.Account.prototype.getCharname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setCharname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 sharedplat = 4;
 * @return {number}
 */
proto.pb.Account.prototype.getSharedplat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setSharedplat = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.pb.Account.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 status = 6;
 * @return {number}
 */
proto.pb.Account.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string lsid = 7;
 * @return {string}
 */
proto.pb.Account.prototype.getLsid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setLsid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 lsaccountid = 8;
 * @return {number}
 */
proto.pb.Account.prototype.getLsaccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setLsaccountid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 gmspeed = 9;
 * @return {number}
 */
proto.pb.Account.prototype.getGmspeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setGmspeed = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 revoked = 10;
 * @return {number}
 */
proto.pb.Account.prototype.getRevoked = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setRevoked = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 karma = 11;
 * @return {number}
 */
proto.pb.Account.prototype.getKarma = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setKarma = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string miniloginip = 12;
 * @return {string}
 */
proto.pb.Account.prototype.getMiniloginip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setMiniloginip = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int64 hideme = 13;
 * @return {number}
 */
proto.pb.Account.prototype.getHideme = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setHideme = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 rulesflag = 14;
 * @return {number}
 */
proto.pb.Account.prototype.getRulesflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setRulesflag = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 suspendeduntil = 15;
 * @return {number}
 */
proto.pb.Account.prototype.getSuspendeduntil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setSuspendeduntil = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 timecreation = 16;
 * @return {number}
 */
proto.pb.Account.prototype.getTimecreation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setTimecreation = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 expansion = 17;
 * @return {number}
 */
proto.pb.Account.prototype.getExpansion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setExpansion = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string banreason = 18;
 * @return {string}
 */
proto.pb.Account.prototype.getBanreason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setBanreason = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string suspendreason = 19;
 * @return {string}
 */
proto.pb.Account.prototype.getSuspendreason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Account} returns this
 */
proto.pb.Account.prototype.setSuspendreason = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


goog.object.extend(exports, proto.pb);
