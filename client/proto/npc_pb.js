// source: proto/npc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pb.Npc', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pb.Npc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pb.Npc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pb.Npc.displayName = 'proto.pb.Npc';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pb.Npc.prototype.toObject = function(opt_includeInstance) {
  return proto.pb.Npc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pb.Npc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Npc.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0),
    race: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pb_class: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bodytype: jspb.Message.getFieldWithDefault(msg, 7, 0),
    hp: jspb.Message.getFieldWithDefault(msg, 8, 0),
    mana: jspb.Message.getFieldWithDefault(msg, 9, 0),
    gender: jspb.Message.getFieldWithDefault(msg, 10, 0),
    texture: jspb.Message.getFieldWithDefault(msg, 11, 0),
    helmtexture: jspb.Message.getFieldWithDefault(msg, 12, 0),
    herosforgemodel: jspb.Message.getFieldWithDefault(msg, 13, 0),
    size: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    hpregenrate: jspb.Message.getFieldWithDefault(msg, 15, 0),
    manaregenrate: jspb.Message.getFieldWithDefault(msg, 16, 0),
    loottableid: jspb.Message.getFieldWithDefault(msg, 17, 0),
    merchantid: jspb.Message.getFieldWithDefault(msg, 18, 0),
    altcurrencyid: jspb.Message.getFieldWithDefault(msg, 19, 0),
    npcspellsid: jspb.Message.getFieldWithDefault(msg, 20, 0),
    npcspellseffectsid: jspb.Message.getFieldWithDefault(msg, 21, 0),
    npcfactionid: jspb.Message.getFieldWithDefault(msg, 22, 0),
    adventuretemplateid: jspb.Message.getFieldWithDefault(msg, 23, 0),
    traptemplate: jspb.Message.getFieldWithDefault(msg, 24, 0),
    mindmg: jspb.Message.getFieldWithDefault(msg, 25, 0),
    maxdmg: jspb.Message.getFieldWithDefault(msg, 26, 0),
    attackcount: jspb.Message.getFieldWithDefault(msg, 27, 0),
    npcspecialattks: jspb.Message.getFieldWithDefault(msg, 28, ""),
    specialabilities: jspb.Message.getFieldWithDefault(msg, 29, ""),
    aggroradius: jspb.Message.getFieldWithDefault(msg, 30, 0),
    assistradius: jspb.Message.getFieldWithDefault(msg, 31, 0),
    face: jspb.Message.getFieldWithDefault(msg, 32, 0),
    luclinhairstyle: jspb.Message.getFieldWithDefault(msg, 33, 0),
    luclinhaircolor: jspb.Message.getFieldWithDefault(msg, 34, 0),
    luclineyecolor: jspb.Message.getFieldWithDefault(msg, 35, 0),
    luclineyecolor2: jspb.Message.getFieldWithDefault(msg, 36, 0),
    luclinbeardcolor: jspb.Message.getFieldWithDefault(msg, 37, 0),
    luclinbeard: jspb.Message.getFieldWithDefault(msg, 38, 0),
    drakkinheritage: jspb.Message.getFieldWithDefault(msg, 39, 0),
    drakkintattoo: jspb.Message.getFieldWithDefault(msg, 40, 0),
    drakkindetails: jspb.Message.getFieldWithDefault(msg, 41, 0),
    armortintid: jspb.Message.getFieldWithDefault(msg, 42, 0),
    armortintred: jspb.Message.getFieldWithDefault(msg, 43, 0),
    armortintgreen: jspb.Message.getFieldWithDefault(msg, 44, 0),
    armortintblue: jspb.Message.getFieldWithDefault(msg, 45, 0),
    dmeleetexture1: jspb.Message.getFieldWithDefault(msg, 46, 0),
    dmeleetexture2: jspb.Message.getFieldWithDefault(msg, 47, 0),
    ammoidfile: jspb.Message.getFieldWithDefault(msg, 48, ""),
    primmeleetype: jspb.Message.getFieldWithDefault(msg, 49, 0),
    secmeleetype: jspb.Message.getFieldWithDefault(msg, 50, 0),
    rangedtype: jspb.Message.getFieldWithDefault(msg, 51, 0),
    runspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 52, 0.0),
    mr: jspb.Message.getFieldWithDefault(msg, 53, 0),
    cr: jspb.Message.getFieldWithDefault(msg, 54, 0),
    dr: jspb.Message.getFieldWithDefault(msg, 55, 0),
    fr: jspb.Message.getFieldWithDefault(msg, 56, 0),
    pr: jspb.Message.getFieldWithDefault(msg, 57, 0),
    corrup: jspb.Message.getFieldWithDefault(msg, 58, 0),
    phr: jspb.Message.getFieldWithDefault(msg, 59, 0),
    seeinvis: jspb.Message.getFieldWithDefault(msg, 60, 0),
    seeinvisundead: jspb.Message.getFieldWithDefault(msg, 61, 0),
    qglobal: jspb.Message.getFieldWithDefault(msg, 62, 0),
    ac: jspb.Message.getFieldWithDefault(msg, 63, 0),
    npcaggro: jspb.Message.getFieldWithDefault(msg, 64, 0),
    spawnlimit: jspb.Message.getFieldWithDefault(msg, 65, 0),
    attackspeed: jspb.Message.getFloatingPointFieldWithDefault(msg, 66, 0.0),
    attackdelay: jspb.Message.getFieldWithDefault(msg, 67, 0),
    findable: jspb.Message.getFieldWithDefault(msg, 68, 0),
    str: jspb.Message.getFieldWithDefault(msg, 69, 0),
    sta: jspb.Message.getFieldWithDefault(msg, 70, 0),
    dex: jspb.Message.getFieldWithDefault(msg, 71, 0),
    agi: jspb.Message.getFieldWithDefault(msg, 72, 0),
    pb_int: jspb.Message.getFieldWithDefault(msg, 73, 0),
    wis: jspb.Message.getFieldWithDefault(msg, 74, 0),
    cha: jspb.Message.getFieldWithDefault(msg, 75, 0),
    seehide: jspb.Message.getFieldWithDefault(msg, 76, 0),
    seeimprovedhide: jspb.Message.getFieldWithDefault(msg, 77, 0),
    trackable: jspb.Message.getFieldWithDefault(msg, 78, 0),
    isbot: jspb.Message.getFieldWithDefault(msg, 79, 0),
    exclude: jspb.Message.getFieldWithDefault(msg, 80, 0),
    atk: jspb.Message.getFieldWithDefault(msg, 81, 0),
    accuracy: jspb.Message.getFieldWithDefault(msg, 82, 0),
    avoidance: jspb.Message.getFieldWithDefault(msg, 83, 0),
    slowmitigation: jspb.Message.getFieldWithDefault(msg, 84, 0),
    version: jspb.Message.getFieldWithDefault(msg, 85, 0),
    maxlevel: jspb.Message.getFieldWithDefault(msg, 86, 0),
    scalerate: jspb.Message.getFieldWithDefault(msg, 87, 0),
    privatecorpse: jspb.Message.getFieldWithDefault(msg, 88, 0),
    uniquespawnbyname: jspb.Message.getFieldWithDefault(msg, 89, 0),
    underwater: jspb.Message.getFieldWithDefault(msg, 90, 0),
    isquest: jspb.Message.getFieldWithDefault(msg, 91, 0),
    emoteid: jspb.Message.getFieldWithDefault(msg, 92, 0),
    spellscale: jspb.Message.getFloatingPointFieldWithDefault(msg, 93, 0.0),
    healscale: jspb.Message.getFloatingPointFieldWithDefault(msg, 94, 0.0),
    notargethotkey: jspb.Message.getFieldWithDefault(msg, 95, 0),
    raidtarget: jspb.Message.getFieldWithDefault(msg, 96, 0),
    armtexture: jspb.Message.getFieldWithDefault(msg, 97, 0),
    bracertexture: jspb.Message.getFieldWithDefault(msg, 98, 0),
    handtexture: jspb.Message.getFieldWithDefault(msg, 99, 0),
    legtexture: jspb.Message.getFieldWithDefault(msg, 100, 0),
    feettexture: jspb.Message.getFieldWithDefault(msg, 101, 0),
    light: jspb.Message.getFieldWithDefault(msg, 102, 0),
    walkspeed: jspb.Message.getFieldWithDefault(msg, 103, 0),
    peqid: jspb.Message.getFieldWithDefault(msg, 104, 0),
    unique: jspb.Message.getFieldWithDefault(msg, 105, 0),
    fixed: jspb.Message.getFieldWithDefault(msg, 106, 0),
    ignoredespawn: jspb.Message.getFieldWithDefault(msg, 107, 0),
    showname: jspb.Message.getFieldWithDefault(msg, 108, 0),
    untargetable: jspb.Message.getFieldWithDefault(msg, 109, 0),
    charmac: jspb.Message.getFieldWithDefault(msg, 110, 0),
    charmmindmg: jspb.Message.getFieldWithDefault(msg, 111, 0),
    charmmaxdmg: jspb.Message.getFieldWithDefault(msg, 112, 0),
    charmattackdelay: jspb.Message.getFieldWithDefault(msg, 113, 0),
    charmaccuracyrating: jspb.Message.getFieldWithDefault(msg, 114, 0),
    charmavoidancerating: jspb.Message.getFieldWithDefault(msg, 115, 0),
    charmatk: jspb.Message.getFieldWithDefault(msg, 116, 0),
    skipgloballoot: jspb.Message.getFieldWithDefault(msg, 117, 0),
    rarespawn: jspb.Message.getFieldWithDefault(msg, 118, 0),
    stuckbehavior: jspb.Message.getFieldWithDefault(msg, 119, 0),
    cleanname: jspb.Message.getFieldWithDefault(msg, 122, ""),
    model: jspb.Message.getFieldWithDefault(msg, 123, 0),
    flymode: jspb.Message.getFieldWithDefault(msg, 124, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pb.Npc}
 */
proto.pb.Npc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pb.Npc;
  return proto.pb.Npc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pb.Npc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pb.Npc}
 */
proto.pb.Npc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRace(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClass(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBodytype(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMana(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGender(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTexture(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHelmtexture(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHerosforgemodel(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHpregenrate(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setManaregenrate(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLoottableid(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMerchantid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAltcurrencyid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNpcspellsid(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNpcspellseffectsid(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNpcfactionid(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAdventuretemplateid(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTraptemplate(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMindmg(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxdmg(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAttackcount(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setNpcspecialattks(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecialabilities(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAggroradius(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssistradius(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFace(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLuclinhairstyle(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLuclinhaircolor(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLuclineyecolor(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLuclineyecolor2(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLuclinbeardcolor(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLuclinbeard(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDrakkinheritage(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDrakkintattoo(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDrakkindetails(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArmortintid(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArmortintred(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArmortintgreen(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArmortintblue(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDmeleetexture1(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDmeleetexture2(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmmoidfile(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrimmeleetype(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSecmeleetype(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRangedtype(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRunspeed(value);
      break;
    case 53:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMr(value);
      break;
    case 54:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCr(value);
      break;
    case 55:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDr(value);
      break;
    case 56:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFr(value);
      break;
    case 57:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPr(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCorrup(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPhr(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeeinvis(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeeinvisundead(value);
      break;
    case 62:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQglobal(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAc(value);
      break;
    case 64:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNpcaggro(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSpawnlimit(value);
      break;
    case 66:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAttackspeed(value);
      break;
    case 67:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAttackdelay(value);
      break;
    case 68:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFindable(value);
      break;
    case 69:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStr(value);
      break;
    case 70:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSta(value);
      break;
    case 71:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDex(value);
      break;
    case 72:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgi(value);
      break;
    case 73:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt(value);
      break;
    case 74:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWis(value);
      break;
    case 75:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCha(value);
      break;
    case 76:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeehide(value);
      break;
    case 77:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeeimprovedhide(value);
      break;
    case 78:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTrackable(value);
      break;
    case 79:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsbot(value);
      break;
    case 80:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExclude(value);
      break;
    case 81:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAtk(value);
      break;
    case 82:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccuracy(value);
      break;
    case 83:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvoidance(value);
      break;
    case 84:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSlowmitigation(value);
      break;
    case 85:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 86:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxlevel(value);
      break;
    case 87:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScalerate(value);
      break;
    case 88:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrivatecorpse(value);
      break;
    case 89:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUniquespawnbyname(value);
      break;
    case 90:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnderwater(value);
      break;
    case 91:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsquest(value);
      break;
    case 92:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmoteid(value);
      break;
    case 93:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSpellscale(value);
      break;
    case 94:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHealscale(value);
      break;
    case 95:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNotargethotkey(value);
      break;
    case 96:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRaidtarget(value);
      break;
    case 97:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setArmtexture(value);
      break;
    case 98:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBracertexture(value);
      break;
    case 99:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHandtexture(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLegtexture(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFeettexture(value);
      break;
    case 102:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLight(value);
      break;
    case 103:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWalkspeed(value);
      break;
    case 104:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPeqid(value);
      break;
    case 105:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnique(value);
      break;
    case 106:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFixed(value);
      break;
    case 107:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIgnoredespawn(value);
      break;
    case 108:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShowname(value);
      break;
    case 109:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUntargetable(value);
      break;
    case 110:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmac(value);
      break;
    case 111:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmmindmg(value);
      break;
    case 112:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmmaxdmg(value);
      break;
    case 113:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmattackdelay(value);
      break;
    case 114:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmaccuracyrating(value);
      break;
    case 115:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmavoidancerating(value);
      break;
    case 116:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharmatk(value);
      break;
    case 117:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkipgloballoot(value);
      break;
    case 118:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRarespawn(value);
      break;
    case 119:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStuckbehavior(value);
      break;
    case 122:
      var value = /** @type {string} */ (reader.readString());
      msg.setCleanname(value);
      break;
    case 123:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setModel(value);
      break;
    case 124:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFlymode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pb.Npc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pb.Npc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pb.Npc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pb.Npc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLevel();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRace();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getClass();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getBodytype();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getHp();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMana();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getGender();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTexture();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getHelmtexture();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getHerosforgemodel();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = message.getHpregenrate();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getManaregenrate();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getLoottableid();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getMerchantid();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getAltcurrencyid();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getNpcspellsid();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getNpcspellseffectsid();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getNpcfactionid();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getAdventuretemplateid();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = message.getTraptemplate();
  if (f !== 0) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = message.getMindmg();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getMaxdmg();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
  f = message.getAttackcount();
  if (f !== 0) {
    writer.writeInt64(
      27,
      f
    );
  }
  f = message.getNpcspecialattks();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getSpecialabilities();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getAggroradius();
  if (f !== 0) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = message.getAssistradius();
  if (f !== 0) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = message.getFace();
  if (f !== 0) {
    writer.writeInt64(
      32,
      f
    );
  }
  f = message.getLuclinhairstyle();
  if (f !== 0) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = message.getLuclinhaircolor();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
  f = message.getLuclineyecolor();
  if (f !== 0) {
    writer.writeInt64(
      35,
      f
    );
  }
  f = message.getLuclineyecolor2();
  if (f !== 0) {
    writer.writeInt64(
      36,
      f
    );
  }
  f = message.getLuclinbeardcolor();
  if (f !== 0) {
    writer.writeInt64(
      37,
      f
    );
  }
  f = message.getLuclinbeard();
  if (f !== 0) {
    writer.writeInt64(
      38,
      f
    );
  }
  f = message.getDrakkinheritage();
  if (f !== 0) {
    writer.writeInt64(
      39,
      f
    );
  }
  f = message.getDrakkintattoo();
  if (f !== 0) {
    writer.writeInt64(
      40,
      f
    );
  }
  f = message.getDrakkindetails();
  if (f !== 0) {
    writer.writeInt64(
      41,
      f
    );
  }
  f = message.getArmortintid();
  if (f !== 0) {
    writer.writeInt64(
      42,
      f
    );
  }
  f = message.getArmortintred();
  if (f !== 0) {
    writer.writeInt64(
      43,
      f
    );
  }
  f = message.getArmortintgreen();
  if (f !== 0) {
    writer.writeInt64(
      44,
      f
    );
  }
  f = message.getArmortintblue();
  if (f !== 0) {
    writer.writeInt64(
      45,
      f
    );
  }
  f = message.getDmeleetexture1();
  if (f !== 0) {
    writer.writeInt64(
      46,
      f
    );
  }
  f = message.getDmeleetexture2();
  if (f !== 0) {
    writer.writeInt64(
      47,
      f
    );
  }
  f = message.getAmmoidfile();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getPrimmeleetype();
  if (f !== 0) {
    writer.writeInt64(
      49,
      f
    );
  }
  f = message.getSecmeleetype();
  if (f !== 0) {
    writer.writeInt64(
      50,
      f
    );
  }
  f = message.getRangedtype();
  if (f !== 0) {
    writer.writeInt64(
      51,
      f
    );
  }
  f = message.getRunspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      52,
      f
    );
  }
  f = message.getMr();
  if (f !== 0) {
    writer.writeInt64(
      53,
      f
    );
  }
  f = message.getCr();
  if (f !== 0) {
    writer.writeInt64(
      54,
      f
    );
  }
  f = message.getDr();
  if (f !== 0) {
    writer.writeInt64(
      55,
      f
    );
  }
  f = message.getFr();
  if (f !== 0) {
    writer.writeInt64(
      56,
      f
    );
  }
  f = message.getPr();
  if (f !== 0) {
    writer.writeInt64(
      57,
      f
    );
  }
  f = message.getCorrup();
  if (f !== 0) {
    writer.writeInt64(
      58,
      f
    );
  }
  f = message.getPhr();
  if (f !== 0) {
    writer.writeInt64(
      59,
      f
    );
  }
  f = message.getSeeinvis();
  if (f !== 0) {
    writer.writeInt64(
      60,
      f
    );
  }
  f = message.getSeeinvisundead();
  if (f !== 0) {
    writer.writeInt64(
      61,
      f
    );
  }
  f = message.getQglobal();
  if (f !== 0) {
    writer.writeInt64(
      62,
      f
    );
  }
  f = message.getAc();
  if (f !== 0) {
    writer.writeInt64(
      63,
      f
    );
  }
  f = message.getNpcaggro();
  if (f !== 0) {
    writer.writeInt64(
      64,
      f
    );
  }
  f = message.getSpawnlimit();
  if (f !== 0) {
    writer.writeInt64(
      65,
      f
    );
  }
  f = message.getAttackspeed();
  if (f !== 0.0) {
    writer.writeFloat(
      66,
      f
    );
  }
  f = message.getAttackdelay();
  if (f !== 0) {
    writer.writeInt64(
      67,
      f
    );
  }
  f = message.getFindable();
  if (f !== 0) {
    writer.writeInt64(
      68,
      f
    );
  }
  f = message.getStr();
  if (f !== 0) {
    writer.writeInt64(
      69,
      f
    );
  }
  f = message.getSta();
  if (f !== 0) {
    writer.writeInt64(
      70,
      f
    );
  }
  f = message.getDex();
  if (f !== 0) {
    writer.writeInt64(
      71,
      f
    );
  }
  f = message.getAgi();
  if (f !== 0) {
    writer.writeInt64(
      72,
      f
    );
  }
  f = message.getInt();
  if (f !== 0) {
    writer.writeInt64(
      73,
      f
    );
  }
  f = message.getWis();
  if (f !== 0) {
    writer.writeInt64(
      74,
      f
    );
  }
  f = message.getCha();
  if (f !== 0) {
    writer.writeInt64(
      75,
      f
    );
  }
  f = message.getSeehide();
  if (f !== 0) {
    writer.writeInt64(
      76,
      f
    );
  }
  f = message.getSeeimprovedhide();
  if (f !== 0) {
    writer.writeInt64(
      77,
      f
    );
  }
  f = message.getTrackable();
  if (f !== 0) {
    writer.writeInt64(
      78,
      f
    );
  }
  f = message.getIsbot();
  if (f !== 0) {
    writer.writeInt64(
      79,
      f
    );
  }
  f = message.getExclude();
  if (f !== 0) {
    writer.writeInt64(
      80,
      f
    );
  }
  f = message.getAtk();
  if (f !== 0) {
    writer.writeInt64(
      81,
      f
    );
  }
  f = message.getAccuracy();
  if (f !== 0) {
    writer.writeInt64(
      82,
      f
    );
  }
  f = message.getAvoidance();
  if (f !== 0) {
    writer.writeInt64(
      83,
      f
    );
  }
  f = message.getSlowmitigation();
  if (f !== 0) {
    writer.writeInt64(
      84,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      85,
      f
    );
  }
  f = message.getMaxlevel();
  if (f !== 0) {
    writer.writeInt64(
      86,
      f
    );
  }
  f = message.getScalerate();
  if (f !== 0) {
    writer.writeInt64(
      87,
      f
    );
  }
  f = message.getPrivatecorpse();
  if (f !== 0) {
    writer.writeInt64(
      88,
      f
    );
  }
  f = message.getUniquespawnbyname();
  if (f !== 0) {
    writer.writeInt64(
      89,
      f
    );
  }
  f = message.getUnderwater();
  if (f !== 0) {
    writer.writeInt64(
      90,
      f
    );
  }
  f = message.getIsquest();
  if (f !== 0) {
    writer.writeInt64(
      91,
      f
    );
  }
  f = message.getEmoteid();
  if (f !== 0) {
    writer.writeInt64(
      92,
      f
    );
  }
  f = message.getSpellscale();
  if (f !== 0.0) {
    writer.writeFloat(
      93,
      f
    );
  }
  f = message.getHealscale();
  if (f !== 0.0) {
    writer.writeFloat(
      94,
      f
    );
  }
  f = message.getNotargethotkey();
  if (f !== 0) {
    writer.writeInt64(
      95,
      f
    );
  }
  f = message.getRaidtarget();
  if (f !== 0) {
    writer.writeInt64(
      96,
      f
    );
  }
  f = message.getArmtexture();
  if (f !== 0) {
    writer.writeInt64(
      97,
      f
    );
  }
  f = message.getBracertexture();
  if (f !== 0) {
    writer.writeInt64(
      98,
      f
    );
  }
  f = message.getHandtexture();
  if (f !== 0) {
    writer.writeInt64(
      99,
      f
    );
  }
  f = message.getLegtexture();
  if (f !== 0) {
    writer.writeInt64(
      100,
      f
    );
  }
  f = message.getFeettexture();
  if (f !== 0) {
    writer.writeInt64(
      101,
      f
    );
  }
  f = message.getLight();
  if (f !== 0) {
    writer.writeInt64(
      102,
      f
    );
  }
  f = message.getWalkspeed();
  if (f !== 0) {
    writer.writeInt64(
      103,
      f
    );
  }
  f = message.getPeqid();
  if (f !== 0) {
    writer.writeInt64(
      104,
      f
    );
  }
  f = message.getUnique();
  if (f !== 0) {
    writer.writeInt64(
      105,
      f
    );
  }
  f = message.getFixed();
  if (f !== 0) {
    writer.writeInt64(
      106,
      f
    );
  }
  f = message.getIgnoredespawn();
  if (f !== 0) {
    writer.writeInt64(
      107,
      f
    );
  }
  f = message.getShowname();
  if (f !== 0) {
    writer.writeInt64(
      108,
      f
    );
  }
  f = message.getUntargetable();
  if (f !== 0) {
    writer.writeInt64(
      109,
      f
    );
  }
  f = message.getCharmac();
  if (f !== 0) {
    writer.writeInt64(
      110,
      f
    );
  }
  f = message.getCharmmindmg();
  if (f !== 0) {
    writer.writeInt64(
      111,
      f
    );
  }
  f = message.getCharmmaxdmg();
  if (f !== 0) {
    writer.writeInt64(
      112,
      f
    );
  }
  f = message.getCharmattackdelay();
  if (f !== 0) {
    writer.writeInt64(
      113,
      f
    );
  }
  f = message.getCharmaccuracyrating();
  if (f !== 0) {
    writer.writeInt64(
      114,
      f
    );
  }
  f = message.getCharmavoidancerating();
  if (f !== 0) {
    writer.writeInt64(
      115,
      f
    );
  }
  f = message.getCharmatk();
  if (f !== 0) {
    writer.writeInt64(
      116,
      f
    );
  }
  f = message.getSkipgloballoot();
  if (f !== 0) {
    writer.writeInt64(
      117,
      f
    );
  }
  f = message.getRarespawn();
  if (f !== 0) {
    writer.writeInt64(
      118,
      f
    );
  }
  f = message.getStuckbehavior();
  if (f !== 0) {
    writer.writeInt64(
      119,
      f
    );
  }
  f = message.getCleanname();
  if (f.length > 0) {
    writer.writeString(
      122,
      f
    );
  }
  f = message.getModel();
  if (f !== 0) {
    writer.writeInt64(
      123,
      f
    );
  }
  f = message.getFlymode();
  if (f !== 0) {
    writer.writeInt64(
      124,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.pb.Npc.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pb.Npc.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string lastname = 3;
 * @return {string}
 */
proto.pb.Npc.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 level = 4;
 * @return {number}
 */
proto.pb.Npc.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 race = 5;
 * @return {number}
 */
proto.pb.Npc.prototype.getRace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setRace = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 class = 6;
 * @return {number}
 */
proto.pb.Npc.prototype.getClass = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setClass = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 bodytype = 7;
 * @return {number}
 */
proto.pb.Npc.prototype.getBodytype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setBodytype = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 hp = 8;
 * @return {number}
 */
proto.pb.Npc.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setHp = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 mana = 9;
 * @return {number}
 */
proto.pb.Npc.prototype.getMana = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setMana = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 gender = 10;
 * @return {number}
 */
proto.pb.Npc.prototype.getGender = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setGender = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 texture = 11;
 * @return {number}
 */
proto.pb.Npc.prototype.getTexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setTexture = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 helmtexture = 12;
 * @return {number}
 */
proto.pb.Npc.prototype.getHelmtexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setHelmtexture = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 herosforgemodel = 13;
 * @return {number}
 */
proto.pb.Npc.prototype.getHerosforgemodel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setHerosforgemodel = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional float size = 14;
 * @return {number}
 */
proto.pb.Npc.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional int64 hpregenrate = 15;
 * @return {number}
 */
proto.pb.Npc.prototype.getHpregenrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setHpregenrate = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 manaregenrate = 16;
 * @return {number}
 */
proto.pb.Npc.prototype.getManaregenrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setManaregenrate = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 loottableid = 17;
 * @return {number}
 */
proto.pb.Npc.prototype.getLoottableid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLoottableid = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 merchantid = 18;
 * @return {number}
 */
proto.pb.Npc.prototype.getMerchantid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setMerchantid = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 altcurrencyid = 19;
 * @return {number}
 */
proto.pb.Npc.prototype.getAltcurrencyid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAltcurrencyid = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int64 npcspellsid = 20;
 * @return {number}
 */
proto.pb.Npc.prototype.getNpcspellsid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setNpcspellsid = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 npcspellseffectsid = 21;
 * @return {number}
 */
proto.pb.Npc.prototype.getNpcspellseffectsid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setNpcspellseffectsid = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int64 npcfactionid = 22;
 * @return {number}
 */
proto.pb.Npc.prototype.getNpcfactionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setNpcfactionid = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int64 adventuretemplateid = 23;
 * @return {number}
 */
proto.pb.Npc.prototype.getAdventuretemplateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAdventuretemplateid = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int64 traptemplate = 24;
 * @return {number}
 */
proto.pb.Npc.prototype.getTraptemplate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setTraptemplate = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int64 mindmg = 25;
 * @return {number}
 */
proto.pb.Npc.prototype.getMindmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setMindmg = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int64 maxdmg = 26;
 * @return {number}
 */
proto.pb.Npc.prototype.getMaxdmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setMaxdmg = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional int64 attackcount = 27;
 * @return {number}
 */
proto.pb.Npc.prototype.getAttackcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAttackcount = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional string Npcspecialattks = 28;
 * @return {string}
 */
proto.pb.Npc.prototype.getNpcspecialattks = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setNpcspecialattks = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string Specialabilities = 29;
 * @return {string}
 */
proto.pb.Npc.prototype.getSpecialabilities = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSpecialabilities = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional int64 aggroradius = 30;
 * @return {number}
 */
proto.pb.Npc.prototype.getAggroradius = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAggroradius = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional int64 assistradius = 31;
 * @return {number}
 */
proto.pb.Npc.prototype.getAssistradius = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAssistradius = function(value) {
  return jspb.Message.setProto3IntField(this, 31, value);
};


/**
 * optional int64 face = 32;
 * @return {number}
 */
proto.pb.Npc.prototype.getFace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setFace = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int64 luclinhairstyle = 33;
 * @return {number}
 */
proto.pb.Npc.prototype.getLuclinhairstyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLuclinhairstyle = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int64 luclinhaircolor = 34;
 * @return {number}
 */
proto.pb.Npc.prototype.getLuclinhaircolor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLuclinhaircolor = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional int64 luclineyecolor = 35;
 * @return {number}
 */
proto.pb.Npc.prototype.getLuclineyecolor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLuclineyecolor = function(value) {
  return jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional int64 luclineyecolor2 = 36;
 * @return {number}
 */
proto.pb.Npc.prototype.getLuclineyecolor2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLuclineyecolor2 = function(value) {
  return jspb.Message.setProto3IntField(this, 36, value);
};


/**
 * optional int64 luclinbeardcolor = 37;
 * @return {number}
 */
proto.pb.Npc.prototype.getLuclinbeardcolor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLuclinbeardcolor = function(value) {
  return jspb.Message.setProto3IntField(this, 37, value);
};


/**
 * optional int64 luclinbeard = 38;
 * @return {number}
 */
proto.pb.Npc.prototype.getLuclinbeard = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLuclinbeard = function(value) {
  return jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * optional int64 drakkinheritage = 39;
 * @return {number}
 */
proto.pb.Npc.prototype.getDrakkinheritage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDrakkinheritage = function(value) {
  return jspb.Message.setProto3IntField(this, 39, value);
};


/**
 * optional int64 drakkintattoo = 40;
 * @return {number}
 */
proto.pb.Npc.prototype.getDrakkintattoo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDrakkintattoo = function(value) {
  return jspb.Message.setProto3IntField(this, 40, value);
};


/**
 * optional int64 drakkindetails = 41;
 * @return {number}
 */
proto.pb.Npc.prototype.getDrakkindetails = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDrakkindetails = function(value) {
  return jspb.Message.setProto3IntField(this, 41, value);
};


/**
 * optional int64 armortintid = 42;
 * @return {number}
 */
proto.pb.Npc.prototype.getArmortintid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setArmortintid = function(value) {
  return jspb.Message.setProto3IntField(this, 42, value);
};


/**
 * optional int64 armortintred = 43;
 * @return {number}
 */
proto.pb.Npc.prototype.getArmortintred = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setArmortintred = function(value) {
  return jspb.Message.setProto3IntField(this, 43, value);
};


/**
 * optional int64 armortintgreen = 44;
 * @return {number}
 */
proto.pb.Npc.prototype.getArmortintgreen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setArmortintgreen = function(value) {
  return jspb.Message.setProto3IntField(this, 44, value);
};


/**
 * optional int64 armortintblue = 45;
 * @return {number}
 */
proto.pb.Npc.prototype.getArmortintblue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 45, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setArmortintblue = function(value) {
  return jspb.Message.setProto3IntField(this, 45, value);
};


/**
 * optional int64 dmeleetexture1 = 46;
 * @return {number}
 */
proto.pb.Npc.prototype.getDmeleetexture1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDmeleetexture1 = function(value) {
  return jspb.Message.setProto3IntField(this, 46, value);
};


/**
 * optional int64 dmeleetexture2 = 47;
 * @return {number}
 */
proto.pb.Npc.prototype.getDmeleetexture2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDmeleetexture2 = function(value) {
  return jspb.Message.setProto3IntField(this, 47, value);
};


/**
 * optional string ammoidfile = 48;
 * @return {string}
 */
proto.pb.Npc.prototype.getAmmoidfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAmmoidfile = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional int64 primmeleetype = 49;
 * @return {number}
 */
proto.pb.Npc.prototype.getPrimmeleetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setPrimmeleetype = function(value) {
  return jspb.Message.setProto3IntField(this, 49, value);
};


/**
 * optional int64 secmeleetype = 50;
 * @return {number}
 */
proto.pb.Npc.prototype.getSecmeleetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSecmeleetype = function(value) {
  return jspb.Message.setProto3IntField(this, 50, value);
};


/**
 * optional int64 rangedtype = 51;
 * @return {number}
 */
proto.pb.Npc.prototype.getRangedtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 51, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setRangedtype = function(value) {
  return jspb.Message.setProto3IntField(this, 51, value);
};


/**
 * optional float runspeed = 52;
 * @return {number}
 */
proto.pb.Npc.prototype.getRunspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 52, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setRunspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 52, value);
};


/**
 * optional int64 mr = 53;
 * @return {number}
 */
proto.pb.Npc.prototype.getMr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 53, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setMr = function(value) {
  return jspb.Message.setProto3IntField(this, 53, value);
};


/**
 * optional int64 cr = 54;
 * @return {number}
 */
proto.pb.Npc.prototype.getCr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 54, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCr = function(value) {
  return jspb.Message.setProto3IntField(this, 54, value);
};


/**
 * optional int64 dr = 55;
 * @return {number}
 */
proto.pb.Npc.prototype.getDr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 55, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDr = function(value) {
  return jspb.Message.setProto3IntField(this, 55, value);
};


/**
 * optional int64 fr = 56;
 * @return {number}
 */
proto.pb.Npc.prototype.getFr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 56, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setFr = function(value) {
  return jspb.Message.setProto3IntField(this, 56, value);
};


/**
 * optional int64 pr = 57;
 * @return {number}
 */
proto.pb.Npc.prototype.getPr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 57, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setPr = function(value) {
  return jspb.Message.setProto3IntField(this, 57, value);
};


/**
 * optional int64 corrup = 58;
 * @return {number}
 */
proto.pb.Npc.prototype.getCorrup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 58, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCorrup = function(value) {
  return jspb.Message.setProto3IntField(this, 58, value);
};


/**
 * optional int64 phr = 59;
 * @return {number}
 */
proto.pb.Npc.prototype.getPhr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 59, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setPhr = function(value) {
  return jspb.Message.setProto3IntField(this, 59, value);
};


/**
 * optional int64 seeinvis = 60;
 * @return {number}
 */
proto.pb.Npc.prototype.getSeeinvis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSeeinvis = function(value) {
  return jspb.Message.setProto3IntField(this, 60, value);
};


/**
 * optional int64 seeinvisundead = 61;
 * @return {number}
 */
proto.pb.Npc.prototype.getSeeinvisundead = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSeeinvisundead = function(value) {
  return jspb.Message.setProto3IntField(this, 61, value);
};


/**
 * optional int64 qglobal = 62;
 * @return {number}
 */
proto.pb.Npc.prototype.getQglobal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 62, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setQglobal = function(value) {
  return jspb.Message.setProto3IntField(this, 62, value);
};


/**
 * optional int64 ac = 63;
 * @return {number}
 */
proto.pb.Npc.prototype.getAc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 63, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAc = function(value) {
  return jspb.Message.setProto3IntField(this, 63, value);
};


/**
 * optional int64 npcaggro = 64;
 * @return {number}
 */
proto.pb.Npc.prototype.getNpcaggro = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 64, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setNpcaggro = function(value) {
  return jspb.Message.setProto3IntField(this, 64, value);
};


/**
 * optional int64 spawnlimit = 65;
 * @return {number}
 */
proto.pb.Npc.prototype.getSpawnlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSpawnlimit = function(value) {
  return jspb.Message.setProto3IntField(this, 65, value);
};


/**
 * optional float attackspeed = 66;
 * @return {number}
 */
proto.pb.Npc.prototype.getAttackspeed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 66, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAttackspeed = function(value) {
  return jspb.Message.setProto3FloatField(this, 66, value);
};


/**
 * optional int64 attackdelay = 67;
 * @return {number}
 */
proto.pb.Npc.prototype.getAttackdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 67, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAttackdelay = function(value) {
  return jspb.Message.setProto3IntField(this, 67, value);
};


/**
 * optional int64 findable = 68;
 * @return {number}
 */
proto.pb.Npc.prototype.getFindable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 68, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setFindable = function(value) {
  return jspb.Message.setProto3IntField(this, 68, value);
};


/**
 * optional int64 str = 69;
 * @return {number}
 */
proto.pb.Npc.prototype.getStr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 69, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setStr = function(value) {
  return jspb.Message.setProto3IntField(this, 69, value);
};


/**
 * optional int64 sta = 70;
 * @return {number}
 */
proto.pb.Npc.prototype.getSta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 70, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSta = function(value) {
  return jspb.Message.setProto3IntField(this, 70, value);
};


/**
 * optional int64 dex = 71;
 * @return {number}
 */
proto.pb.Npc.prototype.getDex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 71, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setDex = function(value) {
  return jspb.Message.setProto3IntField(this, 71, value);
};


/**
 * optional int64 agi = 72;
 * @return {number}
 */
proto.pb.Npc.prototype.getAgi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 72, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAgi = function(value) {
  return jspb.Message.setProto3IntField(this, 72, value);
};


/**
 * optional int64 int = 73;
 * @return {number}
 */
proto.pb.Npc.prototype.getInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 73, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setInt = function(value) {
  return jspb.Message.setProto3IntField(this, 73, value);
};


/**
 * optional int64 wis = 74;
 * @return {number}
 */
proto.pb.Npc.prototype.getWis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 74, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setWis = function(value) {
  return jspb.Message.setProto3IntField(this, 74, value);
};


/**
 * optional int64 cha = 75;
 * @return {number}
 */
proto.pb.Npc.prototype.getCha = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 75, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCha = function(value) {
  return jspb.Message.setProto3IntField(this, 75, value);
};


/**
 * optional int64 seehide = 76;
 * @return {number}
 */
proto.pb.Npc.prototype.getSeehide = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 76, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSeehide = function(value) {
  return jspb.Message.setProto3IntField(this, 76, value);
};


/**
 * optional int64 seeimprovedhide = 77;
 * @return {number}
 */
proto.pb.Npc.prototype.getSeeimprovedhide = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 77, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSeeimprovedhide = function(value) {
  return jspb.Message.setProto3IntField(this, 77, value);
};


/**
 * optional int64 trackable = 78;
 * @return {number}
 */
proto.pb.Npc.prototype.getTrackable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 78, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setTrackable = function(value) {
  return jspb.Message.setProto3IntField(this, 78, value);
};


/**
 * optional int64 isbot = 79;
 * @return {number}
 */
proto.pb.Npc.prototype.getIsbot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 79, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setIsbot = function(value) {
  return jspb.Message.setProto3IntField(this, 79, value);
};


/**
 * optional int64 exclude = 80;
 * @return {number}
 */
proto.pb.Npc.prototype.getExclude = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 80, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setExclude = function(value) {
  return jspb.Message.setProto3IntField(this, 80, value);
};


/**
 * optional int64 atk = 81;
 * @return {number}
 */
proto.pb.Npc.prototype.getAtk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 81, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAtk = function(value) {
  return jspb.Message.setProto3IntField(this, 81, value);
};


/**
 * optional int64 accuracy = 82;
 * @return {number}
 */
proto.pb.Npc.prototype.getAccuracy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 82, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAccuracy = function(value) {
  return jspb.Message.setProto3IntField(this, 82, value);
};


/**
 * optional int64 avoidance = 83;
 * @return {number}
 */
proto.pb.Npc.prototype.getAvoidance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 83, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setAvoidance = function(value) {
  return jspb.Message.setProto3IntField(this, 83, value);
};


/**
 * optional int64 slowmitigation = 84;
 * @return {number}
 */
proto.pb.Npc.prototype.getSlowmitigation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 84, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSlowmitigation = function(value) {
  return jspb.Message.setProto3IntField(this, 84, value);
};


/**
 * optional int64 version = 85;
 * @return {number}
 */
proto.pb.Npc.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 85, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 85, value);
};


/**
 * optional int64 maxlevel = 86;
 * @return {number}
 */
proto.pb.Npc.prototype.getMaxlevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 86, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setMaxlevel = function(value) {
  return jspb.Message.setProto3IntField(this, 86, value);
};


/**
 * optional int64 scalerate = 87;
 * @return {number}
 */
proto.pb.Npc.prototype.getScalerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 87, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setScalerate = function(value) {
  return jspb.Message.setProto3IntField(this, 87, value);
};


/**
 * optional int64 privatecorpse = 88;
 * @return {number}
 */
proto.pb.Npc.prototype.getPrivatecorpse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 88, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setPrivatecorpse = function(value) {
  return jspb.Message.setProto3IntField(this, 88, value);
};


/**
 * optional int64 uniquespawnbyname = 89;
 * @return {number}
 */
proto.pb.Npc.prototype.getUniquespawnbyname = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 89, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setUniquespawnbyname = function(value) {
  return jspb.Message.setProto3IntField(this, 89, value);
};


/**
 * optional int64 underwater = 90;
 * @return {number}
 */
proto.pb.Npc.prototype.getUnderwater = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 90, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setUnderwater = function(value) {
  return jspb.Message.setProto3IntField(this, 90, value);
};


/**
 * optional int64 isquest = 91;
 * @return {number}
 */
proto.pb.Npc.prototype.getIsquest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 91, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setIsquest = function(value) {
  return jspb.Message.setProto3IntField(this, 91, value);
};


/**
 * optional int64 emoteid = 92;
 * @return {number}
 */
proto.pb.Npc.prototype.getEmoteid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 92, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setEmoteid = function(value) {
  return jspb.Message.setProto3IntField(this, 92, value);
};


/**
 * optional float spellscale = 93;
 * @return {number}
 */
proto.pb.Npc.prototype.getSpellscale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 93, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSpellscale = function(value) {
  return jspb.Message.setProto3FloatField(this, 93, value);
};


/**
 * optional float healscale = 94;
 * @return {number}
 */
proto.pb.Npc.prototype.getHealscale = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 94, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setHealscale = function(value) {
  return jspb.Message.setProto3FloatField(this, 94, value);
};


/**
 * optional int64 notargethotkey = 95;
 * @return {number}
 */
proto.pb.Npc.prototype.getNotargethotkey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 95, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setNotargethotkey = function(value) {
  return jspb.Message.setProto3IntField(this, 95, value);
};


/**
 * optional int64 raidtarget = 96;
 * @return {number}
 */
proto.pb.Npc.prototype.getRaidtarget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 96, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setRaidtarget = function(value) {
  return jspb.Message.setProto3IntField(this, 96, value);
};


/**
 * optional int64 armtexture = 97;
 * @return {number}
 */
proto.pb.Npc.prototype.getArmtexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 97, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setArmtexture = function(value) {
  return jspb.Message.setProto3IntField(this, 97, value);
};


/**
 * optional int64 bracertexture = 98;
 * @return {number}
 */
proto.pb.Npc.prototype.getBracertexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 98, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setBracertexture = function(value) {
  return jspb.Message.setProto3IntField(this, 98, value);
};


/**
 * optional int64 handtexture = 99;
 * @return {number}
 */
proto.pb.Npc.prototype.getHandtexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 99, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setHandtexture = function(value) {
  return jspb.Message.setProto3IntField(this, 99, value);
};


/**
 * optional int64 legtexture = 100;
 * @return {number}
 */
proto.pb.Npc.prototype.getLegtexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLegtexture = function(value) {
  return jspb.Message.setProto3IntField(this, 100, value);
};


/**
 * optional int64 feettexture = 101;
 * @return {number}
 */
proto.pb.Npc.prototype.getFeettexture = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 101, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setFeettexture = function(value) {
  return jspb.Message.setProto3IntField(this, 101, value);
};


/**
 * optional int64 light = 102;
 * @return {number}
 */
proto.pb.Npc.prototype.getLight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 102, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setLight = function(value) {
  return jspb.Message.setProto3IntField(this, 102, value);
};


/**
 * optional int64 walkspeed = 103;
 * @return {number}
 */
proto.pb.Npc.prototype.getWalkspeed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 103, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setWalkspeed = function(value) {
  return jspb.Message.setProto3IntField(this, 103, value);
};


/**
 * optional int64 peqid = 104;
 * @return {number}
 */
proto.pb.Npc.prototype.getPeqid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 104, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setPeqid = function(value) {
  return jspb.Message.setProto3IntField(this, 104, value);
};


/**
 * optional int64 unique = 105;
 * @return {number}
 */
proto.pb.Npc.prototype.getUnique = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 105, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setUnique = function(value) {
  return jspb.Message.setProto3IntField(this, 105, value);
};


/**
 * optional int64 fixed = 106;
 * @return {number}
 */
proto.pb.Npc.prototype.getFixed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 106, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setFixed = function(value) {
  return jspb.Message.setProto3IntField(this, 106, value);
};


/**
 * optional int64 ignoredespawn = 107;
 * @return {number}
 */
proto.pb.Npc.prototype.getIgnoredespawn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 107, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setIgnoredespawn = function(value) {
  return jspb.Message.setProto3IntField(this, 107, value);
};


/**
 * optional int64 showname = 108;
 * @return {number}
 */
proto.pb.Npc.prototype.getShowname = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 108, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setShowname = function(value) {
  return jspb.Message.setProto3IntField(this, 108, value);
};


/**
 * optional int64 untargetable = 109;
 * @return {number}
 */
proto.pb.Npc.prototype.getUntargetable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 109, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setUntargetable = function(value) {
  return jspb.Message.setProto3IntField(this, 109, value);
};


/**
 * optional int64 charmac = 110;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmac = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 110, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmac = function(value) {
  return jspb.Message.setProto3IntField(this, 110, value);
};


/**
 * optional int64 charmmindmg = 111;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmmindmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 111, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmmindmg = function(value) {
  return jspb.Message.setProto3IntField(this, 111, value);
};


/**
 * optional int64 charmmaxdmg = 112;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmmaxdmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 112, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmmaxdmg = function(value) {
  return jspb.Message.setProto3IntField(this, 112, value);
};


/**
 * optional int64 charmattackdelay = 113;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmattackdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 113, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmattackdelay = function(value) {
  return jspb.Message.setProto3IntField(this, 113, value);
};


/**
 * optional int64 charmaccuracyrating = 114;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmaccuracyrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 114, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmaccuracyrating = function(value) {
  return jspb.Message.setProto3IntField(this, 114, value);
};


/**
 * optional int64 charmavoidancerating = 115;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmavoidancerating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 115, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmavoidancerating = function(value) {
  return jspb.Message.setProto3IntField(this, 115, value);
};


/**
 * optional int64 charmatk = 116;
 * @return {number}
 */
proto.pb.Npc.prototype.getCharmatk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 116, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCharmatk = function(value) {
  return jspb.Message.setProto3IntField(this, 116, value);
};


/**
 * optional int64 skipgloballoot = 117;
 * @return {number}
 */
proto.pb.Npc.prototype.getSkipgloballoot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 117, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setSkipgloballoot = function(value) {
  return jspb.Message.setProto3IntField(this, 117, value);
};


/**
 * optional int64 rarespawn = 118;
 * @return {number}
 */
proto.pb.Npc.prototype.getRarespawn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 118, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setRarespawn = function(value) {
  return jspb.Message.setProto3IntField(this, 118, value);
};


/**
 * optional int64 stuckbehavior = 119;
 * @return {number}
 */
proto.pb.Npc.prototype.getStuckbehavior = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 119, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setStuckbehavior = function(value) {
  return jspb.Message.setProto3IntField(this, 119, value);
};


/**
 * optional string cleanname = 122;
 * @return {string}
 */
proto.pb.Npc.prototype.getCleanname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 122, ""));
};


/**
 * @param {string} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setCleanname = function(value) {
  return jspb.Message.setProto3StringField(this, 122, value);
};


/**
 * optional int64 model = 123;
 * @return {number}
 */
proto.pb.Npc.prototype.getModel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 123, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setModel = function(value) {
  return jspb.Message.setProto3IntField(this, 123, value);
};


/**
 * optional int64 flymode = 124;
 * @return {number}
 */
proto.pb.Npc.prototype.getFlymode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 124, 0));
};


/**
 * @param {number} value
 * @return {!proto.pb.Npc} returns this
 */
proto.pb.Npc.prototype.setFlymode = function(value) {
  return jspb.Message.setProto3IntField(this, 124, value);
};


goog.object.extend(exports, proto.pb);
